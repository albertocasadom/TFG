SEEDLabs 1 VirtualPrivateNetwork VPN Lab Copyright©2018WenliangDu SyracuseUniversity ThedevelopmentofthisdocumentwaspartiallyfundedbytheNationalScienceFoundationunderAward No.1303306and1718086.ThisworkislicensedunderaCreativeCommonsAttribution-NonCommercial- ShareAlike4.0InternationalLicense.Ahuman-readablesummaryof andnotasubstitutefor thelicenseis thefollowing Youarefreetocopyandredistributethematerialinanymediumorformat.Youmustgive appropriatecredit.Ifyouremix transform orbuilduponthematerial youmustdistributeyourcontributions underthesamelicenseastheoriginal.Youmaynotusethematerialforcommercialpurposes 1Overview AVirtualPrivateNetwork VPN isusedforcreatingaprivatescopeofcomputercommunicationsorpro- vidingasecureextensionofaprivatenetworkintoaninsecurenetworksuchastheInternet.VPNisa widelyusedsecuritytechnology.VPNcanbebuiltuponIPSecorTLS/SSL TransportLayerSecurity/Se- cureSocketLayer .ThesearetwofundamentallydifferentapproachesforbuildingVPNs.Inthislab focusontheTLS/SSL-basedVPNs.ThistypeofVPNsisoftenreferredtoasTLS/SSLVPNs Thelearningobjectiveofthislabisforstudentstomasterthenetworkandsecuritytechnologiesunder- lyingVPNs.Toachievethisgoal studentswillbeaskedtoimplementasimpleTLS/SSLVPN.Although thisVPNissimple itdoesincludealltheessentialelementsofaVPN.Thedesignandimplementationof TLS/SSLVPNsexemplifyanumberofsecurityprinciples includingthefollowing Ł VirtualPrivateNetwork Ł TUN/TAP andIPtunneling Ł Routing Ł Public-keycryptography PKI andX.509 Ł TLS/SSLprogramming Ł Authentication Readingsandrelatedtopics DetailedcoverageofVPNcanbefoundinChapter16oftheSEEDbook ComputerSecurity AHands-onApproach byWenliangDu.ThelabalsorequiresPublic-KeyInfrastructure PKI andTLS/SSLprogramming theyarecoveredinChapters18and19oftheSEEDbook respectively WealsohaveaseparateSEEDlabfocusingonPKI.ItisrecommendedthatstudentsthePKIlab beforeworkingonthislab LabEnvironment Thislabhasbeentestedonourpre-builtUbuntu16.04VM.Weneedtousethe openssl packageinthislab.Thepackageincludestheheaderlibraries andcommands.Thepackage wasalreadyinstalledinourpre-builtVMimage SEEDLabs 2 2LabTasks Inthislab studentsneedtoimplementasimpleVPNfor Linux .Wewillcallit miniVPN 2.1Task1 VMSetup WewillcreateaVPNtunnelbetweenacomputer client andagateway allowingthecomputertosecurely accessaprivatenetworkviathegateway.WeneedatleastthreeVMs VPNclient alsoserverasHostU VPNserver thegateway andahostintheprivatenetwork HostV .Thenetworksetupisdepictedin Figure1 Figure1 VMsetupforthislab Inpractice theVPNclientandVPNserverareconnectedviatheInternet.Forthesakeofsimplicity wedirectlyconnectthesetwomachinestothesameLANinthislab i.e. thisLANsimulatestheInternet WewillusetheﬁNATNetworkﬂadaptorforthisLAN.Thethirdmachine HostV isacomputerinsidethe privatenetwork.UsersonHostU outsideoftheprivatenetwork wanttocommunicatewithHostVvia theVPNtunnel.Tosimulatethissetup weconnectHostVtoVPNServer alsoservingasagateway via anﬁInternalNetworkﬂ.Insuchasetup HostVisnotdirectlyaccessiblefromtheInternet norisitdirectly accessiblefromHostU NoteifaVMusestheﬁInternalNetworkﬂmode VirtualBoxprovidesnoDHCPtoit sotheVMmust bestaticallyTodothis clickthenetworkicononthetop-rightcornerofthedesktop andselect '' EditConnections '' .Youwillseealistof '' Wiredconnections '' oneforeachofthenetwork adaptorsusedbytheVM.ForHostV thereisonlyoneconnection butforVPNServer wewillseetwo TomakesurethatyoupicktheonethatiscorrespondingtotheﬁInternalNetworkﬂadapter Youcancheck theMACaddressdisplayedinthepop-upwindowafteryouhavepickedaconnectiontoedit.Comparethis MACaddresswiththeonethatyougetfrom ifconfig andyouwillknowwhetheryoupickedtheright connection Afteryouhaveselectedtherightconnectiontoedit pickthe '' ipv4Settings '' tabandselectthe '' Manual '' method insteadofthedefault '' Automatic DHCP '' .Clickthe '' Add '' buttontosetup thenewIPaddressfortheVM.SeeFigure2fordetails SEEDLabs 3 Figure2 ManuallysetuptheIPaddressforthe '' InternalNetwork '' adaptoronVPNServer 2.2Task2 CreatingaVPNTunnelusingTUN/TAP TheenablingtechnologyfortheTLS/SSLVPNsisTUN/TAP whichisnowwidelyimplementedinmodern operatingsystems.TUNandTAParevirtualnetworkkerneldrivers theyimplementnetworkdevicethat aresupportedentirelyinsoftware.TAP asinnetworktap simulatesanEthernetdeviceanditoperateswith layer-2packetssuchasEthernetframes TUN asinnetworkTUNnel simulatesanetworklayerdeviceand itoperateswithlayer-3packetssuchasIPpackets.WithTUN/TAP wecancreatevirtualnetworkinterfaces Auser-spaceprogramisusuallyattachedtotheTUN/TAPvirtualnetworkinterface.Packetssentbyan operatingsystemviaaTUN/TAPnetworkinterfacearedeliveredtotheuser-spaceprogram.Ontheother hand packetssentbytheprogramviaaTUN/TAPnetworkinterfaceareinjectedintotheoperatingsystem networkstack totheoperatingsystem itappearsthatthepacketscomefromanexternalsourcethroughthe virtualnetworkinterface WhenaprogramisattachedtoaTUN/TAPinterface theIPpacketsthatthecomputersendstothis interfacewillbepipedintotheprogram ontheotherhand theIPpacketsthattheprogramsendstothe interfacewillbepipedintothecomputer asiftheycamefromtheoutsidethroughthisvirtualnetwork interface.Theprogramcanusethestandard read write systemcallstoreceivepacketsfrom orsendpacketstothevirtualinterface WehavecreatedasampleVPNclientprogram vpnclient andaserverprogram vpnserver bothofwhichcanbedownloadedfromthislab'swebsite.TheprogramsareexplainedindetailsinChapter 16oftheSEEDbooktitled ComputerSecurity AHands-onApproach ? thechapteralsoexplainshow TUN/TAPworksandhowtouseittocreateVPN The vpnclient vpnserver programsarethetwoendsofaVPNtunnel.Theycommunicate witheachotherusingeitherTCPorUDPviathesocketsdepictedinFigure3.Inoursamplecode choosetouseUDPforthesakeofsimplicity.Thedottedlinebetweentheclientandserverdepictsthepath fortheVPNtunnel.TheVPNclientandserverprogramsconnecttothehostingsystemviaaTUNinterface throughwhichtheydotwothings 1 getIPpacketsfromthehostingsystem sothepacketscanbesent throughthetunnel 2 getIPpacketsfromthetunnel andthenforwardittothehostingsystem whichwill forwardthepackettoitsdestination.ThefollowingproceduredescribeshowtocreateaVPNtunnel usingthe vpnclient vpnserver programs SEEDLabs 4 Figure3 VPNclientandserver Step1 RunVPNServer WeruntheVPNserverprogram vpnserver ontheServerVM.Af- tertheprogramruns avirtualTUNnetworkinterfacewillappearinthesystem wecanseeitusingthe '' ifconfig-a '' command thenameoftheinterfacewillbe tun0 inmostcases buttheycanbe tunX X isanumber .ThisnewinterfaceisnotyetsoweneedtoitbygivingitanIP address.Weuse 192.168.53.1 forthisinterface Runthefollowingcommands.Thecommandwillstarttheserverprogram andthesecondcommand assignsanIPaddresstothe tun0 interfaceandthenactivatesit.Itshouldbenotedthatthecommand willblockandwaitforconnections soweneedtoanotherwindowrunthesecondcommand $ sudo./vpnserver Runthefollowingcommandinanotherwindow $ sudoifconfigtun0192.168.53.1/24up Unlessacomputerwillonlyactasahost notasagateway.TheVPNServer needstoforwardpacketsbetweentheprivatenetworkandthetunnel soitneedstofunctionasagateway WeneedtoenabletheIPforwardingforacomputertobehavelikeagateway.IPforwardingcanbeenabled usingthefollowingcommand $ sudosysctlnet.ipv4.ip_forward=1 Step2 RunVPNClient WenowruntheVPNclientprogramontheClientVM.Werunthefollow- ingcommandonthismachine thecommandwillconnecttotheVPNserverprogramrunningon 10.0.2.8 .Thiscommandwillblockaswell soweneedtoanotherwindowtothe tun0 interfacecreatedbytheVPNclientprogram.WeassignIPaddress 192.168.53.5 tothe tun0 interface OnVPNClientVM $ sudo./vpnclient10.0.2.8 Runthefollowingcommandinadifferentwindow $ sudoifconfigtun0192.168.53.5/24up SEEDLabs 5 Step3 SetUpRoutingonClientandServerVMs Aftertheabovetwosteps thetunnelwillbe established.Beforewecanusethetunnel weneedtosetuproutingpathsonbothclientandservermachines todirecttheintendedtrafthroughthetunnel.Ontheclientmachine weneedtodirectallthepacketsgoing totheprivatenetwork 192.168.60.0/24 towardsthe tun0 interface fromwherethepacketscanbe forwardedthroughtheVPNtunnel.Withoutthissetup wewillnotbeabletoaccesstheprivatenetworkat all.Wecanusethe route commandtoaddanroutingentry.Thefollowingexampleshowshowtoroute 10.20.30.0/24 -boundpacketstotheinterface eth0 $ sudorouteadd-net10.20.30.0/24eth0 Onbothclientandservermachines wealsoneedtosetuparoutingentrysoallthetrafgoingtothe 192.168.53.0/24 networkaredirectedtothe tun0 interface.Thisentrywillusuallybeautomatically addedwhenweassign 192.169.53.X tothe tun0 interface.Ifforsomereasonsitisnotadded wecan usethe route commandtoaddit Step4 SetUpRoutingonHostV WhenHostVrepliestoapacketsentfromHostU itneedstoroute thepacketstotheVPNServerVM fromwhere itcanbefedintotheVPNtunneltowardtheotherend Youneedtooutwhatentrytoadd andthenusethe route commandtoaddtheroutingentry.Hint whenHostVreceivesapacketfromHostU viathetunnel youneedtoknowwhatthesourceIPisinthe packet inthereplypacket thesourceIPbecomesthedestinationIP whichwillbeusedbytheroutingtable Therefore youneedtooutthesourceIPofthepacketsfromUtoV.Itisyourtasktothisout andsettheroutingcorrectlyinthisstep Step5 TesttheVPNTunnel Aftereverythingissetup wecanaccessHostVfromHostUviathe tunnel.Pleaseconductthefollowingtestsusing ping telnet pleasereportyourresults.Youshould useWiresharktocapturethenetworktrafonalltheinterfacesontheclientVM andpinpointwhich packetsarepartofthetunneltrafandwhichpacketsarenotthetunneltraf OnHostU $ ping192.168.60.101 $ telnet192.168.60.101 Step6 Tunnel-BreakingTest OnHostU telnet HostV .Whilekeepingthe telnet connection alive webreaktheVPNtunnel.Wethentypesomethinginthe telnet window andreportwhatyou observe.WethenreconnecttheVPNtunnel.Whatisgoingtohappentothe telnet connection ? Willit bebrokenorresumed ? Pleasedescribeandexplainyourobservations 2.3Task3 EncryptingtheTunnel Atthispoint wehavecreatedanIPtunnel butourtunnelisnotprotected.Onlyafterwehavesecured thistunnel canwecallitaVPNtunnel.Thisiswhatwearegoingtoachieveinthistask.Tosecurethis tunnel weneedtoachievetwogoals lityandintegrity.Theisachievedusing encryption i.e. thecontentsthatgothroughthetunnelisencrypted.Theintegritygoalensuresthatnobody cantamperwiththetrafinthetunnelorlaunchareplayattack.IntegritycanbeachievedusingMessage AuthenticationCode MAC .BothgoalscanbeachievedusingTransportLayerProtocol TLS TLSistypicallybuiltontopofTCP.ThesampleVPNclientandserverprogramsinTask2useUDP soweneedtoreplacetheUDPchannelinthesamplecodewithaTCPchannel andthenestablisha TLSsessionbetweenthetwoendsofthetunnel.AsampleTLSclientandserverprogram tlsclient SEEDLabs 6 tlsserver isprovidedinazipthatcanbedownloadedfromthewebsite.Instructionsonhowto compileandrunthecodeisprovidedintheREADMEincludedinthezipFordetailedexplanationof thesamplecode pleasereadChapter19oftheSEEDbook ComputerSecurity AHands-onApproach ? Inyourdemonstration youneedtouseWiresharktocapturethetrafinsidetheVPNtunnel andshow thatthetrafisindeedencrypted 2.4Task4 AuthenticatingtheVPNServer BeforeaVPNisestablished theVPNclientmustauthenticatetheVPNserver makingsurethattheserver isnotafraudulentone.Ontheotherhand theVPNservermustauthenticatetheclient i.e.user making surethattheuserhasthepermissiontoaccesstheprivatenetwork.Inthistask weimplementtheserver authentication theclientauthenticationisinthenexttask Atypicalwaytoauthenticateserversistousepublic-keyTheVPNserverneedstoget apublic-keyfromaAuthority CA .WhenaclientmakesaconnectiontotheVPN server theserverwillusethetoproveitistheintendedserver.TheHTTPSprotocolusesthis approachtoauthenticatewebservers ensuringthatyouaretalkingtoanintendedwebserver notafake one Inthislab MiniVPN shouldusesuchamethodtoauthenticatetheVPNserver.Wecanimplement anauthenticationprotocol suchasTLS/SSL fromthescratch butfortunately openssl hastakencare mostoftheworkforus.WejustneedtoourTLSsessionproperly openssl canconductthe authenticationautomaticallyforus Therearethreeimportantstepsinserverauthentication 1 verifyingthattheserverisvalid 2 verifyingthattheserveristheowneroftheand 3 verifyingthattheserveristheintended server forexample iftheuserintendstovisit example.com weneedtoensurethattheserverisindeed example.com notanothersite .Pleasepointoutwhatlinesofthecodeinyourprogramcarryoutthe aboveveInyourdemonstration youneedtodemonstratetwodifferentcasesregardingthethird vasuccessfulserverauthenticationwheretheserveristheintendedserver andafailedserver authenticationwheretheserverisnottheintendedserver Note Our MiniVPN programshouldbeabletocommunicatewithVPNserversondifferentmachines soyoucannothardcodethehostnameoftheVPNserverintheprogram.Thehostnameneedstobetypedin fromthecommandline.Thisnamerepresentstheuser'sintention soitshouldbeusedinthev ThisnameshouldalsobeusedtotheIPaddressoftheserver.Section3.2providesasampleprogram toshowyouhowtogettheIPaddressforagivenhostname OursampleTLSclientandserverprograms Serverauthenticationisimplementedinthesamplepro- gramsprovidedbyus.PartoftheauthenticationrequirestheoftheCAwhoissuestheserver WehaveputtwoCAinthe ./ca client folder oneistheCAthatissuesour server'scer thehostnameoftheserveris vpnlabserver.com andtheotheristheCAthatis- suesGoogle'scerTherefore thesampleTLSclientprogramcantalktoourownserver aswellas Google'sHTTPSserver $ ./tlsclientvpnlabserver.com4433 $ ./tlsclientwww.google.com443 Itshouldbenoted thatstudentsshouldnotuse vpnlabserver.com fromthesamplecodeastheir VPNservername instead theyshouldincludetheirlastname intheservername.Studentsshouldgen- SEEDLabs 7 eratetheirownCAinordertocreateserverTheobjectiveofthisrequirementistodifferentiate student'swork TouseourclienttotalktoanHTTPSserver weneedtogetitsCA'ssavethein ./ca client folder andcreateasymboliclinktoit orrenameit usingthehashvaluegenerated fromitssubjectForexample toenableourclienttotalktoGoogle whogetsitsfromaroot CAcalledﬁGeoTrustGlobalCAﬂ wegetthisrootCA'ste GeoTrustGlobalCA.pem fromthe Firefoxbrowser andrunthefollowingcommandtogetitshashandthensetupthesymboliclink $ opensslx509-inGeoTrustGlobalCA.pem-noout-subject_hash 2c543cd1 $ ln-sGeoTrustGlobalCA.pem 2c543cd1.0 $ ls-l lrwxrwxrwx1 ... 2c543cd1.0- > GeoTrustGlobalCA.pem lrwxrwxrwx1 ... 9b58639a.0- > cacert.pem -rw-r -- r -- 1 ... cacert.pem -rw-r -- r -- 1 ... GeoTrustGlobalCA.pem 2.5Task5 AuthenticatingtheVPNClient Accessingthemachinesinsideaprivatenetworkisaprivilegethatisonlygrantedtoauthorizedusers toeverybody.Therefore onlyauthorizedusersareallowedtoestablishaVPNtunnelwiththeVPNserver Inthistask authorizedusersarethosewhohaveavalidaccountontheVPNserver.Wewillthereforeuse thestandardpasswordauthenticationtoauthenticateusers.Basically whenausertriestoestablishaVPN tunnelwiththeVPNserver theuserwillbeaskedtoprovideausernameandapassword.Theserverwill checkitsshadow /etc/shadow ifamatchingrecordisfound theuserisauthenticated andthe VPNtunnelwillbeestablished.Ifthereisnomatch theserverwillbreakitsconnectionwiththeuser thusnotunnelwillbeestablished.SeeSection3.3forsamplecodeonhowtoauthenticateusersusingthe shadow 2.6Task6 SupportingMultipleClients Intherealworld oneVPNserveroftensupportsmultipleVPNtunnels.Namely theVPNserverallows morethanoneclientstoconnecttoitsimultaneously witheachclienthavingitsownVPNtunnel andthus itsownTLSsession .Our MiniVPN shouldsupportmultipleclients Inatypicalimplementation theVPNserverprocess theparentprocess willcreateachildprocessfor eachtunnel seeFigure4 .Whenapacketcomesfromthetunnel itscorrespondingchildprocesswillget thepacket andforwardittotheTUNinterface.Thisdirectionisthesameregardlessofwhethermultiple clientsaresupportedornot.Itistheotherdirectionthatbecomeschallenging.Whenapacketarrivesat theTUNinterface fromtheprivatenetwork theparentprocesswillgetthepacket nowitneedsto outwhichtunnelthispacketshouldgoto.Youneedtothinkabouthowtoimplementthisdecision-making logic Oncethedecisionismadeandatunnelisselected theparentprocessneedstosendthepackettothe childprocess towhichtheselectedtunnelisattached.ThiscallsforIPC Inter-ProcessCommunication Atypicalapproachistousepipes.WeprovideasampleprograminSection3.4todemonstratehowtouse pipesforIPC Childprocessesneedtomonitorthispipeinterface andreaddatafromitiftherearedata.Sincechild processesalsoneedtowatchoutfordatacomingfromthesocketinterface theyneedtosimultaneously SEEDLabs 8 Figure4 SupportingmultipleVPNclients monitormultipleinterfaces.Section3.5showshowtoachievethat 3Guidelines 3.1DisplayingTLSTinWireshark WiresharkTLS/SSLtrafbasedonportnumbers.Itknows 443 isthedefaultportnumberfor HTTPS butourVPNserverlistenstoadifferentandnon-standardportnumber.WeneedtoletWireshark knowthat otherwise WiresharkwillnotlabelourtrafasSSL/TLStrafHereiswhatwecando gotothe Edit menuinWireshark andclick Preferences Protocols HTTP andthenthe '' SSL/TLSPorts '' entry.AddyourSSLserverport.Forexample wecanchangethecontentofthe entryto 443,4433 4433 istheportusedbyourSSLserver Displayingdecrypted TheapproachshownaboveonlygetsWiresharktorecognizethetrafas TLS/SSLtrafWiresharkcannotdecrypttheencryptedtrafFordebuggingpurposes wewouldlike toseethedecryptedtrafWiresharkprovidessuchafeature allweneedtodoistoprovidetheserver's privatekeytoWireshark andWiresharkwillautomaticallyderivethesessionkeysfromtheTLS/SSLhand- shakeprotocol andusethesekeystodecrypttrafToprovidetheserver'sprivatekeytoWireshark thefollowing ClickEdit- > Preferences- > Protocols- > SSL Findthe '' RSAkeylist '' andclicktheEditbutton Providetherequiredinformationabouttheserver seethisexample IPAddress:10.0.2.65 Port:4433 Protocol ssl KeyFile /home/seed/vpn/server-key.pem privatkeyfile Password deesdees SEEDLabs 9 3.2GettingIPAddressfromHostname Givenahostname wecangettheIPaddressforthisname.Inoursample tlsclient program weuse gethostbyname functiontogettheIPaddress.However thisfunctionisobsoletebecauseitdoes notsupportIPV6.Applicationsshoulduse getaddrinfo instead.Thefollowingexampleshowsto howtousethisfunctiontogetIPaddresses # include < stdio.h > # include < stdlib.h > # include < netdb.h > # include < netinet/in.h > # include < sys/socket.h > # include < arpa/inet.h > structaddrinfohints * result intmain { hints.ai_family=AF_INET //AF_INETmeansIPv4onlyaddresses interror=getaddrinfo `` www.example.com '' NULL & hints & result error { fprintf stderr '' getaddrinfo % s\n '' gai_strerror error exit 1 } //TheresultmaycontainalistofIPaddress wetakethefirstone structsockaddr_in * ip= structsockaddr_in * result- > ai_addr printf `` IPAddress % s\n '' char * inet_ntoa ip- > sin_addr freeaddrinfo result return0 } 3.3AuthenticationUsingtheShadowFile Thefollowingprogramshowshowtoauthenticateauserusingtheaccountinformationstoredintheshadow Theprogramuses getspnam togetagivenuser'saccountinformationfromtheshadow includingthehashedpassword.Itthenuses crypt tohashagivenpasswordandseewhethertheresult matcheswiththevaluesfetchedfromtheshadowIfso theusernameandthepasswordmatch andthe authenticationissuccessful # include < stdio.h > # include < string.h > # include < shadow.h > # include < crypt.h > intlogin char * user char * passwd { structspwd * pw char * epasswd SEEDLabs 10 pw=getspnam user pw==NULL { return-1 } printf `` Loginname % s\n '' pw- > sp_namp printf `` Passwd % s\n '' pw- > sp_pwdp epasswd=crypt passwd pw- > sp_pwdp strcmp epasswd pw- > sp_pwdp { return-1 } return1 } voidmain intargc char ** argv { argc < 3 { printf `` Pleaseprovideausernameandapassword\n '' return } intr=login argv 1 argv 2 printf `` Result % d\n '' r } Wecancompilethecodeaboveandrunitwithausernameandapassword.Itshouldbenotedthatthe rootprivilegeisneededwhenreadingfromtheshadowSeethefollowingcommandsforcompilation andexecution $ gcclogin.c-lcrypt $ sudo./a.outseeddees Itshouldbenotedthatweuse -lcrypt intheabovecompilation weused -lcrypto whencompiling ourTLSprograms.The crypt crypto aretwodifferentlibraries sothisisnotatypo 3.4Inter-ProcessCommunicationUsingPipe Thefollowingprogramshowshowaparentprocesssendsdatatoitschildprocessusingpipe.Theparent processcreatesapipeusing pipe inLine À .Eachpipehastwoends theinputend'sdescriptoris fd 0 andtheoutputend'sdescriptoris fd 1 Afterthepipeiscreated achildprocessisspawnedusing fork .Bothparentandchildprocesses havethedescriptorsassociatedwiththepipe.Theycansenddatatoeachotherusingthethepipe isbi-directional.However wewillonlyusethispipetosenddatafromtheparentprocesstothechild process andtheparentwillnotreadanythingfromthepipe soweclosetheinputend fd 0 intheparent process.Similarly thechilddoesnotsendanythingviathepipe soitclosestheoutputend fd 1 .At thispoint wehaveestablishedauni-directionalpipefromtheparentprocesstothechildprocess.Tosend dataviathepipe theparentprocesswritesto fd 1 seeLine Á toreceivedatafromthepipe thechild processreadsfrom fd 0 seeLine Â SEEDLabs 11 # include < stdio.h > # include < stdlib.h > # include < unistd.h > # include < string.h > intmain void { intfd 2 nbytes pid_tpid charstring = '' Hello world ! \n '' charreadbuffer 80 pipe fd À pid=fork ==-1 { perror `` fork '' exit 1 } pid > 0 { //parentprocess close fd 0 //Closetheinputendofthepipe //Writedatatothepipe write fd 1 string strlen string +1 Á exit 0 } else { //childprocess close fd 1 //Closetheoutputendofthepipe //Readdatafromthepipe nbytes=read fd 0 readbuffer sizeof readbuffer Â printf `` Childprocessreceivedstring % '' readbuffer } return 0 } 3.5Using select toMonitorMultipleInputInterfaces OurVPNprogramneedstomonitormultipleinterfaces includingtheTUNinterface thesocketinterface andsometimes thepipeinterface.Alltheseinterfacesarerepresentedbydescriptors soweneedto monitorthemtoseewhethertherearedatacomingfromthem.Onewaytodothatistokeeppollingthem andseewhethertherearedataoneachoftheinterfaces.Theperformanceofthisapproachisundesirable becausetheprocesshastokeeprunninginanidleloopwhenthereisnodata.Anotherwayistoreadfrom aninterface.Bydefault readisblocking i.e. theprocesswillbesuspendediftherearenodata.When databecomeavailable theprocesswillbeunblocked anditsexecutionwillcontinue.Thisway itdoesnot wasteCPUtimewhenthereisnodata Theread-basedblockingmechanismworkswellforoneinterface.Ifaprocessiswaitingonmultiple interfaces itcannotblockonjustoneoftheinterfaces.Ithastoblockonallofthemaltogether Linux hasa systemcallcalled select whichallowsaprogramtomonitormultipledescriptorssimultaneously Touse select weneedtostoreallthedescriptorstobemonitoredinasetusingthe FD SET macro seeLines À Á inthecodebelow .Wethengivethesettothe select systemcall Line Â SEEDLabs 12 whichwillblocktheprocessuntildataareavailableononeofthedescriptorsintheset.Wecanthenuse FD ISSET macrotooutwhichledescriptorhasreceiveddata.Inthefollowingcodeexample weuse select tomonitora TUN andasocketdescriptor fd_setreadFDSet intret sockfd tunfd FD_ZERO & readFDSet FD_SET sockfd & readFDSet À FD_SET tunfd & readFDSet Á ret=select FD_SETSIZE & readFDSet NULL NULL NULL Â FD_ISSET sockfd & readFDSet { //Readdatafromsockfd anddosomething. } FD_ISSET tunfd & readFDSet { //Readdatafromtunfd anddosomething. } 3.6Anexample using telnet inourVPN Tohelpyoufullyunderstandhowpacketsfromanapplicationwtoitsdestinationthroughour MiniVPN wehavedrawntwotoillustratethecompletepacketwpathwhenusersrun telnet10.0.20.100 fromahostmachine whichisthePointAofahost-to-gatewayVPN.TheotherendoftheVPNisona gateway whichisconnectedtothe 10.0.20.0/24 network whereour telnet server 10.0.20.100 resides Figure5 showshowapacketwfromthe telnet clienttotheserver.Figure5 b showshow apacketwfromthe telnet serverbacktotheclient.WewillonlydescribethepathinFigure5 inthefollowing.Thereturnpathisself-explainedfromFigure5 b onceyouhaveunderstoodthepathin Figure5 1 Thedataofthepacketstartsfromthe telnet program 2 ThekernelwillconstructanIPpacket withthedestinationIPaddressbeing 10.0.20.100 3 Thekernelneedstodecidewhichnetworkinterfacethepacketshouldberoutedthrough eth1 tun0 .Youneedtosetupyourroutingtablecorrectlyforthekerneltopick tun0 .Oncethedecision ismade thekernelwillsetthesourceIPaddressofthepacketusingtheIPaddressofthenetwork interface whichis 10.0.4.1 4 ThepacketwillreachourVPNprogram PointA throughthevirtualinterface tun0 thenitwillbe encrypted andthenbesentbacktothekernelthroughaUDPport notthroughthe tun0 interface ThisisbecauseourVPNprogramusetheUDPasourtunnel 5 ThekernelwilltreattheencryptedIPpacketasUDPdata constructanewIPpacket andputthe entireencryptedIPpacketasitsUDPpayload.ThenewIP'sdestinationaddresswillbetheotherend ofthetunnel decidedbytheVPNprogramwewrite inthethenewIP'sdestinationaddress 128.230.208.97 6 Youneedtosetupyourroutingtablecorrectly sothenewpacketwillberoutedthroughtheinteraface eth1 therefore thesourceIPaddressofthisnewpacketshouldbe 209.164.131.32 SEEDLabs 13 7 ThepacketwillnowwthroughtheInternet withtheoriginal telnet packetbeingentirelyen- crypted andcarriedinthepayloadofthepacket.Thisiswhyitiscalleda tunnel 8 Thepacketwillreachourgateway 128.230.208.97 throughitsinterface eth1 9 ThekernelwillgivetheUDPpayload i.e.theencryptedIPpacket totheVPNprogram PointB whichiswaitingforUDPdata.ThisisthroughtheUDPport 10 TheVPNprogramwilldecryptthepayload andthenfeedthedecryptedpayload whichistheoriginal telnet packet backtothekernelthroughthevirtualnetworkinterface tun0 11 Sinceitcomesthroughanetworkinterface thekernelwilltreatitasanIPpacket itisindeedanIP packet lookatitsdestinationIPaddress anddecidewheretorouteit.Remember thedestinationIP addressofthispacketis 10.0.20.100 .Ifyourroutingtableissetupcorrectly thepacketshould beroutedthrough eth2 becausethisistheinterfacethatconnectstothe 10.0.20.0/24 network 12 The telnet packetwillnowbedeliveredtoitsdestination 10.0.20.100 4SubmissionandDemonstration Youshouldsubmitadetailedlabreporttodescribeyourdesignandimplementation.Youshouldalsode- scribehowyoutestthefunctionalitiesandsecurityofyoursystem.Youalsoneedtodemonstrateyour systemtous.PleasesignupademonstrationtimeslotwiththeTA.Pleasetakethefollowingintoconsider- ationwhenyoupreparefordemonstraiton Ł Thetotaltimeofthedemowillbe15minutes nomoreadditionaltimewouldbegiven.Soprepare yourdemonstrationsoyoucancovertheimportantfeatures Ł Youareentirelyresponsibleforshowingthedemo.WewillNOTeventouchthekeyboardduring thedemonstration soyoushouldnotdependonustotestyoursystem.Ifyoufailtodemosome importantfeaturesofyoursystem wewillassumethatyoursystemdoesnothavethosefeatures Ł Youneedtopracticebeforeyoucometothedemonstration.Ifthesystemcrashesoranythinggoes wrong itisyourownfault.Wewillnotdebugyourproblems norgiveyouextratimeforit Ł Duringthedemo youshouldconsideryourselfassalesmen andyouwanttosellyoursystemtous Youaregiven15minutestoshowushowgoodyoursystemis.Sothinkaboutyoursalesstrategies Ifyouhaveimplementedagreatsystem butfailtoshowushowgooditis youarenotlikelytogeta goodgrade Ł Doturnoffthemessagesyoursystemprintsoutfordebuggingpurposes.Thosemessagesshouldnot appearinademonstration SEEDLabs 14 AnExampleofpacketwfromtelnetclienttoserverinHost-to-GatewayTunnel b AnExampleofpacketwfromtelnetservertoclientinHost-to-GatewayTunnel Figure5 AnExampleofPacketFlowinVPN 