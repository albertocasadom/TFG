SEEDLabsŒPKILab 1 Public-KeyInfrastructure PKI Lab Copyright©2018WenliangDu SyracuseUniversity ThedevelopmentofthisdocumentwaspartiallyfundedbytheNationalScienceFoundationunderAward No.1303306and1718086.ThisworkislicensedunderaCreativeCommonsAttribution-NonCommercial- ShareAlike4.0InternationalLicense.Ahuman-readablesummaryof andnotasubstitutefor thelicenseis thefollowing Youarefreetocopyandredistributethematerialinanymediumorformat.Youmustgive appropriatecredit.Ifyouremix transform orbuilduponthematerial youmustdistributeyourcontributions underthesamelicenseastheoriginal.Youmaynotusethematerialforcommercialpurposes 1LabOverview Publickeycryptographyisthefoundationoftoday'ssecurecommunication butitissubjecttoman-in-the- middleattackswhenonesideofcommunicationsendsitspublickeytotheotherside.Thefundamental problemisthatthereisnoeasywaytoverifytheownershipofapublickey i.e. givenapublickeyandits claimedownerinformation howdoweensurethatthepublickeyisindeedownedbytheclaimedowner ? ThePublicKeyInfrastructure PKI isapracticalsolutiontothisproblem ThelearningobjectiveofthislabisforstudentstogaintheexperienceonPKI.SEEDlabs haveaseriesoflabsfocusingonthepublic-keycryptography andthisonefocusesonPKI.Bydoingthe tasksinthislab studentsshouldbeabletogainabetterunderstandingofhowPKIworks howPKIisused toprotecttheWeb andhowMan-in-the-middleattackscanbedefeatedbyPKI.Moreover studentswillbe abletounderstandtherootofthetrustinthepublic-keyinfrastructure andwhatproblemswillariseifthe roottrustisbroken.Thislabcoversthefollowingtopics Ł Public-keyencryption Ł Public-KeyInfrastructure PKI Ł Authority CA androotCA Ł X.509andself-signed Ł Apache HTTP andHTTPS Ł Man-in-the-middleattacks Readingsandrelatedtopics DetailedcoverageofPKIcanbefoundinChapter18oftheSEEDbook ComputerSecurity AHands-onApproach byWenliangDu.AtopicrelatedtothislabistheTransport LayerSecurity TLS whichisbasedonPKI.HowTLSworksandhowtowritesecureprogramsusing TLSarecoveredindetailsinChapter19oftheSEEDbook.Wealsohaveaseparatelab RSAPublic-Key EncryptionandSignatureLab forstudentswhoareinterestedinlearninghowtheunderlyingpublic-key algorithmworks Labenvironment Thislabhasbeentestedonourpre-builtUbuntu12.04VMandUbuntu16.04VM bothofwhichcanbedownloadedfromtheSEEDwebsite.Inthislab wewilluse openssl commands andlibraries.TheyhavealreadybeeninstalledinourVMs SEEDLabsŒPKILab 2 2LabTasks 2.1Task1 BecomingaAuthority CA AAuthority CA isatrustedentitythatissuesdigitalThedigitalcerti- theownershipofapublickeybythenamedsubjectoftheAnumberofcommercialCAs aretreatedasrootCAs VeriSignisthelargestCAatthetimeofwriting.Userswhowanttogetdigital issuedbythecommercialCAsneedtopaythoseCAs Inthislab weneedtocreatedigitalbutwearenotgoingtopayanycommercialCA.We willbecomearootCAourselves andthenusethisCAtoissueforothers e.g.servers .Inthis task wewillmakeourselvesarootCA andgenerateaforthisCA.Unlikeother whichareusuallysignedbyanotherCA therootCA'sareself-signed.RootCA'sare usuallypre-loadedintomostoperatingsystems webbrowsers andothersoftwarethatrelyonPKI.Root CA'sareunconditionallytrusted TheFile openssl.conf Inordertouse OpenSSL tocreateyouhaveto haveaTheusuallyhasanextension .cnf .Itisusedbythree OpenSSL commands ca req x509 .Themanualpageof openssl.conf canbefoundusingGooglesearch Youcanalsogetacopyofthefrom /usr/lib/ssl/openssl.cnf .Aftercopying thisintoyourcurrentdirectory youneedtocreateseveralsub-directoriesasinthe lookatthe CA default section dir=./demoCA # Whereeverythingiskept certs= $ dir/certs # Wheretheissuedcertsarekept crl_dir= $ dir/crl # Wheretheissuedcrlarekept new_certs_dir= $ dir/newcerts # defaultplacefornewcerts database= $ dir/index.txt # databaseindexfile serial= $ dir/serial # Thecurrentserialnumber Forthe index.txt simplycreateanemptyForthe serial putasinglenumberin stringformat e.g.1000 intheOnceyouhavesetupthe openssl.cnf youcan createandissue Authority CA Aswedescribedbefore weneedtogenerateaself-signedforour CA.ThismeansthatthisCAistotallytrusted anditswillserveastherootYoucan runthefollowingcommandtogeneratetheself-signedfortheCA $ opensslreq-new-x509-keyoutca.key-outca.crt-configopenssl.cnf Youwillbepromptedforinformationandapassword.Donotlosethispassword becauseyouwill havetotypethepassphraseeachtimeyouwanttousethisCAtosignforothers.Youwillalso beaskedtoinsomeinformation suchastheCountryName CommonName etc.Theoutputofthe commandarestoredintwoes ca.key ca.crt .The ca.key containstheCA'sprivatekey ca.crt containsthepublic-key 2.2Task2 Creatingafor SEEDPKILab2018.com Now webecomearootCA wearereadytosigndigitalforourcustomers.Ourcustomer isacompanycalled SEEDPKILab2018.com .ForthiscompanytogetadigitalfromaCA needstogothroughthreesteps SEEDLabsŒPKILab 3 Step1 Generatepublic/privatekeypair Thecompanyneedstocreateitsownpublic/privatekey pair.WecanrunthefollowingcommandtogenerateanRSAkeypair bothprivateandpublickeys Youwillalsoberequiredtoprovideapasswordtoencrypttheprivatekey usingtheAES-128encryption algorithm asisinthecommandoption .Thekeyswillbestoredinthe server.key $ opensslgenrsa-aes128-outserver.key1024 The server.key isanencodedtext alsoencrypted soyouwillnotbeabletoseetheactual content suchasthemodulus privateexponents etc.Toseethose youcanrunthefollowingcommand $ opensslrsa-inserver.key-text Step2 GenerateaSigningRequest CSR Oncethecompanyhasthekeyitshould generatesaSigningRequest CSR whichbasicallyincludesthecompany'spublickey.The CSRwillbesenttotheCA whowillgenerateaforthekey usuallyafterensuringthatidentity informationintheCSRmatcheswiththeserver'strueidentity .Pleaseuse SEEDPKILab2018.com thecommonnameoftherequest $ opensslreq-new-keyserver.key-outserver.csr-configopenssl.cnf Itshouldbenotedthattheabovecommandisquitesimilartotheoneweusedincreatingtheself-signed fortheCA.Theonlydifferenceisthe -x509 option.Withoutit thecommandgeneratesa request withit thecommandgeneratesaself-signed Step3 Generating TheCSRneedstohavetheCA'ssignaturetoforma Intherealworld theCSRareusuallysenttoatrustedCAfortheirsignature.Inthislab wewill useourowntrustedCAtogenerate.Thefollowingcommandturnsthesigningre- quest server.csr intoanX509 server.crt usingtheCA's ca.crt ca.key $ opensslca-inserver.csr-outserver.crt-certca.crt-keyfileca.key\ -configopenssl.cnf If OpenSSL refusestogenerateitisverylikelythatthenamesinyourrequestsdonotmatch withthoseofCA.Thematchingrulesareinthe lookatthe policy match section .Youcanchangethenamesofyourrequeststocomplywiththepolicy oryoucanchangethepolicy Thealsoincludesanotherpolicy called policy anything whichislessrestrictive Youcanchoosethatpolicybychangingthefollowingline '' policy=policy_match '' changeto '' policy=policy_anything '' 2.3Task3 DeployinginanHTTPSWebServer Inthislab wewillexplorehowpublic-keyareusedbywebsitestosecurewebbrowsing.We willsetupanHTTPSwebsiteusing openssl 'sbuilt-inwebserver Step1 DNS Wechoose SEEDPKILab2018.com asthenameofourwebsite.Togetour computersrecognizethisname letusaddthefollowingentryto /etc/hosts thisentrybasicallymaps thehostname SEEDPKILab2018.com toourlocalhost i.e.,127.0.0.1 127.0.0.1SEEDPKILab2018.com SEEDLabsŒPKILab 4 Step2 thewebserver Letuslaunchasimplewebserverwiththegeneratedin theprevioustask OpenSSL allowsustostartasimplewebserverusingthe server command # Combinethesecretkeyandcertificateintoonefile % cpserver.keyserver.pem % catserver.crt > > server.pem # Launchthewebserverusingserver.pem % openssls_server-certserver.pem-www Bydefault theserverwilllistenonport 4433 .Youcanalterthatusingthe -accept option.Now youcanaccesstheserverusingthefollowingURL https //SEEDPKILab2018.com:4433/ .Most likely youwillgetanerrormessagefromthebrowser.InFirefox youwillseeamessagelikethefollowing ﬁseedpkilab2018.com:4433usesaninvalidsecurity.Theisnottrustedbecausethe issuerisunknownﬂ Step3 GettingthebrowsertoacceptourCA HadourbeenassignedbyVeriSign wewillnothavesuchanerrormessage becauseVeriSign'sisverylikelypreloadedintoFirefox's repositoryalready.Unfortunately theof SEEDPKILab2018.com issignedbyour ownCA i.e. using ca.crt andthisCAisnotrecognizedbyFirefox.TherearetwowaystogetFirefox toacceptourCA'sself-signed Ł WecanrequestMozillatoincludeourCA'sinitsFirefoxsoftware soeverybodyusing FirefoxcanrecognizeourCA.ThisishowtherealCAs suchasVeriSign gettheirinto Firefox.Unfortunately ourownCAdoesnothavealargeenoughmarketforMozillatoincludeour sowewillnotpursuethisdirection Ł Load ca.crt intoFirefox WecanmanuallyaddourCA'stotheFirefoxbrowserby clickingthefollowingmenusequence Edit- > Preference- > Privacy & Security- > ViewCertificates YouwillseealistofthatarealreadyacceptedbyFirefox.Fromhere wecanﬁimportﬂour ownPleaseimport ca.crt andselectthefollowingoption ﬁTrustthisCAtoidentify websitesﬂ.YouwillseethatourCA'sisnowinFirefox'slistoftheaccepted Step4.TestingourHTTPSwebsite Now pointthebrowserto https //SEEDPKILab2018.com 4433 .Pleasedescribeandexplainyourobservations.Pleasealsodothefollowingtasks 1 Modifyasinglebyteof server.pem andrestarttheserver andreloadtheURL.Whatdoyou observe ? Makesureyourestoretheoriginal server.pem afterward.Note theservermaynotbe abletorestartifcertainplacesof server.pem iscorrupted inthatcase chooseanotherplaceto modify 2 Since SEEDPKILab2018.com pointstothelocalhost ifweuse https //localhost:4433 instead wewillbeconnectingtothesamewebserver.Pleasedoso describeandexplainyour observations SEEDLabsŒPKILab 5 2.4Task4 DeployinginanApache-BasedHTTPSWebsite TheHTTPSserversetupusing openssl 's server commandisprimarilyfordebugginganddemon- strationpurposes.Inthislab wesetuparealHTTPSwebserverbasedonApache.TheApacheserver whichisalreadyinstalledinourVM supportstheHTTPSprotocol.TocreateanHTTPSwebsite wejust needtotheApacheserver soitknowswheretogettheprivatekeyandWegivean exampleinthefollowingtoshowhowtoenableHTTPSforawebsite www.example.com .Youtaskisto dothesamefor SEEDPKILab2018.com usingthegeneratedfromprevioustasks AnApacheservercansimultaneouslyhostmultiplewebsites.Itneedstoknowthedirectorywhere awebsite'sarestored.Thisisdoneviaits VirtualHost locatedinthe /etc/apache2/ sites-available directory.ToaddanHTTPwebsite weadda VirtualHost entrytothe 000-default.conf .Seethefollowingexample < VirtualHost * :80 > ServerNameone.example.com DocumentRoot/var/www/Example_One DirectoryIndexindex.html < /VirtualHost > ToaddanHTTPSwebsite weneedtoadda VirtualHost entrytothe default-ssl.conf inthesamefolder < VirtualHost * :443 > ServerNametwo.example.com DocumentRoot/var/www/Example_Two DirectoryIndexindex.html SSLEngineOn SSLCertificateFile/etc/apache2/ssl/example_cert.pem À SSLCertificateKeyFile/etc/apache2/ssl/example_key.pem Á < /VirtualHost > The ServerName entrythenameofthewebsite whilethe DocumentRoot entry wheretheforthewebsitearestored.TheaboveexamplesetsuptheHTTPSsite https //two example.com port 443 isthedefaultHTTPSport .Inthesetup weneedtotellApachewherethe server Line À andprivatekey Line Á arestored Afterthe default-ssl.conf isweneedtorunaseriesofcommandstoenableSSL Apachewillaskustotypethepasswordusedforencryptingtheprivatekey.Onceeverythingissetup properly wecanbrowsethewebsite andallthetrafbetweenthebrowserandtheserverwillbeencrypted //TesttheApacheconfigurationfileforerrors $ sudoapachectlconfigtest //EnabletheSSLmodule $ sudoa2enmodssl //Enablethesitewehavejustedited $ sudoa2ensitedefault-ssl //RestartApache $ sudoserviceapache2restart PleaseusetheaboveexampleasguidancetosetupanHTTPSserverfor SEEDPKILab2018.com SEEDLabsŒPKILab 6 Pleasedescribethestepsthatyouhavetaken thecontentsthatyouaddtoApache'sand thescreenshotsoftheoutcomeshowingthatyoucansuccessfullybrowsetheHTTPSsite 2.5Task5 LaunchingaMan-In-The-MiddleAttack Inthistask wewillshowhowPKIcandefeatMan-In-The-Middle MITM attacks.Figure1depictshow MITMattackswork.AssumeAlicewantstovisit example.com viatheHTTPSprotocol.Sheneedstoget thepublickeyfromthe example.com server Alicewillgenerateasecret andencryptthesecretusingthe server'spublickey andsendittotheserver.IfanattackercaninterceptthecommunicationbetweenAlice andtheserver theattackercanreplacetheserver'spublickeywithitsownpublickey.Therefore Alice's secretisactuallyencryptedwiththeattacker'spublickey sotheattackerwillbeabletoreadthesecret.The attackercanforwardthesecrettotheserverusingtheserver'spublickey.Thesecretisusedtoencryptthe communicationbetweenAliceandserver sotheattackercandecrypttheencryptedcommunication Figure1 AMan-In-The-Middle MITM attack ThegoalofthistaskistohelpstudentsunderstandhowPKIcandefeatsuchMITMattacks.Inthetask wewillemulateanMITMattack andseehowexactlyPKIcandefeatit.Wewillselectatargetwebsite Inthisdocument weuse example.com asthetargetwebsite butinthetask tomakeitmoremeaningful studentsshouldpickapopularwebsite suchasabankingsiteandsocialnetworksite Step1 Settingupthemaliciouswebsite InTask4 wehavealreadysetupanHTTPSwebsitefor SEEDPKILab2018.com .WewillusethesameApacheservertoimpersonate example.com orthe sitechosenbystudents .Toachievethat wewillfollowtheinstructioninTask4toadda VirtualHost entrytoApache'sSSLthe ServerName shouldbe example.com buttherestof thecanbethesameasthatusedinTask4.Ourgoalisthefollowing whenausertriesto visit example.com wearegoingtogettheusertolandinourserver whichhostsafakewebsitefor example.com .Ifthiswereasocialnetworkwebsite Thefakesitecandisplayaloginpagesimilartothe oneinthetargetwebsite.Ifuserscannottellthedifference theymaytypetheiraccountcredentialsinthe fakewebpage essentiallydisclosingthecredentialstotheattacker Step2 Becomingthemaninthemiddle Thereareseveralwaystogettheuser'sHTTPSrequesttoland inourwebserver.Onewayistoattacktherouting sotheuser'sHTTPSrequestisroutedtoourwebserver AnotherwayistoattackDNS sowhenthevictim'smachinetriestoouttheIPaddressofthetargetweb server itgetstheIPaddressofourwebserver.Inthistask weuseﬁattackﬂDNS.Insteadoflaunchingan actualDNScachepoisoningattack wesimplymodifythevictim'smachine's /etc/hosts toemulate theresultofaDNScachepositingattack IP Address inthefollowingshouldbereplacedbythe actualIPaddressofthemaliciousserver SEEDLabsŒPKILab 7 < IP_Address > example.com Step3 Browsethetargetwebsite Witheverythingsetup nowvisitthetargetrealwebsite andseewhat yourbrowserwouldsay.Pleaseexplainwhatyouhaveobserved 2.6Task6 LaunchingaMan-In-The-MiddleAttackwithaCompromisedCA Unfortunately therootCAthatwecreatedinTask1iscompromisedbyanattacker anditsprivatekeyis stolen.Therefore theattackercangenerateanyarbitraryusingthisCA'sprivatekey.Inthistask wewillseetheconsequenceofsuchacompromise PleasedesignanexperimenttoshowthattheattackercansuccessfullylaunchMITMattacksonany HTTPSwebsite.YoucanusethesamesettingcreatedinTask5 butthistime youneedtodemonstratethat theMITMattackissuccessful i.e. thebrowserwillnotraiseanysuspicionwhenthevictimtriestovisita websitebutlandintheMITMattacker'sfakewebsite 3Submission Youneedtosubmitadetailedlabreporttodescribewhatyouhavedoneandwhatyouhaveobserved alsoneedtoprovideexplanationtotheobservationsthatareinterestingorsurprising.Inyourreport needtoanswerallthequestionslistedinthislab SEEDLabsŒPKILab 1 Public-KeyInfrastructure PKI Lab Copyright©2018WenliangDu SyracuseUniversity ThedevelopmentofthisdocumentwaspartiallyfundedbytheNationalScienceFoundationunderAward No.1303306and1718086.ThisworkislicensedunderaCreativeCommonsAttribution-NonCommercial- ShareAlike4.0InternationalLicense.Ahuman-readablesummaryof andnotasubstitutefor thelicenseis thefollowing Youarefreetocopyandredistributethematerialinanymediumorformat.Youmustgive appropriatecredit.Ifyouremix transform orbuilduponthematerial youmustdistributeyourcontributions underthesamelicenseastheoriginal.Youmaynotusethematerialforcommercialpurposes 1LabOverview Publickeycryptographyisthefoundationoftoday'ssecurecommunication butitissubjecttoman-in-the- middleattackswhenonesideofcommunicationsendsitspublickeytotheotherside.Thefundamental problemisthatthereisnoeasywaytoverifytheownershipofapublickey i.e. givenapublickeyandits claimedownerinformation howdoweensurethatthepublickeyisindeedownedbytheclaimedowner ? ThePublicKeyInfrastructure PKI isapracticalsolutiontothisproblem ThelearningobjectiveofthislabisforstudentstogaintheexperienceonPKI.SEEDlabs haveaseriesoflabsfocusingonthepublic-keycryptography andthisonefocusesonPKI.Bydoingthe tasksinthislab studentsshouldbeabletogainabetterunderstandingofhowPKIworks howPKIisused toprotecttheWeb andhowMan-in-the-middleattackscanbedefeatedbyPKI.Moreover studentswillbe abletounderstandtherootofthetrustinthepublic-keyinfrastructure andwhatproblemswillariseifthe roottrustisbroken.Thislabcoversthefollowingtopics Ł Public-keyencryption Ł Public-KeyInfrastructure PKI Ł Authority CA androotCA Ł X.509andself-signed Ł Apache HTTP andHTTPS Ł Man-in-the-middleattacks Readingsandrelatedtopics DetailedcoverageofPKIcanbefoundinChapter18oftheSEEDbook ComputerSecurity AHands-onApproach byWenliangDu.AtopicrelatedtothislabistheTransport LayerSecurity TLS whichisbasedonPKI.HowTLSworksandhowtowritesecureprogramsusing TLSarecoveredindetailsinChapter19oftheSEEDbook.Wealsohaveaseparatelab RSAPublic-Key EncryptionandSignatureLab forstudentswhoareinterestedinlearninghowtheunderlyingpublic-key algorithmworks Labenvironment Thislabhasbeentestedonourpre-builtUbuntu12.04VMandUbuntu16.04VM bothofwhichcanbedownloadedfromtheSEEDwebsite.Inthislab wewilluse openssl commands andlibraries.TheyhavealreadybeeninstalledinourVMs SEEDLabsŒPKILab 2 2LabTasks 2.1Task1 BecomingaAuthority CA AAuthority CA isatrustedentitythatissuesdigitalThedigitalcerti- theownershipofapublickeybythenamedsubjectoftheAnumberofcommercialCAs aretreatedasrootCAs VeriSignisthelargestCAatthetimeofwriting.Userswhowanttogetdigital issuedbythecommercialCAsneedtopaythoseCAs Inthislab weneedtocreatedigitalbutwearenotgoingtopayanycommercialCA.We willbecomearootCAourselves andthenusethisCAtoissueforothers e.g.servers .Inthis task wewillmakeourselvesarootCA andgenerateaforthisCA.Unlikeother whichareusuallysignedbyanotherCA therootCA'sareself-signed.RootCA'sare usuallypre-loadedintomostoperatingsystems webbrowsers andothersoftwarethatrelyonPKI.Root CA'sareunconditionallytrusted TheFile openssl.conf Inordertouse OpenSSL tocreateyouhaveto haveaTheusuallyhasanextension .cnf .Itisusedbythree OpenSSL commands ca req x509 .Themanualpageof openssl.conf canbefoundusingGooglesearch Youcanalsogetacopyofthefrom /usr/lib/ssl/openssl.cnf .Aftercopying thisintoyourcurrentdirectory youneedtocreateseveralsub-directoriesasinthe lookatthe CA default section dir=./demoCA # Whereeverythingiskept certs= $ dir/certs # Wheretheissuedcertsarekept crl_dir= $ dir/crl # Wheretheissuedcrlarekept new_certs_dir= $ dir/newcerts # defaultplacefornewcerts database= $ dir/index.txt # databaseindexfile serial= $ dir/serial # Thecurrentserialnumber Forthe index.txt simplycreateanemptyForthe serial putasinglenumberin stringformat e.g.1000 intheOnceyouhavesetupthe openssl.cnf youcan createandissue Authority CA Aswedescribedbefore weneedtogenerateaself-signedforour CA.ThismeansthatthisCAistotallytrusted anditswillserveastherootYoucan runthefollowingcommandtogeneratetheself-signedfortheCA $ opensslreq-new-x509-keyoutca.key-outca.crt-configopenssl.cnf Youwillbepromptedforinformationandapassword.Donotlosethispassword becauseyouwill havetotypethepassphraseeachtimeyouwanttousethisCAtosignforothers.Youwillalso beaskedtoinsomeinformation suchastheCountryName CommonName etc.Theoutputofthe commandarestoredintwoes ca.key ca.crt .The ca.key containstheCA'sprivatekey ca.crt containsthepublic-key 2.2Task2 Creatingafor SEEDPKILab2018.com Now webecomearootCA wearereadytosigndigitalforourcustomers.Ourcustomer isacompanycalled SEEDPKILab2018.com .ForthiscompanytogetadigitalfromaCA needstogothroughthreesteps SEEDLabsŒPKILab 3 Step1 Generatepublic/privatekeypair Thecompanyneedstocreateitsownpublic/privatekey pair.WecanrunthefollowingcommandtogenerateanRSAkeypair bothprivateandpublickeys Youwillalsoberequiredtoprovideapasswordtoencrypttheprivatekey usingtheAES-128encryption algorithm asisinthecommandoption .Thekeyswillbestoredinthe server.key $ opensslgenrsa-aes128-outserver.key1024 The server.key isanencodedtext alsoencrypted soyouwillnotbeabletoseetheactual content suchasthemodulus privateexponents etc.Toseethose youcanrunthefollowingcommand $ opensslrsa-inserver.key-text Step2 GenerateaSigningRequest CSR Oncethecompanyhasthekeyitshould generatesaSigningRequest CSR whichbasicallyincludesthecompany'spublickey.The CSRwillbesenttotheCA whowillgenerateaforthekey usuallyafterensuringthatidentity informationintheCSRmatcheswiththeserver'strueidentity .Pleaseuse SEEDPKILab2018.com thecommonnameoftherequest $ opensslreq-new-keyserver.key-outserver.csr-configopenssl.cnf Itshouldbenotedthattheabovecommandisquitesimilartotheoneweusedincreatingtheself-signed fortheCA.Theonlydifferenceisthe -x509 option.Withoutit thecommandgeneratesa request withit thecommandgeneratesaself-signed Step3 Generating TheCSRneedstohavetheCA'ssignaturetoforma Intherealworld theCSRareusuallysenttoatrustedCAfortheirsignature.Inthislab wewill useourowntrustedCAtogenerate.Thefollowingcommandturnsthesigningre- quest server.csr intoanX509 server.crt usingtheCA's ca.crt ca.key $ opensslca-inserver.csr-outserver.crt-certca.crt-keyfileca.key\ -configopenssl.cnf If OpenSSL refusestogenerateitisverylikelythatthenamesinyourrequestsdonotmatch withthoseofCA.Thematchingrulesareinthe lookatthe policy match section .Youcanchangethenamesofyourrequeststocomplywiththepolicy oryoucanchangethepolicy Thealsoincludesanotherpolicy called policy anything whichislessrestrictive Youcanchoosethatpolicybychangingthefollowingline '' policy=policy_match '' changeto '' policy=policy_anything '' 2.3Task3 DeployinginanHTTPSWebServer Inthislab wewillexplorehowpublic-keyareusedbywebsitestosecurewebbrowsing.We willsetupanHTTPSwebsiteusing openssl 'sbuilt-inwebserver Step1 DNS Wechoose SEEDPKILab2018.com asthenameofourwebsite.Togetour computersrecognizethisname letusaddthefollowingentryto /etc/hosts thisentrybasicallymaps thehostname SEEDPKILab2018.com toourlocalhost i.e.,127.0.0.1 127.0.0.1SEEDPKILab2018.com SEEDLabsŒPKILab 4 Step2 thewebserver Letuslaunchasimplewebserverwiththegeneratedin theprevioustask OpenSSL allowsustostartasimplewebserverusingthe server command # Combinethesecretkeyandcertificateintoonefile % cpserver.keyserver.pem % catserver.crt > > server.pem # Launchthewebserverusingserver.pem % openssls_server-certserver.pem-www Bydefault theserverwilllistenonport 4433 .Youcanalterthatusingthe -accept option.Now youcanaccesstheserverusingthefollowingURL https //SEEDPKILab2018.com:4433/ .Most likely youwillgetanerrormessagefromthebrowser.InFirefox youwillseeamessagelikethefollowing ﬁseedpkilab2018.com:4433usesaninvalidsecurity.Theisnottrustedbecausethe issuerisunknownﬂ Step3 GettingthebrowsertoacceptourCA HadourbeenassignedbyVeriSign wewillnothavesuchanerrormessage becauseVeriSign'sisverylikelypreloadedintoFirefox's repositoryalready.Unfortunately theof SEEDPKILab2018.com issignedbyour ownCA i.e. using ca.crt andthisCAisnotrecognizedbyFirefox.TherearetwowaystogetFirefox toacceptourCA'sself-signed Ł WecanrequestMozillatoincludeourCA'sinitsFirefoxsoftware soeverybodyusing FirefoxcanrecognizeourCA.ThisishowtherealCAs suchasVeriSign gettheirinto Firefox.Unfortunately ourownCAdoesnothavealargeenoughmarketforMozillatoincludeour sowewillnotpursuethisdirection Ł Load ca.crt intoFirefox WecanmanuallyaddourCA'stotheFirefoxbrowserby clickingthefollowingmenusequence Edit- > Preference- > Privacy & Security- > ViewCertificates YouwillseealistofthatarealreadyacceptedbyFirefox.Fromhere wecanﬁimportﬂour ownPleaseimport ca.crt andselectthefollowingoption ﬁTrustthisCAtoidentify websitesﬂ.YouwillseethatourCA'sisnowinFirefox'slistoftheaccepted Step4.TestingourHTTPSwebsite Now pointthebrowserto https //SEEDPKILab2018.com 4433 .Pleasedescribeandexplainyourobservations.Pleasealsodothefollowingtasks 1 Modifyasinglebyteof server.pem andrestarttheserver andreloadtheURL.Whatdoyou observe ? Makesureyourestoretheoriginal server.pem afterward.Note theservermaynotbe abletorestartifcertainplacesof server.pem iscorrupted inthatcase chooseanotherplaceto modify 2 Since SEEDPKILab2018.com pointstothelocalhost ifweuse https //localhost:4433 instead wewillbeconnectingtothesamewebserver.Pleasedoso describeandexplainyour observations SEEDLabsŒPKILab 5 2.4Task4 DeployinginanApache-BasedHTTPSWebsite TheHTTPSserversetupusing openssl 's server commandisprimarilyfordebugginganddemon- strationpurposes.Inthislab wesetuparealHTTPSwebserverbasedonApache.TheApacheserver whichisalreadyinstalledinourVM supportstheHTTPSprotocol.TocreateanHTTPSwebsite wejust needtotheApacheserver soitknowswheretogettheprivatekeyandWegivean exampleinthefollowingtoshowhowtoenableHTTPSforawebsite www.example.com .Youtaskisto dothesamefor SEEDPKILab2018.com usingthegeneratedfromprevioustasks AnApacheservercansimultaneouslyhostmultiplewebsites.Itneedstoknowthedirectorywhere awebsite'sarestored.Thisisdoneviaits VirtualHost locatedinthe /etc/apache2/ sites-available directory.ToaddanHTTPwebsite weadda VirtualHost entrytothe 000-default.conf .Seethefollowingexample < VirtualHost * :80 > ServerNameone.example.com DocumentRoot/var/www/Example_One DirectoryIndexindex.html < /VirtualHost > ToaddanHTTPSwebsite weneedtoadda VirtualHost entrytothe default-ssl.conf inthesamefolder < VirtualHost * :443 > ServerNametwo.example.com DocumentRoot/var/www/Example_Two DirectoryIndexindex.html SSLEngineOn SSLCertificateFile/etc/apache2/ssl/example_cert.pem À SSLCertificateKeyFile/etc/apache2/ssl/example_key.pem Á < /VirtualHost > The ServerName entrythenameofthewebsite whilethe DocumentRoot entry wheretheforthewebsitearestored.TheaboveexamplesetsuptheHTTPSsite https //two example.com port 443 isthedefaultHTTPSport .Inthesetup weneedtotellApachewherethe server Line À andprivatekey Line Á arestored Afterthe default-ssl.conf isweneedtorunaseriesofcommandstoenableSSL Apachewillaskustotypethepasswordusedforencryptingtheprivatekey.Onceeverythingissetup properly wecanbrowsethewebsite andallthetrafbetweenthebrowserandtheserverwillbeencrypted //TesttheApacheconfigurationfileforerrors $ sudoapachectlconfigtest //EnabletheSSLmodule $ sudoa2enmodssl //Enablethesitewehavejustedited $ sudoa2ensitedefault-ssl //RestartApache $ sudoserviceapache2restart PleaseusetheaboveexampleasguidancetosetupanHTTPSserverfor SEEDPKILab2018.com SEEDLabsŒPKILab 6 Pleasedescribethestepsthatyouhavetaken thecontentsthatyouaddtoApache'sand thescreenshotsoftheoutcomeshowingthatyoucansuccessfullybrowsetheHTTPSsite 2.5Task5 LaunchingaMan-In-The-MiddleAttack Inthistask wewillshowhowPKIcandefeatMan-In-The-Middle MITM attacks.Figure1depictshow MITMattackswork.AssumeAlicewantstovisit example.com viatheHTTPSprotocol.Sheneedstoget thepublickeyfromthe example.com server Alicewillgenerateasecret andencryptthesecretusingthe server'spublickey andsendittotheserver.IfanattackercaninterceptthecommunicationbetweenAlice andtheserver theattackercanreplacetheserver'spublickeywithitsownpublickey.Therefore Alice's secretisactuallyencryptedwiththeattacker'spublickey sotheattackerwillbeabletoreadthesecret.The attackercanforwardthesecrettotheserverusingtheserver'spublickey.Thesecretisusedtoencryptthe communicationbetweenAliceandserver sotheattackercandecrypttheencryptedcommunication Figure1 AMan-In-The-Middle MITM attack ThegoalofthistaskistohelpstudentsunderstandhowPKIcandefeatsuchMITMattacks.Inthetask wewillemulateanMITMattack andseehowexactlyPKIcandefeatit.Wewillselectatargetwebsite Inthisdocument weuse example.com asthetargetwebsite butinthetask tomakeitmoremeaningful studentsshouldpickapopularwebsite suchasabankingsiteandsocialnetworksite Step1 Settingupthemaliciouswebsite InTask4 wehavealreadysetupanHTTPSwebsitefor SEEDPKILab2018.com .WewillusethesameApacheservertoimpersonate example.com orthe sitechosenbystudents .Toachievethat wewillfollowtheinstructioninTask4toadda VirtualHost entrytoApache'sSSLthe ServerName shouldbe example.com buttherestof thecanbethesameasthatusedinTask4.Ourgoalisthefollowing whenausertriesto visit example.com wearegoingtogettheusertolandinourserver whichhostsafakewebsitefor example.com .Ifthiswereasocialnetworkwebsite Thefakesitecandisplayaloginpagesimilartothe oneinthetargetwebsite.Ifuserscannottellthedifference theymaytypetheiraccountcredentialsinthe fakewebpage essentiallydisclosingthecredentialstotheattacker Step2 Becomingthemaninthemiddle Thereareseveralwaystogettheuser'sHTTPSrequesttoland inourwebserver.Onewayistoattacktherouting sotheuser'sHTTPSrequestisroutedtoourwebserver AnotherwayistoattackDNS sowhenthevictim'smachinetriestoouttheIPaddressofthetargetweb server itgetstheIPaddressofourwebserver.Inthistask weuseﬁattackﬂDNS.Insteadoflaunchingan actualDNScachepoisoningattack wesimplymodifythevictim'smachine's /etc/hosts toemulate theresultofaDNScachepositingattack IP Address inthefollowingshouldbereplacedbythe actualIPaddressofthemaliciousserver SEEDLabsŒPKILab 7 < IP_Address > example.com Step3 Browsethetargetwebsite Witheverythingsetup nowvisitthetargetrealwebsite andseewhat yourbrowserwouldsay.Pleaseexplainwhatyouhaveobserved 2.6Task6 LaunchingaMan-In-The-MiddleAttackwithaCompromisedCA Unfortunately therootCAthatwecreatedinTask1iscompromisedbyanattacker anditsprivatekeyis stolen.Therefore theattackercangenerateanyarbitraryusingthisCA'sprivatekey.Inthistask wewillseetheconsequenceofsuchacompromise PleasedesignanexperimenttoshowthattheattackercansuccessfullylaunchMITMattacksonany HTTPSwebsite.YoucanusethesamesettingcreatedinTask5 butthistime youneedtodemonstratethat theMITMattackissuccessful i.e. thebrowserwillnotraiseanysuspicionwhenthevictimtriestovisita websitebutlandintheMITMattacker'sfakewebsite 3Submission Youneedtosubmitadetailedlabreporttodescribewhatyouhavedoneandwhatyouhaveobserved alsoneedtoprovideexplanationtotheobservationsthatareinterestingorsurprising.Inyourreport needtoanswerallthequestionslistedinthislab 