www.enisa.europa.eu European Union Agency For Network And Information Security Analysis airport third - party VPN connection compromise Toolset Document students 1.0 JANUARY 201 9 Analysis airport third - party VPN connection compromise 1.0 | January 2019 02 About ENISA The European Union Agency Network Information Security ENISA centre network information security expertise EU member states private sector Europe ' citizens ENISA works groups develop advice recommendations good practice information security It assists EU member states implementing relevant EU legislation works improve resilience Europe ' critical information infrastructure networks ENISA seeks enhance existing expertise EU member states supporting development cross - border co mmunities committed improving network information security throughout EU More information ENISA work found www.enisa.europa.eu Contact For queries relation paper please use csirt - relations @ enisa.europa.eu PGP Key ID 31E777EC 66B6052A PGP Key Fingerprint AAE2 1577 19C4 B3BE EDF7 0669 31E7 77EC 66B6 052A For media enquiries paper please use press @ enisa.europa.eu Analysis airport third - party VPN connection compromise 1.0 | January 2019 03 Legal notice Notice must taken publication represents views interpretations ENISA unless stated otherwise This publication construed legal action ENISA ENISA bodies unless adopted pursuant Regulation EU No 526/2013 This publication necessarily represent state - - art ENISA may update time time Third - party ources quoted appropriate ENISA responsible content external sources including external websites referenced publication This publication intended information purposes It must accessible free charge Neither E NISA person acting behalf responsible use might made information contained publication Copyright Notice Â© European Union Agency Network Information Security ENISA 201 8 Reproduction authorised provided source acknowledged ISBN 978 - 92 - 9204 - 288 - 2 DOI 10.2824/995110 Analysis airport third - party VPN connection compromise 1.0 | January 2019 04 Table Contents 1 What Will You Learn ? 6 Analysis airport third - party VPN connection compromise 6 2 Introduction 7 3 Exercise Tasks 9 Task 1 Evidence 9 Task 2 Examine network setup 11 Task 3 Examine router log files 13 Task 4 Examine attack 13 Tools used use - case 14 4 Glossary 15 Analysis airport third - party VPN connection compromise 1.0 | January 2019 05 PARAMETER DESCRIPTION DURATION Main Objective The purpose exercise show students encrypted Virtual Private Network VPN connections make work network forensics difficult The students learn danger compromised VPN connections The students learn research done different log files graphical tools command - li ne programs Targeted Audience This exercise intended new CERT personnel involved network forensics also valuable CERT employees involved daily response incidents Total Duration 4.0 hours Time Schedule Introduction exercise tools overview 0.75 hour Task 1 Evidence files 0.5 hour Task 2 Examine network setup 0.5 hour Task 3 Examine router log files 1.0 hour Task 4 Examine attack 1.0 hour Summary exercise 0.5 hour Frequency It advised organise exercise new team members join CERT/CSIRT Analysis airport third - party VPN connection compromise 1.0 | January 2019 06 1 What Will You Learn ? Analysis airport third - party VPN connection compromise Familiarize students concept giving third parties access business systems via VPN connection associated risks How VPN connections compromised How use Wireshark analyse network packet captures How encrypted Virtual Private Network VPN connections make work network forensics difficult How use command line tools get right information log files Analysis airport third - party VPN connection compromise 1.0 | January 2019 07 2 Introduction Background information case A large European airp ort uses third parties maintain applications core network The airport uses VPN connections remote access With VPN connections external companies access core network airport `` IT System Administrators Europe '' ITS AEU fictional company performs maintenance one airports database servers applications Bob ITSAEU employee uses VPN connection maintenance The VPN connection gives access complete core network airport The case A hacker wants break one airport 's applications Because difficult get core network airport outside attacker penetrate via VPN connection one maintenance parties It Thursday Bob maintenance application airport During maintenance Bob uses VPN connection airport Bob finish 17:00 locks computer leaves ITSAEU office Just 18:00 hacker compromises c omputer Bob enables Remote Desktop RDP creates new hidden account The hacker logs computer Bob trough Remote Desktop newly created account There OpenVPN icon Desktop inactive status The hack er looks route table see computer still active VPN connection initiated administrator The computer active VPN connection access private networks airport A comm nd line port scan tool called `` N map '' uploaded computer The hacker starts scan VPN connection search devices In order noticed sets scanner scan slowly Four IP addresses found airport's network investigated Three IP addresses open ports indicate web servers One web servers contains front end database server This web application maintenance dat abases called `` phpMyA dmin '' The ha cker uses frequently used standard passwords log The names `` Bob '' `` ITSAEU '' listed main page database server 's web server The hacker uses combination names log successfully After logging data base - export made downloaded Bob 's computer The hacker looks second web server timetable He uses well - known frequently used passwords 1 work The airport monitoring failed login attempts log files When threshold value exceeded notification sent airport system administrators At 22:50 airport system administrators notified someone trying log dashboard timetable application username `` admin '' wrong password The administrators look 1 admin/admin similar Analysis airport third - party VPN connection compromise 1.0 | January 2019 08 web server logs server AirtPortSys1 VPN server log They find incorrect login attempts coming VPN connection Bob Because late rather unusual time ITSAEU administrators log administrators airport triggered something strange going Bob trusted suspected traffic goes VPN connection They think VPN connection might compromised T airport secures current network log VPN log web server log research They also contact ITSAEU receive relevant network logs ITSAEU router ITSAEU find traces Bob 's computer The following log files col lected a. routerairport_20180726_enp0s8.pcap b. routeritsaeu_20180726_enp0s8.pcap c. openvpn.log VPN server Airport d. access_log Webserver AirPortSys1 Airport Figure 1 Graphical view work situation attack source images opencli part.org Analysis airport third - party VPN connection compromise 1.0 | January 2019 09 3 Exercise Tasks Materials T following digital course materials needed Network documents Log files routerairport_20180726_enp0s8.pcap routeritsaeu_20180726_enp0s8.pcap openvpn.log VPN server Airport access_log Webserver AirPortSys1 Airport Tools The following tools discussed examination part wireshark tcpdump sha256sum cat grep wc sed awk If files provided and/or tools available following Virtual Image downloaded credentials neede h ttp //www.enisa.europa.eu/ftp/ Caine_ ENISA _ _INF _5.3.ova Task 1 Evidence Webserver log The airport administrators informed invalid login attempts application running AirPortSys1 web server When administrators look web server log failed login attempts confirmed Analysis airport third - party VPN connection compromise 1.0 | January 2019 10 Figure 2 Screenshot invalid logins webserver log AirportSys1 ource screenshot created ENISA Hash values log files reported Chain Custody form The researchers airport also keep Chain Custody form The calculated hash values log files noted following values 6f33beb68e3641b0c9b1866c7b5821c8142634f2ba7ede0fc73c45504ecef5a9 access.log e65cd8c0d80da7dadc4c17f80d20cc8d51c064b2ed3e064b9edbc4ec688f7eea openvpn.log 4b80c6ebc3b229eabe6617cbf5662da83a7fbcfe0dc35a2c415cf467ab291706 routerairport_20180726_enp0s8.pcap 3c8b8d5c68dbb9fe7ba196fccc11ee82e693646620183cfb4639bd11447ef836 routerits aeu_20180726_enp0s8.pcap Table hash values form Chain Custody form Logfiles openvpn.log access_log In TASK 1 students use openvpn.log log file VPN server log access_log AirportSys1 Apache web server To give students visual impression location log files network piece network drawing added Figure 3 Location log files openvpn.log access_log network setup ource image created ENISA Analysis airport third - party VPN connection compromise 1.0 | January 2019 11 Student Examine openvpn.log access_log file relation piece network drawing Use command line tools based access_log many times tried login b What said integrity log files ? c Task 2 Examine network setup Getting stared The students need file 5c_Internal_network_design_student.pdf The image document shown show IP addresses known airport administrators Figure 4 The setup internal network source image created ENISA Analysis airport third - party VPN connection compromise 1.0 | January 2019 12 Figure 5 Network Location log file routerairport_20180726_enp0s8.pcap network setup ource image created ENISA Figure 6 Location capture log file routeritsaeu_20180726_enp0s8.pcap network setup ource image created ENISA Student Examine two network documents combination history attack What say following IP addresses used example ? Are public ? Are routable ? 10.20.30.71 b 172.25.100.2 c. 198.51.100.20 d. 203.0.113.210 Analysis airport third - party VPN connection compromise 1.0 | January 2019 13 Task 3 Examine router log files In task students investigate router logs Getting stared The student needs following network dump files task routerairport_20180726_enp0s8.pcap routeritsaeu_20180726_enp0s8.pcap Student Use log files routerairport_20180726 _enp0s8.pcap routeritsaeu_20180726_enp0s8.pcap When VPN connection started ? b c Examine locate attack e Follow TCP stream attack Wireshark f What said readability network activity VPN connection ? g Convert th e routeritsaeu_20180726_enp0s8.pcap ASCII h Create timeline incident based available log files Bonus question time - dependent Select output form ASCII output routeritsaeu_20180726_enp0s8.pcap While using output ASCII conversion routeritsaeu_20180726_enp0s8.pcap Use cat/grep/sed/awk generate list All lines belong Openvpn connection based port number replacement service < time hh mm ss > < src - ip.src - por > < direction > < dst - ip.dst - port > Remove last colon dst - port e.g 16:36:18 198.51.100.20.1048 > 203.0.113.210.openvpn 16:36:18 203.0.113.210.openvpn > 198.51.100.20.1048 Task 4 Examine attack Getting stared The student needs following network dump files task routerairport_20180726_enp0s8.pcap routeritsaeu_20180726_enp0s8.pcap Analysis airport third - party VPN connection compromise 1.0 | January 2019 14 Student Based information log files attack probably used ? b What technique used hacker bypass firewall restrictions open ports ? Tools used use - case http //www.tcpdump.org/ last accessed July 31 th 2018 https //www.wireshark.org/ last accessed July 31 th 2018 https //www.kali.org last accessed July 31 th 2018 https //www.pfsense.or g/ last accessed July 31 th 2018 https //openvpn.net/ last accessed July 31 th 2018 Analysis airport third - party VPN connection compromise 1.0 | January 2019 15 4 Glossary ARP Address Resolution Protocol ASCII American Standard Code Information Interchange C & C Command Control Server CLI Command Line Interfaces COTP Connection Oriented Transport Protocol GUI Graphical User Interface ICS Industrial Control Systems IGMP Internet Group Management Protocol ISO 27001 International Organization Standardization LLDP Link Local Discovery Protocol LLMNR Link Local Multicast Name Resolution PCAP Packet CAPture PLC Programmable Logic Controller SCADA Supervisory Control Data Acquisition SMB Server Message Block SSDP Simple Service Discovery Protocol TCP Transmission Control Protocol TPKT Packet format used transport OSI TPDUs TCP TPDU OSI Transport Protocol Data Uni UDP User Datagram Protocol VNC Virtual Network Computing ENISA European Union Agency Network Information Security Science Technology Park Crete ITE Vassilika Vouton 700 13 Heraklion Greece Athens Office 1 Vass Sofias & Meg Alexandrou Marousi 151 24 Athens Greece PO Box 1309 710 01 Heraklion Greece Tel +30 28 14 40 9710 info @ enisa.europa.eu www.enisa.europa.eu ISBN 978 - 92 - 9204 - 288 - 2 DOI 10.2824/995110 www.enisa.europa.eu European Union Agency For Network And Information Security Detecting exfiltration large finance corporation environment Toolset Document students 1.0 JANUARY 201 9 Detecting exfiltration large finance corporation environment 1.0 | January 2019 02 About ENISA The European Union Agency Network Information Security ENISA centre network information security expertise EU member states private sector Europe ' citizens ENISA works groups develop advice recommendations good practice information security It assists EU member states implementing relevant EU legislation works improve resilience Europe ' critical information infrastructure networks ENISA seeks enhance existing expertise EU member states supporting development cross - border co mmunities committed improving network information security throughout EU More information ENISA work found www.enisa.europa.eu Contact For queries relation paper please use csirt - relations @ enisa.europa.eu PGP Key ID 31E777EC 66B6052A PGP Key Fingerprint AAE2 1577 19C4 B3BE EDF7 0669 31E7 77EC 66B6 052A For media enquiries paper please use press @ enisa.europa.eu Detecting exfiltration large finance corporation environment 1.0 | January 2019 03 Legal notice Notice must taken publication represents views interpretations ENISA unless stated otherwise This publication construed legal action ENISA ENISA bodies unless adopted pursuant Regulation EU No 526/2013 This publication necessarily represent state - - art ENISA may update time time Third - party ources quoted appropriate ENISA responsible content external sources including external websites referenced publication This publication intended information purposes It must accessible free charge Neither E NISA person acting behalf responsible use might made information contained publication Copyright Notice Â© European Union Agency Network Information Security ENISA 201 8 Reproduct ion authorised provided source acknowledged ISBN 978 - 92 - 9204 - 288 - 2 DOI 10.2824/995110 Detecting exfiltration large finance corporation environment 1.0 | January 2019 04 Table Contents 1 What Will You Learn ? 6 Detecting exfiltration large finance corporation environment 6 2 Introduction 7 Squid Proxy Server configuration 7 Squid Client configuration 8 Squid Analysis Report Generator SARG 12 3 Exercise Tasks 14 Network Traffic Analysis 14 Detecting data exfiltration DNS 26 Tools used use - case 32 4 Glossary References 33 Glossary 33 References 33 Detecting exfiltration large finance corporation environment 1.0 | January 2019 05 PARAMETER DESCRIPTION DURATION Main Objective Participants set lab environment consisting two virtual machines For first part exercise basic VM images preloaded files provided The installation configuration process include compiling software source generating TLS/SSL certificate files setting Certificate Authority configuring web browser recognis e pro xy server CA configuring proxy log analysis tool - SARG The second part exercise begin participants receiving firewall log After analysis comparing results MISP database proxy server logs checked fo ur infected hosts exfiltrated database filenames text storage site address new malicious Command & Control server address At DNS part participants learn analyse provided BIND logs using popular Linux tools simple scripts lo ok evidence exfiltration another technique Targeted Audience The exercise dedicated less - experienced CSIRT staff involved network forensics The exercise expected also value experienced CSIRT team members volved daily incident response Total Duration 6.0 hours Time Schedule Introduction exercise tools overview 1 hour Setting environment 2 hours Log analysis 3 hours Introduction DNS protocol 1 hour BIND log analysis 1 hour Frequency It advised organise exercise new team members join CERT/CSIRT Detecting exfiltration large finance corporation environment 1.0 | January 2019 06 1 What Will You Learn ? Detecting exfiltration large finance corporation environment During course exercise participants learn basic concept proxy server operation inspecting SSL traffic aid forensic investigators Students also learn Malware Information Sharing Platform MISP role play threat analysis By working crafted firewall proxy server logs trainees learn basic approach log analysis get familiar basic Linux command line tools discover kind information extracted combining MISP database Additionally stud ents work BIND logs learning concealed way data exfiltration using DNS protocol In part participants analyse provided log files looking evidence data exfiltration common Linux tools like grep search nomalous DNS queries By working simple Python script trainees look signs data exfiltration logfiles using basic statistical analysis Detecting exfiltration large finance corporation environment 1.0 | January 2019 07 2 Introduction Squid Proxy Server configuration Th e two Virtual Machine images S quid Server Squid Client downloaded http //www.enisa.europa.eu/ftp/ENISA_INF_Squid_Server_5 2 .ova http //www.enisa.europa.eu/ftp/ENISA_INF_Squid_Client_5.2.ova Both accessed using credentials Credentials machine The exercise conducted using squid user account If need access root account password also squid First step compile software source Squid Server machine Source files preloaded /home/squid/squid - 3.5.27 folder Issuing c ommands install Squid set ownership squid user cd squid - 3.5.27 ./configure -- enable - ssl - crtd -- - openssl sudo make & & sudo make install sudo chown squid squid - R /usr/local/squid PLEASE NOTE compiling software take 10 minutes In order Squid Server able inspect SSL traffic needs act trusted Certificate Authority For purpose certificate needs generated mkdir /usr/local/squid/ssl_cert cd /usr/local/squid/ssl_cert openssl req - new - n ewkey rsa:4096 - sha256 - days 365 - nodes - x509 - extensions v3_ca - keyout squid.pem - squid.pem openssl x509 - squid.pem - outform DER - squid.der No additional data needs provided creation certificate Squid configuration file n eeds adjusted activate SSL inspection capabilities The path config file /usr/local/squid/etc/squid.conf PARAMETER VALUE Username squid Password squid Detecting exfiltration large finance corporation environment 1.0 | January 2019 08 Line 59 containing http_port 3128 needs commented removed At end file directives need added http_port 0.0.0.0:3128 ssl - bump cert=/usr/local/squid/ssl_cert/squid.pem generate - host - certificates=on dynamic_cert_mem_cache_size=4MB sslcrtd_program /usr/local/squid/libexec/ssl_crtd - /var/lib/ssl_db - M 4MB acl step1 at_step SslBump1 acl exceptions ssl :server_name .10.1.1.1 ssl_bump splice exceptions ssl_bump peek step1 ssl_bump bump SSL certificate database needs activated ownership changed squid user sudo /usr/local/squid/libexec/ssl_crtd - c - /var/lib/ssl_db - M 4MB sudo chown squid squid /var/lib/ssl_db Squid software activated issuing command /usr/local/squid/sbin/squid If proxy server running netstat command show machine listening port 3128 netstat - plnt Figure 1 Netstat showing Squid proxy listening port 3128 Below command show preview proxy log file tail - f /usr/local/squid/var/logs/access.log Squid Client configuration b browser Previously generated file c obtained issuing command scp squid @ 10.1.1.1 /usr/local/squid/ssl_cert/squid.der ~ Client comes preinstalled Firefox browser Certificate imported navigating Settings selecting Privacy Security = > Certificates opt ion Detecting exfiltration large finance corporation environment 1.0 | January 2019 09 Figure 2 Firefox privacy security settings The Authorities tab allows import *.der file Detecting exfiltration large finance corporation environment 1.0 | January 2019 10 Figure 3 Firefox importing CA file Pop - window appear asking scope certificate trust Trust CA identify websites sufficient conducting exercise Figure 4 CA trust scope Detecting exfiltration large finance corporation environment 1.0 | January 2019 11 CA certificate place browser needs pointed address proxy server traffic goes Network Proxy section found Gen eral settings Figure 5 Firefox proxy settings Squid Server IP address statically set 10.1.1.1 port 3128 Detecting exfiltration large finance corporation environment 1.0 | January 2019 12 Figure 6 Proxy setting Firefox I f client starts browsing Internet access.log begin capture information visited sites Squid Analysis Report Generator SARG Sarg handy tool designed specifically work Squid Software provides quick view activity machines given network segment It installed repository sudo apt install sarg SARG operates access.log file path file needs provided configuration file etc/ sarg/sarg.conf Line 7 needs changed /usr/local/squid/var/logs/access.log Reports generated issui ng command sudo sarg - x And accessed via web browser sarg.local address Detecting exfiltration large finance corporation environment 1.0 | January 2019 13 Figure 7 SARG web panel Detecting exfiltration large finance corporation environment 1.0 | January 2019 14 3 Exercise Tasks Network Traffic Analysis Squid_client machine preloaded two crafted log files used part exercise Both stored /home/squid/exercise_logs directory firewall.log pfSense firewall log access.log Squid proxy log As prerequisite two additional commands need issued Squid_server VM sudo cp /root/access.log /usr/local/squid/var/logs/ sudo sarg - x The analysis start firewall log file Some basic statistical information obtained issuing commands w c - l firewall.log Shows file 7919 lines grep '' block '' firewall.log | wc - l Shows 7919 lines requests blocked firewall awk - F ' { print $ 17 } ' firewall.log | sort | uniq Returns information L4 protocols ICMP awk - F ' { print $ 17 } ' firewall.log | grep `` tcp '' | wc - l awk - F ' { print $ 17 } ' firewall.log | grep `` udp '' | wc - l awk - F ' { print $ 17 } ' firewall.log | grep `` icmp '' | wc - l Will show many requests correspond L4 protocols used The majority traffic generated TCP protocol awk - F ' { print $ 22 } ' firewall.log | sort | uniq - c | sort - n Shows number occurrences ports used L4 protocols Figure 8 Most popular protocols Detecting exfiltration large finance corporation environment 1.0 | January 2019 15 Below commands awk - F ' { print $ 19 } ' firewall.log | sort | uniq | wc - l awk - F ' { print $ 20 } ' firewall.log | sort | uniq | wc - l Will return total number unique IP source destination addresses accordingly It known scenario data exfiltrated external service This means private IP address range excluded destination IP addresses It also known machines particular company operate 10.x.x.x IP address range Below command awk - F ' { print $ 20 } ' firewa ll.log | grep - v `` 10 * '' | sort | uniq | wc - l Will return 136 unique IP addresses belong 10.x.x.x range These addresses checked MIPS database Local MISP instance accessed via web browser address misp.local Us er credentials User squid @ example.com Password Password1234 PLEASE NOTE Password case sensitive Figure 9 MISP login screen All IP addresses checked navigating Actions = > Search Attributes Detecting exfiltration large finance corporation environment 1.0 | Ja nuary 2019 16 Figure 10 MISP Database Options Menu Figure 11 Search Attributes Detecting exfiltration large finance corporation environment 1.0 | January 2019 17 After clicking Search button bottom page result seen Figure 12 Match found MISP There match MISP event number 567 IP Address 185.4.66.194 involved malicious activity By clicking Event ID additional information obtained Figure 13 Collection attributes belonging Event 567 In cours e exercise C2 servers URL addresses well FTP host used hxxps //fastparceldelivery ex/kirk545734/gate.php hxxps //moffice - cdn ex/spock732573/gate.php 185.4.66.194 Detecting exfiltration large finance corporation environment 1.0 | January 2019 18 PLEASE NOTE particular scenario number IP addre sses fairly low easily processed MISP web panel In cases many IOCs check better use IP address obtained MISP checked firewall log search information g rep `` 185.4.66.194 '' firewall.log Figure 14 Connections malicious IP address From query deduced connection attempt suspicious address made August 3rd 10:53:42 The source address internal host 10.0.10.202 attempt blocked firewall Destination IP 185.4.66.194 port 21 suggests ftp connection attempt Fire w log analysis summary Total number source IP addresses 1270 Total number destination IP Addresses 185 IP Protocols used UDP TCP ICMP Well - know n services used http https SSH NetBIOS smpt IP Address infected machine 10.0.10.202 Malicious IP Address 185.4.66 194 Time frame attack 10:53:42 10:54:13 C2 server URLs These checked Squid log file The addresses hxxps //fastparceldelivery ex/kirk545734/gate.php hxxps //moffice - cdn ex/spock732573/gate.php Since two address checked grep used grep https //fastparceldelivery.ex/kirk545734/gate.php access.log grep https //moffice - cdn.ex/spock732573/gate.php access.lo g First query yields results second one shows log entries Figure 15 Malicious domain found Squid log This indicates machines within network infected malware Command Detecting exfiltration large finance corporation environment 1.0 | January 2019 19 grep https //moffice - cdn.ex/spock73 2573/gate.php access.log | awk ' { print $ 3 } ' | sort | uniq Isolates three infected IP addresses 10.0.10.111 10.0.10.128 10.0.10.134 Figure 16 IP addresses infected hosts Some information easily obtained looking SARG report By navigating sarg.local address report obtained Figure 17 SARG shows logs 3 Aug 2018 By browsing activity first infected machine 10.0.10.111 learned visited services used storing data online pasting text data namely Zippyshare Ghostbin Detecting exfiltration large finance corporation environment 1.0 | January 2019 20 Figure 18 Host 's 10.0.10.111 browsing history Similar patterns observed browsing history remaining two infected hosts 10.0.10.128 10.0.10.134 Figure 19 Host 's 10.0.10.12 78 browsing history Detecting exfiltration large finance corporation environment 1.0 | January 2019 21 Figure 20 Host 's 10.0.10.134 browsing history This information checked Squid log get detailed information Communication Zippyshare investigated issuing command grep '' zippyshare.com '' access.log Detecting exfiltration large finance corporation environment 1.0 | January 2019 22 Figure 21 Zippshare.com traffic log To make log readable results narrowed show single host grep `` zippyshare.com '' access.log | grep 10.0.10.111 Figure 22 Zippyshare.com traffic 10.0.10.111 host From results read - POST request made zippyshare.com - There disti nct link pointing file Z ippyshare hxxts //www94.zippyshare com/v/OdYpLvrA/file.html - GET request issued file cal led CarsContract.zip Detecting exfiltration large finance corporation environment 1.0 | January 2019 23 Remaining hosts checked using approach grep `` zippyshare.com '' access.log | grep 10.0.10.128 Figure 23 Zippyshare.com traffic 10.0.10.128 host There distinct link hxxts //www94.zippyshare com/v/NitWfpnd /file.html GET request file called Clients.zip grep `` zippyshare.com '' access.log | grep 10.0.10.134 Figure 24 Zippyshare.com traffic 10.0.10.134 There distinct link hxxts //www93.zippyshare com/v/zmQat8N3/file.html GET request file called Financial.zip The suspicious service found browsing history Ghostbin Access.log might storing useful information grep `` ghostbin '' access.log Detecting exfiltration large finance corporation environment 1.0 | January 2019 24 Figure 25 Ghostbin traffic This logs show numerous requests sent address hxxps//ghostbin com/paste/ n4d3g It also noted appears new IP addresses belonging private range All IP addresses reaching address found issuing following command grep `` ghostbin '' access.log | awk ' { print $ 3 } ' | sort | uniq Figure 26 Ghostbin uniq IP addresses The result shows four IP addresses previously discovered three communicating wit h malicious C2 server Taking closer look 10.0.10.151 might show information Detecting exfiltration large finance corporation environment 1.0 | January 2019 25 Figure 27 Host 10.0.10.151 traffic There distinct link hxxts //www94.zippyshare com/v/7KKXKzLf/file .htm l GET request file called SitesEmployees.zip This follows pattern observed infected machines The fact machine discovered earlier raise suspicion IOCs might still left undiscovered Two C2 addresses obtained MISP hxxps //fastparceldelivery ex/kirk545734/gate.php hxxps //moffice - cdn ex/spock732573/gate.php The address seems random weed another one log file except last part seems constant After applying logic Figure 28 New C2 server New C2 address discovered hxxps //city - bistro ex/picard323456/gate.php Detecting exfiltration large finance corporation environment 1.0 | January 2019 26 Detecting data exfiltration DNS For purpose exercise logfiles prepared reflecting common corporate network configuration request coming corporate network workstations processed logged local forwarding DNS server running BIND All log files p repared exercise found /home/bind/exercise_logs/dns directory Squid_ client virtual machine Python script bind_stats.py located /home/bind/tools Task 1 basic detection based logs size count First steps start basic statistic using standard Linux tools First go /home/bind/exercise_logs/dns check number available log files # ls - l There 6 logs provided 5 size 25MB one 15MB latest Assuming standard network act ivity 5 logs similar size similar number log entries Check number log entries # wc - l bind.log * Figure 29 Difference number records log file The output command shows bind.log.2 150327 li nes number lines equal number DNS queries With knowledge analysis started bind.log.2 file looking long label names # egrep `` - zA - Z0 - 9 { 40,63 } '' bind.log.2 | wc - l # 3 Above egrep command returns 3 lines containing queries labels range 40 63 characters These queries viewed removing wc l previous command egrep `` - zA - Z0 - 9 { 40,63 } '' bind.log.2 Figure 30 Legitimate service queries Detecting exfiltration large finance corporation environment 1.0 | January 2019 27 Dropbox legitimate service yet queries ar e longer usual With two following commands compare Dropbox queries responsible difference queries count # grep dropbox bind.log.2 | wc - l # 1048 # grep dropbox bind.log.5 | wc - l # 3340 bind.log.5 3 times many Dropbox queries yet total line count significantly higher assumed Drop difference It common DNS exfiltration techniques use many characters possible regex modified incl ude - zA - Z0 - 9 \ \ - l | uniq # 17981 Just number gives basis investigation checking queries # egrep `` - zA - Z0 - 9 \ \ { 40,63 } '' bind.log.2 | uniq > suspicious.queries # less suspicious.queries Figure 1 1 Log entries indicating DNS data exfiltration Resulting file contains 17981 lines consisting generated labels domain example.xyz # ls - lh | awk ' { print $ 5 '' `` $ 9 } ' Detecting exfiltration large finance corporation environment 1.0 | January 2019 28 Figure 32 Excerpt log analysis Additionally weights 11MB 25MB total log size clearly indicate data exfiltration It possible generate statistics check higher usual number queries NULL TXT CNAME unusual records # egrep '' IN TXT '' bind.log.1 | wc - l # egrep `` IN CNAME '' bind.log.1 | wc - l Additional exercises Logs generated using two tools giving slightly different output find first sign data exfiltration create timeline attacker steps explain exfiltration took place certain time day TASK2 anomaly detection approach In exercise free python script 1 used perform quick quantitative analysis # cd /home/bind/tools # ./bind_stats.py ../exercise_logs/dns/bind.log.0 For ease use sc ript copied logs directory Simply running script log file name argument display number metrics Additional statistics obtained optional parameters full list parameters shown issuing bind_stats.py - h command Existence queries long domain names As pointed previous chapter rise usage generated queries used legitimated providers makes difficult distinguish suspicious activity looking query properties like label length For example log query used Dropbox service analytics purpose fulfils almost criteria DNS exfiltration multiple computationally generated label names 48 characters long total length 164 characte rs 1 https //github.com/Matty9191/bind - query - log - statistics Detecting exfiltration large finance corporation environment 1.0 | January 2019 29 Figure 33 Long DNS query legitimate services As comparison query generated dnscat2 presented difference length base domain name Figure 34 Long DNS query indicating DNS exfiltration This remediated use trusted domain list long queries would ignored Unusual DNS records One approaches DNS exfiltration use queries types addresses A AAAA addresses Examples types might TXT MX CNAME NUL L queries 2 Consequently large amounts queries records types coming corporate workstations investigated Figure 35 Comparison statistics clean logs left suspicious queries NULL records right It worth checking queries associated NULL records send grep command # grep `` NULL '' bind.log.3 | less 2 IANA 2018b https //www.iana.org/assignments/dns - parameters/dns - parameters.xhtml # dns - parameters - 4 Detecting exfiltration large finance corporation environment 1.0 | January 2019 30 Figure 36 Checking queries associated NULL records In output grep command shown figure fragment queries generated iodine shown representing start session Data sent compressed gzip encoded Base32 Base64 Base128 depending DNS relay server configuration Lines marked 1 - 4 show automatic discovery accepted characters label length optimal encoding 3 In th example queries sent host 10.0.10.19 marked 5 Unusual popularity previously unknown domain When obscure previously unknown domain becomes frequently quer ied might sign viral AD campaign popular link shared However DNS records associated query rather unusual logs inspected signs data exfiltration especially queries come sin gle small number workstation # ./bind_stats.py ../exercise_logs/dns/bind.log.5 Figure 37 Queries rare DNS records coming client workstations # grep `` example.xyz '' bind.log.5 3 https //github.com/yarrick/iodine Detecting exfiltration large finance corporation environment 1.0 | January 2019 31 Figure 38 Excerpt logs MX CNAME TXT records In corporate network wit h centrally managed environment MX records would mostly used local mail server Similarly common uses TXT records also associated mail SPF Sender Policy Framework DKIM DomainKeys I dentified Email Information fluctuations service specific DNS records valuable DNS exfiltration detection also service misconfiguration High number queries single client Any unexpected rise traffic generated client workstation analys ed comes DNS protocol may indicate malware infection data exfiltration attempt # ./bind_stats.py ../exercise_logs/dns/bind.log.0 # ./bind_stats.py ../exercise_logs/dns/logs/bind.log.2 Figure 39 Us ually quiet workstation appears top DNS clients list The f igure output previous two commands shows active client network 10.0.10.125 This compared log files Closer examin ation logs shows queries associated NTP Network Time Protocol service # grep `` 10.0.10.162 '' bind.log.2 | less Figure 40 NTP related DNS traffic What draws attention appearance computer IP 10.0.10.19 third active This compared statistics like number queries record types domains queried # ./bind_stats.py ../exercise_logs/dns/bind.log.2 Detecting exfiltration large finance corporation environment 1.0 | January 2019 32 Figure 41 Number requests NULL records correlated suspicious domain # grep `` 10.0.10.19 '' bind.log.2 | less Figure 42 DNS exfiltration attempt In typical corporate environment many fluctuations DNS traffic coming client workstations attributed human interaction It good practice determine many DNS request come typical client track deviations Tools used use - case Squid proxy http //www.squid - cache.org/ SARG https //sourceforge.net/projects/sarg/ MISP http //www.misp - project.org/ bind - query - log - statistics.py script used custom modifications provide additional metrics https //github.com/Matty9191/bind - query - log - statistics iodine https //github com/yarrick/iodine dnscat2 https //github.com/iagox86/dnscat2 Detecting exfiltration large finance corporation environment 1.0 | January 2019 33 4 Glossary References Glossary ARP Address Resolution Protocol ASCII American Standard Code Information Interchange C & C Command Control Server CLI Command Line Interfaces COTP Connection Oriented Transport Protocol GUI Graphical User Interface ICS Industrial Control Systems IGMP Internet Group Management Protocol ISO 27001 International Organization Standardization LLDP Link Local Discovery Protocol LLMNR Link Local Multicast Name Resolution PCAP Packet CAPture PLC Programmable Logic Controller SCADA Supervisory Control Data Acquisition SMB Server Message Block SSDP Simple Service Discovery Protocol TCP Transmission Control Protocol TPKT Packet format used transport OSI TPDUs TCP TPDU OSI Transport Protocol Data Uni UDP User Datagram Protocol VNC Virtual Network Computing References Bejtlich R. 2013 The Practice Network Security Monitoring Understanding Incident Detection Response No Starch Press 2013 ISBN - 13:1 - 59327 - 509 - 9 Davidoff S. Ham J 2012 Network Forensics Tracking Hackers Cyberspace Prentice Hall 2012 ISBN - 10 0 - 13 - 256471 - 8 Elz R. Bush R. 1997 RFC 2181 Clarifications D NS Specification July 1997 https //tools.ietf.org/html/rfc2181 last accessed October 7th 2018 Farnham G. 2013 Detecting DNS Tunneling SANS Institute February 2013 https //www.sans.org/reading - room/whitepapers/dns/detecting - dns - tunneling - 34152 last accessed October 7th 2018 IANA 2018 Domain Name System DNS Parameters September 2018 https //www.iana.org/assignments/dns - parameters/dns - parameters.xhtml # dns - parameters - 4 last accessed October 10 th 2018 Squid - cache.org n.d. O fficial Squid project site http //www.squid - cache.org last accessed October 7 th 2018 ENISA European Union Agency Network Information Security Science Technology Park Crete ITE Vassilika Vouton 700 13 Heraklion Greece Athens Office 1 Vass Sofias & Meg Alexandrou Marousi 151 24 Athens Greece PO Bo x 1309 710 01 Heraklion Greece Tel +30 28 14 40 9710 info @ enisa.europa.eu www.enisa.europa.eu ISBN 978 - 92 - 9204 - 288 - 2 DOI 10.2824/995110 www.enisa.europa.eu European Union Agency For Network And Information Security ICS/SCADA Environment Toolset Document students 1.0 JANUARY 2019 ICS/SCADA Environment 1.0 | January 2019 02 About ENISA The European Union Agency Network Information Security ENISA centre network information security expertise EU member states private sector Europe ' citizens ENISA works groups develop advice recommendations good practice information security It assists EU member states implementing relevant EU legislation works imp rove resilience Europe ' critical information infrastructure networks ENISA seeks enhance existing expertise EU member states supporting development cross - border communities committed improving network information securit throughout EU More information ENISA work found www.enisa.europa.eu Contact For queries relation paper please use csirt - relations @ enisa.europa.eu PGP Key ID 31E777EC 66B6052A PGP Key Fingerprint AAE2 1577 19C4 B3BE EDF7 0669 31E7 77EC 66B6 052A For media enquiries paper please use press @ enisa.europa.eu ICS/SCADA Environment 1.0 | January 2019 03 Legal notice Notice must taken publication represents views interpretations ENISA unless stated otherwise This publication construed legal action ENISA ENISA bodies unless adopted pursuant Regulation EU No 526/2013 This publication necessarily represent state - - art ENISA may update time time Third - party sources quo ted appropriate ENISA responsible content external sources including external websites referenced publication This publication intended information purposes It must accessible free charge Neither E NISA person acting behalf responsible use might made information contained publication Copyright Notice Â© European Union Agency Network Information Security ENISA 201 8 Reproduction authorised provided source acknowledged ISBN 978 - 92 - 9204 - 288 - 2 DOI 10.2824/995110 ICS/SCADA Environment 1.0 | January 2019 04 Table Contents 1 What Will You Learn ? 6 Summary 6 What ICS/SC ADA ? 6 1.2.1 What challenging SCADA security ? 7 The toolset 8 2 Introductio n 9 Background information 9 3 Exercise Tasks 10 Task 1 Setting monitoring environment 10 3.1.1 The background 10 3.1.2 The network 10 3.1.3 Subt ask Decide monitoring points 11 3.1.4 Subtask Develop monitoring policy 12 Task 2 Baselining regular traffic 13 Task 2 Initial attack detection 21 3.3.1 Initial break - 21 3.3.2 Subtask Analyse attack engineering workstation 21 3.3.3 Subtask Review monitoring policy 24 Task 4 Second attack stage analysis 25 3.4.1 Lateral movement 25 3.4.2 Subtask Analyse lateral movement 25 3.4.3 Subtask Review revise policy 30 Task 5 Analysing attack PLCs 31 3.5.1 The pump disabling attack 31 3.5.2 Subtask Analyse attack 31 3.5.3 The PLC reprogramming attack 36 3.5.4 Subtask Analyse last attack stage 36 ICS/SCADA Environment 1.0 | January 2019 05 PARAMETER DESCRIPTION DURATION Main Objective In exercise trainees taken incident response attack ICS/SCADA environment starting preparation phase incident analysis post - incident activity In first two tasks trainees set IDS SCADA network using well - established open source software solutions Main goal part learn place configure sensor gain suitable forensic data given specific network setup The latter tasks 3 - 5 focus forensic analysis three attack stages For stage network traffic captures given students anal yse IDS environment set - previous tasks scenario Targeted Audience The exercise dedicated new CERT staff involved network forensics The exercise also helpful CERT staff involved dail incident response Total Duration 8.0 hours Time Schedule Introduction exercise tools overview 2.0 hours Task 1 Setting monitoring environment 1.0 hour Task 2 Baselining regular traffic 1.0 hour Task 3 Initial attack analysis 1.0 hour Task 4 Second attack stage analysis 1.0 hour Task 5 Analyse attack PLCs 1.0 hour Summary exercise 1.0 hour Frequency It advised organise exercise new team members join CERT/CSIRT ICS/SCADA Environment 1.0 | January 2019 06 1 What Will You Learn ? Summary This scenario deal attack ICS/SCADA environment energy sector The successful completion scenario set configure network security monitoring environment including baselining regular non - malicious traffic finally successful analysis multi - stage attack network During exercise deal previously unseen network architecture familiarise unknown protocol used control industrial environment In first two tasks set IDS SCADA network using well - established open source software solutions Main goal part learn place configure sen sor gain suitable forensic data given specific network setup The latter tasks 3 - 5 focus forensic analysis three attack stages For stage network traffic captures given analyse IDS environment set - previous tasks scenario What ICS/SCADA ? Industrial plants power plants factories oil refineries etc large distributed complexes operators must continuously monitor control many different sections pla proper operation Before computers introduced industrial plants rely human personnel manually control monitor equipment processes push buttons dials As plants grew size solution needed control monitor equipment long distances With introduction computers become possible remotely control monitor industrial components processes Industrial Control Systems ICS The first ICS simple point - - po int networks connecting monitoring panel command device remote sensor actuator These since evolved complex large - scale networks interconnecting computers sensors actuators Remote Terminal Units RTUs Programmable Logic Con trollers PLCs Supervisory Control Data Acquisition SCADA control system architecture allows high - level management systems interface peripheral devices PLCs different vendors perform supervisory operation The ge neral model seen Figure ICS/SCADA Environment 1.0 | January 2019 07 Figure 1 ICS/SCADA control levels Level 0 Contains field devices flow temperature sensors final control elements control valves Level 1 Contains industrialised input/output I/O modules associated distributed electronic processors Level 2 Contains supervisory computers collate information processor nodes system provide operator control scre ens Level 3 Is production control level directly control process concerned monitoring production targets Level 4 Is production scheduling level 1.2.1 What challenging SCADA security ? The consequences f intrusions SCADA systems may much severe traditional IT - systems Equipment may damaged hazardous poisonous radioactive material released environment human life may endangered even people outside plant When SCADA systems attacked control critical infrastructures transmission electricity transportation gas oil pipelines water distribution traffic lights etc. impacts could range much original compro mised systems The move proprietary technologies standardized open solutions together increased number connections SCADA systems office networks Internet made vulnerable types network attac ks relatively common computer security This imposes new challenges traditional IT - security monitoring including ICS/SCADA Environment 1.0 | January 2019 08 SCADA environments different guiding principle Foremost importance SCADA systems safety reliability av ailability SRA industrial process outages would risk damaging equipment risking catastrophic failures For traditional IT - systems confidentiality integrity availability CIA data guiding principle SCADA systems networks originally planned IT - security mind Particularly lack encryption authentication Furthermore availability primary concern systems may updated regularly thus exposing vulnerabilities months longer testing live systems possible due SRA principle dedicated test environments deemed complex expensive A multitude SCADA protocols exist general traditional IT - security personnel unfamiliar There many threat vectors modern SCADA system One threat unauthorised access control software whether human access changes induced intentionally accidentally virus infections software threats residin g control host machine Another threat packet access network segments hosting SCADA devices In many cases control protocol lacks form cryptographic security allowing attacker control SCADA device sending co mmands network In many cases attackers also able compromise monitoring systems operators unaware ongoing attack ENISA 2011 The toolset Most actual work done virtual machine supplied The virtual machine image Open Virtualisation Appliance 1 OV A format compressed xz 2 program After decompression image imported run contemporary virtualisation environments supports OVA images like VMware VirtualBox Hyper - V Qemu etc T image downloaded following location http //www.enisa .europa.eu/ftp/ENISA_INF _5.1.ova Credentials machine The machine consists Security Onion 3 Linux distribution custom installation Wires hark 4 dissectors S7comm - plus 5 protocol added The packet captures mentioned following sections folder traffic 1 https./www.dmtf.org/standards/ovf 2 https //tukaani.org/xz 3 https //securityonion.net/ 4 https //www.wireshark.org/ 5 https //sourceforge.net/projects/s7commwireshark/ PARAMETER VALUE Username exercise Password enisa ICS/SCADA Environment 1.0 | January 2019 09 2 Introduction Background information The teacher give presentation covers topics chapters 1 - 4 familiarise students basic knowledge needed upcoming exercises It recommended workshop - style approach students teacher discuss ideas make part less dry already high enough knowledge IDS network forensics ICS/SCADA Environment 1.0 | January 2019 10 3 Exercise Tasks Task 1 Setting monitoring environment In accordance laid previous chapters exercise start coverage preparatory tasks network monitoring forensics i.e setting capturing points selec ting monitoring targets defining monitoring policy 3.1.1 The background This scenario take place power plant take role network monitoring staff tasked deploying Network Intrusion Detection System small sub - netw ork The goal NIDS detect attacks PLCs well workstations network If successful NIDS deployed processes developed around used pilot plant systems Figure 2 SCADA application 3.1.2 The network This scenario requires analyse simulated attack simulated network nuclear power plant include An Engineering workstation configuring industrial devices programming PLCs Two programmable logic control ler PLCs used control physical processes opening valve button pushed A Supervisory control data acquisition SCADA workstation used control industrial process The application running SCADA workstation give operator two buttons control operation pump One power pump another button emergency shutdown first button fails work reason Despite apparent simplicity system critical operation plant see Figure The network connection networks Within scenario systems interconnected single hardware switch show n Figure 1 ICS/SCADA Environment 1.0 | January 2019 11 Figure 1 The exercise network The network traffic data generated courtesy National Centre Nuclear Research NCBJ Poland 3.1.3 Subtask Decide monitoring points In section Error ! Reference source found several different methods traffic capture put f orward It students select one given network Students Select one capturing points monitoring network Justify decision Solution Since traffic to/from systems need monitored canonical point traffic capture configure span - port switch traffic four systems workstations PLCs mirrored Figure 2 This may impose traffic problem span - port would need 4 - 8 times bandwidth individual network connection 4 systems times 2 - outgoing traffic For exercise assumed mirroring port enough bandwidth Figure 2 Exercise network capturing system Alternative Solution If switch support port mirroring perhaps ports already use alternative solution devised One could use cable taps workstations nd ICS/SCADA Environment 1.0 | January 2019 12 PLCs shown Figure This would require cables going taps capturing system 8 total 2 system covering - outgoing traffi c correspondingly 8 network ports capturing system hand would avoid bandwidth problems require anything switch The costs taps cables network ports would probably exceed switch port mirroring support however Figure 3 E xercise network cable taps 3.1.4 Subtask Develop monitoring policy Continuing path preparing network monitoring time decide monitor In section 2.2 prerequisites laid This sub - task let decide monitoring policy well targets given network Students Select monitoring policy target netw ork Justify decision Solution Blacklist monitoring difficult enough attack signatures SCADA networks available especially type PLCs used exercise For anomaly monitoring policy monitoring p oint made The network small closed expected clear set traffic patterns change often This speaks anomaly monitoring In addition fact traffic patterns known af ter baselining next sub - task another point anomaly monitoring one start right away refine policy time Details policy postponed baselining done With full control systems th e network case also made policy monitoring Only key points already made Only workstations shall communicate PLCs Communication shall limited port 102/tcp S7plus protocols The question ex cept PLCs workstations communicate left open If communicate communication limited port 5900/tcp VNC Engineering workstation SCDA workstation ICS/SCADA Environment 1.0 | January 2019 13 Both combined hybrid ap proach This kept mind brought back point summary discussion As seen later systems network need monitored When talking individual targets following arguments made The PLCs monitored attacked system network bypassing protective measures workstations The PLCs monitored defensive measures This said works tations sort firewall IDS/IPS retrofitted difficult PLCs The SCADA workstation monitored attack workstation could used compromise SCADA application It also system largest attack surface two protocols VNC S7plus running In addition SCADA workstation could used attack PLCs communications hard detect The engineering workstation one largest influence controls programs run PLCs In end depends arguments weigh ed Since connection networks use name servers DNS NAT VPN - gateways automatic address management Therefore additional information needed present One may argue lack NTP investigators cautions comparing timestamps diff erent hosts As exercise work network packet captures problem Task 2 Baselining regular traffic The second part focuses learning get best IDS system able differentiate regular traffic patterns anything malicious/suspicious One main tasks operating errors well To achieve goal presented number prepared network captures analyse take input IDS configuration Students Assume time sample traffic network The file normal.pcapng contain traffic without user activi ty SCADA workstation file button_push.pcapng button push SCADA workstation Answer following questions 1 What systems network ? What addresses MAC IPv4 systems ? Are addresse systems ? 2 Over protocols systems communicate ? Solution A good way start use endpoint statistic obtained tshark - q - z endpoints eth - r normal.pcapng Wireshark Ignoring broadcast multicast addresses total seven systems remains The first column shows MAC - - tsha rk ICS/SCADA Environment 1.0 | January 2019 14 Vendor name resolved Full MAC address IP address Broadcast ff ff ff ff ff ff 255.255.255.255 Dell_9f:7c:74 f4:8e:38:9f:7c:74 10.3.5.3 D - Link_e7 b7 c4 00:26:5a e7 b7 c4 10.3.5.1 IPv4mcast_7f ff:64 01:00:5e:7f ff:64 239.255.255.100 IPv4mcast_7f ff fa 01:00:5e:7f ff fa 239.255.255.250 IPv4mcast_fc 01:00:5e:00:00 fc 224.0.0.252 LLDP_Multicast 01:80 c2:00:00:0e Siemens_ad:91:96 28:63:36 ad:91:96 10.5.3.12 Siemens_ad:91:97 28:63:36 ad:91:97 Siemens_ae:70:0b 28:63:36 ae:70:0b Siemens_f6:8b bd 00:1b:1b f6:8b bd Siemens_f7:7c:4f 00:1b:1b f7:7c:4f For completeness MAC IP - addresses second PLC Engineering workstation given These systems come later exercise Vendor name resolved Full MAC address IP - address Siemens_ae:70:09 28:63:36 ae:70:09 10.3.5.11 Siemens_f7:7c:4f 01:1b:1b f7:7c:4f 10.3.5.5 The relationship MAC - IP - addresses obtained ARP responses exchanged network These responses identified opcode 2 In Wireshark GUI done applying filter ARP responses thus arp opcode == 2 From CLI tshark - O arp - Y 'arp.opcode == 2 ' - n - r normal.pcapng Note responses 10.3.5.3 SCADA workstation 10.3.5.12 PLC seen Seemingly time capture entry 10.3.5.12 alre ady ARP cache system asking However IP - MAC - address still seen response see 6 ICS/SCADA Environment 1.0 | January 2019 15 Figure 4 ARP responses Wireshark There IPv6 protocol addresses network seen empty tab endpoints display 1 To get overview protocols used Wireshark offers protocol hierarchy display tshark r normal.pcapng - z io phs GUI giving detailed information Figure 5 7 Figure 5 Protocol hierarchy As Layer 2 protocols play larger role exercise focus IP There four different protocols used Two UDP - based SSDP LLMNR one TCP - based S7 Communication Plus shortened S7plus document IGMP SSDP LLMNR artefacts Microsoft Windows ignored IGMP As seen hierarchy S7plus encapsulated via two protocols TPKT COTP Being originally OSI suite protocols S7plus transported TCP encapsulation tra nsport protocol COTP short Connection Oriented Transport Protocol plays ICS/SCADA Environment 1.0 | January 2019 16 role TCP OSI world The encapsulation done small intermediate protocol layer TPKT 6 see Figure 8 third second rightmost columns 7 Figure 6 S7 protocol layering top TCP/IP While redundant made porting OSI applications TCP/IP world easier The drawback TPKT uses one TCP port 102 transported OSI protocols One c annot see OSI protocol transported without looking higher protocol layers The TPKT header four bytes long first byte version 3 one reserved byte 0 two bytes length encapsulated OSI packet including TPKT header see Figure 7 9 Figure 7 TPKT header Wireshark 6 TPKT specified RFC 1006 https //tools.ietf.org/html/rfc1006 7 Taken https //plc4x.incubator.apache.org/img/protocols - s7 - osi.png ICS/SCADA Environment 1.0 | January 2019 17 COTP defines five classes transport protocols In exercise class 0 used also referred class 1 TP1 etc higher class defining functions TP0 minimal set functions use planned connection - oriented layer 3 protocols like X.25 functions already supplied lower level protocol TP4 roughly equivalent TCP 8 functionality Since TCP already used supplying needed functionality TP0 needs used COTP co nnections initiated initiator sending TPDU type 0x0e Connect Request party responding Connect Confirm type 0x0d packet Data exchanged TPDUs type 0x0f Data ordered connection release done sending TPDU type 0x08 Disconnect disconnect response COTP TPDU Type code Connection request 0x0e Connection response 0x0d Data 0x0f Disconnect 0x08 The S7comm S7comm - plus protoc ols layered top COTP H owever unlike TCP IP one se e directly COTP header protocol transported I nstead one look S7comm S7comm - plus header first byte tells type protocol used Figure 8 0 Figure 9 1 show sample protocol version They needed later exercise S7 protocol Version code S7comm 0x32 S7comm - plus 0x72 8 For comparison COTP class functionality see https //en.wikipedia.org/wiki/OSI_model # Layer_4 _Transport_Layer ICS/SCADA Environment 1.0 | January 2019 18 Figure 8 S7comm PDU type 0x32 Figure 9 S7comm - plus PDU type 0x72 Let us The type S7plus packets inferred opcode Wireshark filter terminology s7comm - plus.data.opcode The table gives overview opcodes used exercise ICS/SCADA Environment 1.0 | January 2019 19 s7comm - plus.data.opcode Hex Mnemonic 0x31 Request 0x32 Response 0x33 Notification First notifications going PLC 10.3.5.12 workstation 10.3.5.12 Notification used inform SCADA application value set variables A sample packet shown These packets form bulk S7plus traffic c aptures The SCADA application `` subscribes '' set variables wants notified e ach subscription identified `` Subscription Object Id '' s7comm - plus.notification.subscrobjectid A sample notification frame shown Fram e 494 122 bytes wire 976 bits 122 bytes captured 976 bits interface 0 Ethernet II Src 28:63:36 ad:91:96 Dst f4:8e:38:9f:7c:74 Internet Protocol Version 4 Src 10.3.5.12 Dst 10.3.5.3 Transmission Control Protocol Src Port 102 Dst Port 52464 Seq 42600 Ack 21167 Len 68 TPKT Version 3 Length 68 ISO 8073/X.224 COTP Connection - Oriented Transport Protocol S7 Communication Plus Header Protocol version=V 3 Protocol Id 0x72 Protocol version V3 0x03 Data length 53 Integrity part Digest Length 32 Packet Digest dbf6f38588aded43bfdc37245f084b8561ef494046aa7cb1 ... Data Notification Opcode Notification 0x33 Notification Data Set Subscription Object Id 0x70000c87 Unknown 2 0x0400 Unknown 3 0x0000 Unknown 4 0x0000 Notification Credit tickcount 201 Notification sequence number VLQ 1354 Unknown5 0x01 ValueList Terminating Item/List Unknown additional 3 bytes 1st Object ID > 0x70000000 0x000000 Data unknown 00 Trailer Protocol version=V3 Protocol Id 0x72 Protocol version V3 0x03 Data length 0 While one play around Wireshark display filters like s7comm - plus.data.opcode == 0x33 s7comm - plus.notification.subscrobjectid == 0x70000c87 s7comm - plus.notification.subscrobjectid == 0x7000c88 get overview values capture file easier use tshark UNIX sorting To find opcode values capture file uniq - c output first column number occurrences second column content line ICS/SCADA Environment 1.0 | January 2019 20 $ tshark - n - r normal.pcapng - Ys7comm - plus - Tfields - e s7comm - plus.data.opcode | sort - n | uniq - c 153 0x00000031 99 0x00000032 495 0x00000033 To find Subscription Object Ids capture file $ tshark - n - r normal.pcapng - Y 's7comm - plus.data.opcode == 0x33 ' - Tfields - e s7comm - plus.notification.subscrobjectid | sort - n | uniq - c 165 0x70000c87 330 0x70000c88 The Subscription Id change S7plus session captures althou gh variables subscribed may Unfortunately inferred capture variables exactly meant Let us move opcodes Requests 0x31 Responses 0x32 `` What '' exactly requested identified function subfield $ tshark - n - r normal.pcapng - Y 's7comm - plus.data.opcode == 0x31 ' - Tfields - e s7comm - plus.data.function | sort - n | uniq - c 54 0x000004f2 99 0x0000054c $ tshark - n - r button_push.pcapng - Y 's7comm - plus.data.opcode == 0x31 ' - Tfields - e s7comm - plus.data.function | sort - n | uniq - c 51 0x000004f2 9 0x00000542 94 0x0000054c Therefore three functions SetVariable 0x04f2 GetMultiVariables 0x054c used normal operation S etMultiVariables 0x0542 used button pushed SCADA application Responses answers Requests obviously almost identical structure Responses function type request answering captur e files two different functions seen $ tshark - n - r normal.pcapng - Y 's7comm - plus.data.opcode == 0x32 ' - Tfields - e s7comm - plus.data.function | sort - n | uniq - c 99 0x0000054c $ tshark - n - r button_push.pcapng - Y 's7comm - plus.data.opcode == 0x32 ' - Tfields - e s7comm - plus.data.function | sort - n | uniq - c 9 0x00000542 94 0x0000054c Note number Responses equal corresponding Requests It seems '' SetVariables '' request trigger response The following table gives overview functions used exercise ICS/SCADA Environment 1.0 | January 2019 21 Hex Function 0x04bb Explore 0x04ca CreateObject 0x04d4 DeleteObject 0x04f2 SetVariable 0x0524 GetLink 0x0542 SetMultiVariables 0x054c GetMultiVariables 0x0556 BeginSequence 0x0560 EndSequence 0x056b Invoke Task 2 Initial attack detection During first stage attack intruder first gets onto SCADA network You two tasks first analyse network behaviour initial attack stage review perhaps adapt monitoring policies depending whether noticed attack 3.3.1 Initial break - An employee opens office document embedded macros engineering workstation After successful infection th e workstation tries connect C & C server via TCP network activity Since network separated connection established malware activates auto exploitation mode 3.3.2 Subtask Analyse attack engineering workstation Students G iven packet capture file attack1.pcapng analyse traffic Answer following questions Do see attack ? If yes see ? What made suspicious ? Solution 1 No real attack network capture unsuccessful communication attempts may noticed The unsuccessful attempts download pictures internet TCP traffic 23.95.230.107 port 80 i.e HTTP The unsuccessful attempts contact command control server unknown protocol UDP traffic 234.5.6.7 port 8910 Both communications seen noting IP - addresses part net 10.3.5.0/24 protocols deviating traffic patterns normal.pcapng button_push.pcapng The trick strip PROFINET S7 With structured analysis one would start overview protocols used like previous task Starting simple overview communication endpoints ICS/SCADA Environment 1.0 | January 2019 22 $ tshark - n - r attack1.pcapng - q - z endpoints ip ================================================================================ IPv4 Endpoints Filter < No Filter > | Packets | | Bytes | | Tx Packets | | Tx Bytes | | Rx Packets | | Rx Bytes | 1 0.3.5.3 268 49559 124 36109 144 13450 10.3.5.12 240 21263 144 13450 96 7813 234.5.6.7 21 27722 0 0 21 27722 10.3.5.5 9 658 9 658 0 0 10.3.5.255 5 410 0 0 5 410 23.95.230.107 5 330 0 0 5 330 10.3.5.1 5 300 5 300 0 0 239.255.255.100 5 300 0 0 5 300 255.255.255.255 4 328 0 0 4 328 10.255.255.255 2 164 0 0 2 164 Both IP - addresses network 10.3.5.0/24 clearly stand But talking ? This answered conversations statistic time output limited suspicious IP - addresses done filter added conv selector filter 234.5.6.7 yield empty list TCP $ tshark - n - r attack1.pcapng - q - z conv tcp ip.addr==23.95.230.107 ================================================================================ TCP Conversations Filter ip.addr==23.95.230.10 | < - | | - > | | Total |Relative |Duration | | Frames Bytes | | Frames Bytes | | Frames Bytes | Start | | 10.3.5.5:1232 < - > 23.95.23 0.107:80 0 0 1 66 1 66 13,031208000 0,0000 10.3.5.5:1233 < - > 23.95.230.107:80 0 0 1 66 1 66 18,337056000 0,0000 10.3.5.5:1234 < - > 23.95.230.107:80 0 0 1 66 1 66 23,656130000 0,0000 10.3.5.5:1235 < - > 23.95.230.107:80 0 0 1 66 1 66 28,975215000 0,0000 10.3.5.5:1236 < - > 23.95.230.107:80 0 0 1 66 1 66 34,294342000 0,0000 As seen port 80 protocol used HTTP Moreover one frame sent must initial SYN packet TCP connection As network connection outside answer received Figure 10 2 ICS/SCADA Environment 1.0 | January 2019 23 Figure 10 Malware HTTP connection attempts The done UDP communications empty filtering 23.95.230.107 $ tshark - n - r attack1.pcapng - q - z conv udp ip.addr==234.5.6.7 ================================================================================ UDP Conversations Filter ip.addr==234.5.6.7 | < - | | - > | | Total | Relative | Duration | | Frames Bytes | | Frames Bytes | | Frames Bytes| Start | | 10.3.5.3:60070 < - > 234.5.6.7:8910 0 0 6 6030 6 6030 7,825592000 20,1028 What S7plus traffic ? Let us look opcodes $ tshark - n - r attack1.pcapng - q - z conv tcp tcp.port==102 ================================================================================ TCP Conversations Filter tcp.port==102 | < - | | - > | | Total | Relative | Duration | | Frames Bytes | | Frames Bytes | | Frames Bytes | Start | | 10.3.5.3:54043 < - > 10.3.5.12:102 140 13210 92 7573 232 20783 0,000000000 41,4049 10.3.5.3:54045 < - > 10.3.5.12:102 2 120 2 120 4 240 18,796773000 0,2014 10.3.5.3:54044 < - > 10.3.5 .12:102 2 120 2 120 4 240 24,395835000 0,2003 Nothing order far looking opcodes ICS/SCADA Environment 1.0 | January 2019 24 $ tshark - n - r attack1.pcapng - Y s7comm - plus - T fields - e s7comm - plus.data.opcode | sort - n | uniq - c 19 0x00000031 12 0x00000032 62 0x00000033 Everything seems normal 2 With monitoring policy looks anything deviates laid rules unsuccessful communication attempts suspicious per definition 3 At least communication attempt IP - addresses workstations PLCs raise suspicion well use communication protocol TCP port 102 Figure 11 Malware UDP communicati 3.3.3 Subt ask Review monitoring policy Students Try answer following q uestions Would monitoring policy notice intruder activity ? All ? Which one would miss ? Solution The answer question depends policy stud ents developed section 3.1.4 When sample policies key points used repeated Only workstations shall communicate PLCs Communicatio n shall limited port 102/tcp S7plus protocols The question except PLCs workstations communicate left open If communicate communication limited port 5900/tcp VNC Engineering workstation SCDA workstation The HTTP UDP connections clearly detected destination IP - addresses neither PLCs one workstations They also easily detected protocol HTTP using port 80/tcp UDP port 8190 whitelisted policy When using sample policy given solutions section 3.1.4 port scan VNC password brute force would noticed involve connection engineering SCADA ICS/SCADA Environment 1.0 | January 2019 25 workstation 10.3.5.5 10.3.5.12 port 5900/tcp whitelisted policy In addition S7scan discovered plain S7comm uses different protocol version 0x32 S7plus 0x72 Task 4 Second attack stage analysis Typical attacks nowadays get direct access critical systems Usually attackers compromise less secured system move systems exploiting internal trust relationships 3.4.1 Lateral movement Since malware connect C & C 9 erver activates fall - back mode offline operation In mode malware scans local network tries attack whatever targets finds The malware discovers SCADA workstation two Siemens PLCs subnet engineerin g workstation As part scanning open VNC port SCADA workstation discovered The VNC username passwords brute - forced malware successfully logs SCADA workstation VNC network activity stops indus trial process SCADA panel emergency shutdown 3.4.2 Subtask Analyse lateral movement Students Given packet captures attack2.pcapng attack3.pcapng attack4.pcapng analyse attack Describe classify activities ? Who oing ? Assess damage done end attack i.e three packet captures Solution Three activities noticed 1 In attack1.pcapng engineering workstation scanning/probing network This typical scan like one outlined section 3.2.2 2 In attack2.pcapng engineering workstation specifically scanning S7 enabled systems i.e PLCs 3. attack3.pcapng contains VNC attack SCADA workstation consists brute - force attempt password The port scan easily seen conversations overview $ tshark - n - r attack2.pcapng - q - z conv ip ================================================================================ IPv4 Conversations Filter < No Filter > | < - | | - > | | Total | Relative | Duration | | Frames Bytes | | Frames Bytes | | Frames Bytes | Start | | 10.3.5.3 < - > 10.3.5.5 195 11700 15 900 210 12600 4,345429000 10,4537 10.3.5.5 < - > 10.3.5.11 100 6000 100 6000 200 12000 4,345564000 0,1676 10.3.5.5 < - > 10.3.5.12 100 6000 100 6000 200 12000 4,345761000 0,1684 10.3.5.3 < - > 10.3.5.12 79 7416 55 4501 134 11917 0,000000000 21,4088 10.3.5.1 < - > 10.3.5.5 0 0 12 744 12 744 4,697235000 16,0501 9 Command Control ICS/SCADA Environment 1.0 | January 2019 26 10.3.5.1 < - > 239.255.255.100 0 0 5 300 5 300 19,782942000 0,0015 10.3.5.3 < - > 255.255.255.255 0 0 3 246 3 246 20,666588000 0,0000 $ tshark - n - r attack2.p capng - q - z conv tcp ================================================================================ TCP Conversations Filter < No Filter > | < - | | - > | | Total | Relative | Duratio n | | Frames Bytes | | Frames Bytes | | Frames Bytes | Start | | 10.3.5.3:54043 < - > 10.3.5.12:102 75 7176 51 4261 126 11437 0,000000000 21,4088 10.3.5.5:59416 < - > 10.3.5 .1:80 6 372 0 0 6 372 4,697235000 14,0504 10.3.5.5:59423 < - > 10.3.5.1:80 6 372 0 0 6 372 6,349966000 14,3973 10.3.5.5:59416 < - > 10.3.5.3:135 3 180 1 60 4 240 4,363587000 9,0002 10.3.5.5:59416 < - > 10.3.5.3:3389 3 180 1 60 4 240 4,377779000 8,9980 10.3.5.5:59416 < - > 10.3.5.3:445 3 180 1 60 4 240 5,562540000 8,9987 10.3.5.5:59416 < - > 10.3.5.3:5900 3 180 1 60 4 240 5,564956000 9,0004 10.3.5.5:59416 < - > 10.3.5.3:5800 3 180 1 60 4 240 5,798956000 9,0002 10.3.5.3 :54045 < - > 10.3.5.12:102 2 120 2 120 4 240 10,998112000 0,0075 10.3.5.3:54044 < - > 10.3.5.12:102 2 120 2 120 4 240 15,597341000 0,2017 10.3.5.5:59416 < - > 10.3.5.11:443 1 60 1 60 2 120 4,345564000 0,0001 10.3.5.5:59416 < - > 10.3.5.12:443 1 60 1 60 2 120 4,345761000 0,0002 10.3.5.5:59416 < - > 10.3.5.11:8080 1 60 1 60 2 120 4,346828000 0,0001 10.3.5.5:59416 < - > 10.3.5.12:8080 1 60 1 60 2 120 4,347199000 0,0002 10.3.5.5:59416 < - > 10.3.5.11:110 1 60 1 60 2 120 4,348204000 0,0001 10.3.5.5:59416 < - > 10.3.5.11:554 1 60 1 60 2 120 4,361129000 0,0002 10.3.5.5:59416 < - > 10.3.5.12:110 1 60 1 60 2 120 4,361533000 0,0001 10.3.5.5:59416 < - > 10.3 5.11:8888 1 60 1 60 2 120 4,362535000 0,0001 ... Lots ports use But wait port scan IP - addresses network ? Why 4 IP - addresses netwo rk ? This answered look ARP requests wireshark see Figure 12 4 ICS/SCADA Environment 1.0 | January 2019 27 Figure 12 ARP responses From list unanswered ARP queries seen adversary really tries probe whole network In attack2.pcapng PLC scan seen selecting S7comm protocol s7comm - plus $ tshark - n - r attack3.pcapng - Y 's7comm' communication communication 247 13.055818 10.3.5.5 Function Request - > CPU functions - > Read SZL ID=0x0011 Index=0x0001 Function Response - > CPU functions - > Rea SZL ID=0x0011 Index=0x0000 Function Request - > CPU functions - > Read SZL ID=0x0011 Index=0x0001 TR Userdata Function Response - > CPU functions - > Read SZL ID=0x0011 Index=0x0000 Function Request - > CPU functions - > Read SZL ID=0x001c Index=0x0001 252 13 Function Response - > CPU functions - > Read SZL ID=0x001c Index=0x0000 communic ation communication Function Request - > CPU functions - > Read SZL ID=0x0011 Index=0x0001 Function Respon se - > CPU functions - > Read SZL ID=0x0011 Index=0x0000 Function Request - > CPU functions - > Read SZL ID=0x0011 Index=0x0001 5 S7COMM 235 102 1242 ROSCTR Userdata Function Response - > CPU functions - > Read SZL ID=0x0011 Index=0x0000 Function Request - > CPU functions - > Read SZL ID =0x001c Index=0x0001 Function Response - > CPU functions - > Read SZL ID=0x001c Index=0x0000 ICS/SCADA Environment 1.0 | January 2019 28 The scan conveys information similar obtained nmap '' s7 - info.nse '' script shown nmap - Pn - sT - p102 -- script s7 - info.nse 10.3.5.12 Starting Nmap 7.70 https //nmap.org 2018 - 06 - 08 13:53 Europa Zachodnia cz letni mass_dns warning Unable determine DNS servers Reverse DNS disabled Try using -- system - dns specify valid servers -- dns - servers Nmap scan report 10.3.5.12 Host 0.00s latency PORT STATE SERVICE 102/tcp open iso - tsap | s7 - info | Module 6ES7 511 - 1AK01 - 0AB0 | Basic Hardware 6ES7 511 - 1AK01 - 0AB0 | Version 2.0.1 | System Name S71500/ET200MP station_1 | Module Type PLC_1 | Serial Number S C - HDN715522016 | Plant Identification |_ Copyright Original Siemens Equipment Service Info Device specialized Nmap done 1 IP add ress 1 host scanned 1.11 seconds Here breakdown one answer packets Figure 13 5 Figure 13 S7comm packets Last attack4.pcapng VNC brute - force attempt passwords Six sessions seen packet capture starting successively increasing source ports 1396 1397 1398 ... ICS/SCADA Environment 1.0 | January 2019 29 VNC authentication type used VNC challe nge response process 10 The server sends authentication challenge random 16 - byte string The client sends authentication response containing also 16 - byte string consisting DES encrypted challenge password encryption key The server responds authentication result packet The first four bytes encode integer value 1 means authentication unsuccessful value 0 meaning authentication successful In case unsuccessful authenticati server append string describing reason failure close connection However seen packet capture first five sessions server responds three authentication result packets first two containing code 1 failure one would expect The third however code 0 also string `` Authentication failed '' attached The sixth session different one authentication result packet time value 0 additional string attached see Figure 14 6 Also client closing connection seen TCP packet coming next Figure 14 Successful VNC authentication It safely assumed adversary successfully guess password last session The port scan PLC scan damage except adversary gained information network systems The VNC brute - force attack give adversary login SCADA 10 https //tools.ietf.org/html/rfc6143 ICS/SCADA Environment 1.0 | January 2019 30 workstation However activity see n capture unclear whether already used compromise misuse SCADA workstation 3.4.3 Subtask Review revise policy Students Revise policy catch adve Solution Once recap initial policy Only workstations shall communicate PLCs Communication shall limited port 102/tcp S7plus protocols The question except PLCs workstations communicate left open If communicate communication limited port 5900/tcp VNC Engineering workstation SCDA workstation When using first two points port scan VNC password brute force would noticed involve connection engineering SCADA workstation 10.3.5.5 10.3.5.12 port 5900/tcp whitelisted policy Also S7 scan discovered plain S7comm us es different protocol version 0x32 S7plus 0x72 However VNC brute - force attack would noticed protocol included whitelist One fine point The policy specifies S7plus protocols note plural If ta ken S7comm S7comm - plus S7 scan would noticed Taken narrowly S7comm - plus i.e protocol type 0x72 scan noticed For revision VNC brute - force discovered S7 scan As said latter easily recognis ed protocol type policy clearly state type 0x72 i.e s7comm - plus connections meant The brute - force attempts need closer look protocol When looking closer packet capture following wireshark filter rules worked respect login packets length field wireshark windows frame IP packet length seen looking IP header A vnc.auth_result co de 0 packet length 44 i.e without trailing Authentication failure denotes successful login vnc.auth_result == 0 ip.len == 44 b A vnc.auth_result code 1 vnc_auth_result 0 packet length > 44 denotes login failure vnc.a uth_result == 1 vnc.auth_result == 0 ip.len > 44 The vised policy would look something like Only workstations shall communicate PLCs Communication shall limited port 102/tcp S7plus type 0x72 protocol Only engineering workstation shall communicate SCADA workstation VNC port 5900 Multiple 3 one minute login failures monitored investigated ICS/SCADA Environment 1.0 | January 2019 31 Task 5 Analysing attack PLCs The attack reached ts final goal harming/disabling industrial process Since availability foremost importance SCADA systems avoiding attack shutting affected systems option This puts new challenges network administrators inves tigators Later pump disabled time could changed back original operator using SCADA workstation 3.5.1 The pump disabling attack The first thing plant operators notice pump disabled Fortunately possible - find happened 3.5.2 Subtask Analyse attack Students Given p acket captures attack5.pcapng analyse pump disabling attack Try answer following questions How attack carried ? How could attack spotted ? Solution The overview conversations shows four TCP connections one VNC three S7plus $ tshark - q - n - r attack5.pcapng - z conv tcp ================================================================================ TCP Conversations Filter < No Filter > | < - | | - > | | Total | Relative | Duration | | Frames Bytes | | Frames Bytes | | Frames Bytes | Start | | 10.3.5.3:5900 < - > 10.3.5.5:1404 430 25950 630 249236 1060 275186 6,622980000 20,6494 10.3.5.3:54238 < - > 10.3.5.12:102 113 10481 70 5726 183 16207 0,000000000 30,9946 10.3.5.3:54239 < - > 10.3.5.12:102 4 358 4 452 8 810 15,458449000 6,2378 10.3.5.3:54240 < - > 10 3.5.12:102 2 120 2 120 4 240 19,796503000 0,0149 The VNC session behaves differently like one last task More authentication result packets seen session see code 0 success little larger 60 bytes ICS/SCADA Environment 1.0 | January 2019 32 Figure 15 TightVNC authentication result responses The authentication type selected explain difference In previous task authentication type 2 VNC authentication type 16 TightVNC see Figure 15 7 $ tshark - n - r attack5.pcapng - Y 'frame.number { 115 116 } ' - Ovnc Frame 115 60 bytes wire 480 bits 60 bytes captured 480 bits interface 0 Ethernet II Src f4:8e:38:9f:7c:74 Dst 00:1b:1b f7:7c:4f Internet Protocol Version 4 Src 10.3.5.3 Dst 10.3.5.5 Transmission Control Protocol Src Port 5900 Dst Port 1404 Seq 13 Ack 13 Len 3 Virtual Network Computing Number security types 2 Security type VNC 2 Security type Tight 16 Frame 116 60 bytes wire 480 bits 60 bytes captured 480 bi ts interface 0 Ethernet II Src 00:1b:1b f7:7c:4f Dst f4:8e:38:9f:7c:74 Internet Protocol Version 4 Src 10.3.5.5 Dst 10.3.5.3 Transmission Control Protocol Src Port 1404 Dst Port 5900 Seq 13 Ack 16 Len 1 Virtual Network Computing Security type selected Tight 16 When looking VNC connection movement button presses mouse seen `` client pointer event '' packets At two points mouse button 1 pressed In Frame 609 - 630 mouse moves x=965/y=125 x=985/y=99 The frames transmitted within half second speculating maybe drag operation Button 1 pressed Frame 1126 position x=518/y=261 seen Figure 17 18 ICS/SCADA Environment 1.0 | J anuary 2019 33 Figure 16 Mouse button press VNC Now s7plus connections Looking opcodes nothing unusual seems happen $ tshark - n - r attack5.pca png - Y 's7comm - plus ' - Tfields - e s7comm - plus.data.opcode | sort - n | uniq - c 16 0x00000031 11 0x00000032 47 0x00000033 Looking functions used similarity button_push capture file seen $ tshark - n - r attack5.pcapng - Y 's7comm - plus ' - Tfields - e s7comm - plus.data.function| sort - n | uniq - c 47 5 0x000004f2 4 0x00000542 18 0x0000054c $ tshark - n - r button_push.pcapng - Y 's7comm - plus ' - Tfields - e s7comm - plus.data.function| sort - n | uniq - c 467 51 0x000004f2 18 0x00000542 188 0x0000054c wireshark terminology streams numbered starting 0 Stream 0 seems normal s7plus operation `` background '' say $ tshark - n - r attack5.pcapng - Y 'tcp.stream == 0 s7comm - plus ' - Tfields - e s7comm - plus.data.opcode| sort - n | uniq - c 14 0x00000031 9 0x00000032 ICS/SCADA Environment 1.0 | January 2019 34 47 0x00000033 $ tshark - n - r attack5.pcapng - Y 'tcp.stream == 0 s7comm - plus ' - Tfields - e s7comm - plus.data.function| sort - n | uniq - c 47 5 0x000004f2 18 0x0000054c Stream 1 VNC connection stream S7plus empty regards operations $ tshark - n - r attack5.pcapng - Y 'tcp.stream == 3 s7comm - plus ' - Tfields - e s7comm - plus.data.function| sort - n | uniq - c $ tshark - n - r attack5.pcapng - Y 'tcp.stream == 3 s7comm - plus ' - Tfields - e s7comm - plus.data.opcode| sort - n | uniq - c So stream 2 interesting one since one contains SetMultiVariables 0x0542 operation $ tshark - n - r attack5.pcapng - Y 'tcp.stream == 2 s7comm - plus ' - Tfields - e s7comm - plus.data.function| sort - n | uniq - c 4 0x00000542 $ tshark - n - r attack5.pcapng - Y 'tcp.stream == 2 s7comm - p lus ' - Tfields - e s7comm - plus.data.opcode| sort - n | uniq - c 2 0x00000031 2 0x00000032 Two request -- response pairs seen capture file look request side The first seems set variable `` false '' $ tshark - n - r attack5.pcapng - Y 's7comm - plus.data.opcode == 0x31 s7comm - plus.data.function == 0x0542 ' - Os7comm - plus Frame 952 165 bytes wire 1320 bits 165 bytes captured 1320 bits interface 0 Ethernet II Src f4:8e:38:9f:7c:74 Dst 28:63:36 ad 91:96 Internet Protocol Version 4 Src 10.3.5.3 Dst 10.3.5.12 Transmission Control Protocol Src Port 54239 Dst Port 102 Seq 1 Ack 1 Len 111 TPKT Version 3 Length 111 ISO 8073/X.224 COTP Connection - Oriented Transport Protocol S7 Communicati Plus Header Protocol version=V3 Protocol Id 0x72 Protocol version V3 0x03 Data length 96 Integrity part Digest Length 32 Packet Digest c35ed4e0619e3c1de9ec6694d0f27cd1451dd9c45f7070d8 ... Data Request SetMultiVariables Opcode Request 0x31 Reserved 0x0000 Function SetMultiVariables 0x0542 Reserved 0x0000 Sequence number 7 Session Id 0x000003ba Transport flags 0x34 Bit2 - AlwaysSet ? Bit4 - AlwaysSet ? Bit5 - AlwaysSet ? ... ... 0 = Bit0 False ... ..0 = Bit1 - SometimesSet ? False ... .1.. = Bit2 - AlwaysSet ? True ... 0 ... = Bit3 False ... 1 ... = Bit4 - AlwaysSet ? True ..1 ... = Bit5 - AlwaysSet ? True .0.. ... = Bit6 - NoResponseExpected ? False 0 ... ... = Bit7 False Request Set Unknown 0x00000000 Item Count 1 Number fields complete Item - Dataset 5 AddressList Item Address 1 82 SYM - CRC=df6ac14c 3736 LID=9 Symbol CRC 0xdf6ac14c ICS/SCADA Environment 1.0 | January 2019 35 Access base - area Unknown 82 Number following IDs 2 Access sub - area Unknown 3736 LID Value 9 ValueList Item Value 1 Bool = False Item Number 1 Datatype flags 0x00 ... 0 ... = Array False ..0 ... = Addressarray False .0.. ... = Sparsearray False 0 ... ... = Unknown - Flag1 False Datatype Bool 0x01 Value False Data unknown 000000 The second sets variable `` true '' Frame 1129 165 bytes wire 1320 bits 165 bytes captured 1320 bits interface 0 Ethernet II Src f4:8e:38:9f:7c:74 Dst 28:63:36 ad:91:96 Internet Protocol Version 4 Src 10.3.5.3 Dst 10.3.5.12 Transmission Control Protocol Src Port 54239 Dst Port 102 Seq 119 Ack 66 Len 111 TPKT Version 3 Length 111 ISO 8073/X.224 COTP Connection - Oriented Transport Pro tocol 2 COTP Segments 104 bytes # 954 0 # 1129 104 S7 Communication Plus Header Protocol version=V3 Protocol Id 0x72 Protocol version V3 0x03 Data length 96 Integrity part Digest Length 32 Packet Digest ced5b77ab7ea0919e7c4a5094206bf0f3547e088f06c674f ... Data Request SetMultiVariables Opcode Request 0x31 Reserved 0x0000 Function SetMultiVariables 0x0542 Reserved 0x0000 Sequence number 8 Session Id 0x000003ba Transport flags 0x34 Bit2 - AlwaysSet ? Bit4 - AlwaysSet ? Bit5 - AlwaysSet ? ... ... 0 = Bit0 False ... ..0 = Bit1 - SometimesSet ? False ... .1.. = Bit2 - Al waysSet ? True ... 0 ... = Bit3 False ... 1 ... = Bit4 - AlwaysSet ? True ..1 ... = Bit5 - AlwaysSet ? True .0.. ... = Bit6 - NoResponseExpected ? False 0 ... ... = Bit7 False Request Set Unknown 0x00000000 Item Count 1 Number fields complete Item - Dataset 5 AddressList Item Address 1 82 SYM - CRC=fc4ae127 3736 LID=10 Symbol CRC 0xfc4ae127 Access base - area Unknown 82 Number following IDs 2 Access sub - area Unknown 3736 LID Value 10 ValueList Item Value 1 Bool = True Item Number 1 Datatype flags 0x00 ... 0 ... = Array False ..0 ... = Addressarray False .0.. ... = Sparsearray False 0 ... ... = Unknown - Flag1 False Datatype Bool 0x01 ICS/SCADA Environment 1.0 | January 2019 36 Value True Data unknown 000000 ... omes immediately mouse button press event VNC session Figure 17 Figure 17 Mouse button press SetMultiVariable request So answer The attack two - staged The first stage VNC connection engineering workstation SCADA workstation probably using guessed password The second stage S7plus setting variable likely control pump Although packet capture one infer adversary used SCADA application disable pump GUI About spotting attack The unusual authentication type TightVNC gives away initial VNC connection started attack Adversaries could improve using authentication type regular connection would longer look suspicious The button push coming SCADA application would noticed nothing differentiates normal traffic The combination VNC connection unusual event like pump shutdown would likely raise suspicion SCADA operator would normally use remote connection sit front workstation Also would known attack already taken place forensic investigation would begin 3.5.3 The PLC reprogramming attack The infected engineering workstation used reprogram one PLCs downl oading running program PLC modifying - uploading changed program PLC The new program changes industrial process makes impossible changed back original operator using SCADA workstation 3.5.4 Subtask Analyse last attack stage Students Given packet capture attack6.pcapng analyse last attack stage Try answer following questions Where attack originate ? Try correlate network activity known attack see 3.5.3 ICS/SCADA Environment 1.0 | January 2019 37 Where problems regards correlation ? Solution This time direct involvement compromised engineering workstation several connections port 102 one PLCs 10.3.5.3.12 seen $ tshark - q - n - r attack6.pcapng - z conv tcp ================================================================================ TCP Conversations Filter < No Filter > | < - | | - > | | Total | Relative | Duration | | Frames Bytes | | Frames Bytes | | Frames Bytes | Start | | 10.3.5.3:54238 < - > 10.3.5.12:1 02 977 91009 623 51839 1600 142848 0,478472000 279,2012 10.3.5.5:1414 < - > 10.3.5.12:102 423 45991 297 25311 720 71302 113,727670000 111,8493 10.3.5.5:1416 < - > 10.3.5.12:102 150 113624 132 98 16 282 123440 126,533451000 11,1994 10.3.5.5:1415 < - > 10.3.5.12:102 82 6733 66 6561 148 13294 115,693498000 109,7862 10.3.5.5:1417 < - > 10.3.5.12:102 52 8500 59 12330 111 20830 212,3732350 00 6,6389 10.3.5.3:54239 < - > 10.3.5.12:102 53 4244 53 5072 106 9316 5,104313000 274,5798 10.3.5.3:54240 < - > 10.3.5.12:102 21 1321 21 1350 42 2671 22,401286000 257,2871 When looking number frames number times IP - address shows TCP stream collate stream numbers Wireshark conversations $ tshark - n - r attack6.pcapng - Y 'tcp.stream == 0 ' - Tfields - e ip.addr | sort - n | uniq - c 623 10.3.5.3,10.3.5.12 977 10.3.5.12,10.3.5.3 $ tshark - n - r attack6.pcapng - Y 'tcp.stream == 1 ' - Tfields - e ip.addr | sort - n | uniq - c 53 10.3.5.3,10.3.5.12 53 10.3.5.12,10.3.5.3 $ tshark - n - r attack6.pcapng - Y 'tcp.stream == 2 ' - Tfields - e ip.addr | sort - n | uniq - c 21 10.3.5.3,10.3.5.12 21 10.3.5.12,10.3.5.3 $ tshark - n - r attack6.pcapng - Y 'tcp.stream == 3 ' - Tfields - e ip.addr | sort - n | uniq - c 297 10.3.5.5,10.3.5.12 423 10.3.5.12,10.3.5.5 $ tshark - n - r attack6.pcapng - Y 'tcp.stream == 4 ' - Tfields - e ip.addr | sort - n | uniq - c 66 10.3.5.5,10.3.5.12 82 10.3.5.12,10.3.5.5 $ tshark - n - r attack6.pcapng - Y 'tcp.stream == 5 ' - Tfields - e ip.addr | sort - n | uniq - c 132 10.3.5.5,10.3.5.12 150 10.3.5.12,10.3.5 5 $ tshark - n - r attack6.pcapng - Y 'tcp.stream == 6 ' - Tfields - e ip.addr | sort - n | uniq - c 59 10.3.5.5,10.3.5.12 52 10.3.5.12,10.3.5.5 And seems like malware trying contact C & C server note communication port 8910 As comes late packet capture looks like trying report success guess $ tshark - q - n - r attack6.pcapng - z conv udp ================================================================================ UDP Conversations Filter < No Filter > | < - | | - > | | Total | Relative | Duration| | Frames Bytes | | Frames Bytes | | Frames Bytes | Start | | ICS/SCADA Environment 1.0 | January 2019 38 10.3.5.3:51487 < - > 255.255.255.255:1947 0 0 16 1312 16 1312 11,556976 269,0279 10.3.5.3:51487 < - > 10.3.5.255:1947 0 0 16 1312 16 1312 15,562995 269,0664 10.3.5.5:49152 < - > 255.255.255 .255:1947 0 0 14 1148 14 1148 25,246807 232,5779 10.3.5.5:49152 < - > 10.255.255.255:1947 0 0 14 1148 14 1148 29,253409 232,5809 10.3.5.3:60070 < - > 234.5.6.7:8910 0 0 1 1 5576 11 5576 279,618206 1,4743 ... Going back TCP streams going number frames examine streams SCADA workstation 10.3.5.3 10.3.5.12 $ tshark - n - r attack6.pcapng - Y 'tcp.stream == 0 s7co mm - plus ' - Tfields - e s7comm - plus.data.opcode | sort - n | uniq - c 133 0x00000031 89 0x00000032 400 0x00000033 tshark - n - r attack6.pcapng - Y 'tcp.stream == 0 s7comm - plus ' - Tfields - e s7comm - plus.data.function | sort - n | uniq - c 400 6 0x000004d4 48 0x000004f2 168 0x0000054c So judging IP - addresses opcodes functions seems normal background S7plus activity except DeleteObject 0x04d4 operations They seem happen towards end stream frame 5680 frame 5524 5534 567 4 see Figure 18 Figure 18 S7comm - plus DeleteObject requests responses The two streams seem try delete objects inferring function codes ICS/SCADA Environment 1.0 | January 2019 39 S tream 1 opcodes 18 0x00000031 18 0x00000032 Stream 1 functions 2 0x000004d4 34 0x00000542 Stream 2 opcodes 1 0x00000031 1 0x00000032 Stream 1 functions 2 0x000004d4 There four TCP connections engineering workstation PLCs breakdown opcodes functions used Stream 3 opcodes 69 0x00000031 69 0x00000032 125 0x00000033 functions 18 0x0000 04bb 10 0x000004ca 10 0x000004d4 8 0x000004f2 4 0x00000524 6 0x00000542 24 0x0000054c 2 0x0000056b 56 0x00000586 Stream 4 opcodes 19 0x00000031 19 0x00000032 functions 8 0x000004ca 8 0x000004d4 8 0x000004f2 4 0x00000524 2 0x00000542 8 0x00000586 Stream 5 opcodes 13 0x00000031 13 0x00000032 functions 12 0x000004bb 2 0x000004ca 2 0x000004d4 2 0x000004f2 2 0 x00000542 6 0x00000586 Stream 6 opcodes 24 0x00000031 24 0x00000032 functions 12 0x000004bb 14 0x000004ca 2 0x000004d4 4 0x000004f2 2 0x00000542 2 0x00000556 2 0x00000560 10 0x00000586 As seen previously unseen functions composition also unseen While functions like SetVariable DeleteObject less self - explanatory functions like Invoke 0x056b ICS/SCADA Environment 1.0 | January 2019 40 GetVarSubStreamed 0x0586 Without - depth knowledge PLC operation internal memory layout one hope make sense Even looking request packets information gained hel p resolving incident There still IP - address unusual functions used S7plus connections enough flag suspicious activity however without prior knowledge something malicious happened would impossibl e infer happened malicious packet content Tools used use - case Tool Homepage tshark https //www.wireshark.org/ wireshark https //www.wireshark.org/ Further reading ENISA Report Protecting Industrial Control Systems Recommendations Europe Member States https //www.enisa.europa.eu/publications/protecting - industrial - control - systems - recommendations - - europe - - member - states ENISA Report Analysis ICS - SCADA Cyber Security Maturity Levels Criti cal Sectors https //www.enisa.europa.eu/publications/maturity - levels ENISA Report Certification Cyber Security skills ICS/SCADA professionals https //www.enisa.europa.eu/publications/certification - - cyber - security - skills - - ics - scada - professionals ENISA Report Good Practices EU ICS Testing Coordination Capability https //www.enisa.europa.eu/publications/good - practices - - - eu - ics - testing - coordination - capability ENISA Report https //www.enisa.europa.eu/publications/window - - exposure - - real - problem - - scada - systems ENISA Report Can learn SCADA security incidents ? https //www.enisa.europa.eu/publications/can - - learn - - scada - security - incidents ICS/SCADA Environment 1.0 | January 2019 41 4 G lossary References Glossary ARP Address Resolution Protocol ASCII American Standard Code Information Interchange C & C Command Control Server CLI Command Line Interfaces COTP Connection Oriented Transport Protocol GUI Graphical User Interface ICS Industrial Control Systems IGMP Internet Group Management Protocol ISO 27001 International Organization Standardization LLDP Link Local Discovery Protocol LLMNR Link Local Multicast Name Resolution PCAP Packet CAPture PLC Programmable Logic Controller SCADA Supervisory Control Data Acquisition SMB Server Message Block SSDP Simple Service Discovery Protocol TCP Transmission Control Protocol TPKT Packet format used transport OSI TPDUs TCP TPDU OSI Transport Protocol Data Uni UDP User Datagram Protocol VNC Virtual Network Computing References Bejtlich R. 2013 The Practice Network Security Monitoring Understanding Incident Detection Response No Starch Press 2013 ISBN - 13:1 - 59327 - 509 - 9 ENISA 2011 Protecting Industrial Control Systems Recommendations Europe Member States https //www.enisa.europa.e u/topics/critical - information - infrastructures - - services/scada last accessed October 7 th 2018 ENISA European Union Agency Network Information Security Science Technology Park Crete ITE Vassilika Vouton 700 13 Heraklion Greece Athens Office 1 Vass Sofias & Meg Alexandrou Marousi 151 24 Athens Greece PO Box 1309 710 01 Her aklion Greece Tel +30 28 14 40 9710 info @ enisa.europa.eu www.enisa.europa.eu ISBN 978 - 92 - 9204 - 288 - 2 DOI 10.2824/995110 