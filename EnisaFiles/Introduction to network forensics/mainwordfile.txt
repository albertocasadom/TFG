www.enisa.europa.eu European Union Agency For Network Information Security FI NAL VERSION 1 0 JANUARY 201 9 Introduction Network Forensics FINAL | Version 1.0 | January 2019 02 Introduction Network Forensics FINAL | Version 1.0 | January 2019 03 About ENISA The European Union Agency Network Information Security ENISA centre network ENISA works groups develop advice recommendations good prac tice information security It assists EU member states implementing relevant EU legislation works improve expertise EU member state supporting development cross - border communities committed improving network information security throughout EU More information ENISA work found www.enisa.europa .eu Contact For queries relation paper please use csirt - relations @ enisa.europa.eu PGP Key ID 31E777EC 66B6052A PGP Key Fingerprint AAE2 1577 19C4 B3BE EDF7 0669 31E7 77EC 66B6 052A For media enquir es paper please use press @ enisa.europa.eu Introduction Network Forensics FINAL | Version 1.0 | January 2019 04 Legal n otice Notice must taken publication represents views interpretations ENISA unless stated otherwise This publication construed legal action ENISA ENISA bodies unless adopted pursuant Regulatio n EU No 526/2013 This publication necessarily represent state - - art ENISA may update time time Third - party sources quoted appropriate ENISA responsible content external sources including exter nal websites referenced publication This publication intended information purposes It must accessible free charge Neither E NISA person acting behalf responsible use might made informati contained publication Copyright Notice Â© European Union Agency Network Information Security ENISA 201 8 Reproduction authorised provided source acknowledged ISBN 978 - 92 - 9204 - 288 - 2 DOI 10.2824/995110 Introduction Network Forensics FINAL | Version 1.0 | January 2019 05 Table Contents About ENISA 3 Executive Summary 9 1 Introduction Network Forensics 10 R elation fields digital forensics 11 Computer forensics 12 Memory forensics 12 Mobile forensics 12 Different types network - based evidence 13 Full content data 13 Session data 14 Alert data 14 Statistical data 15 Relation intrusion detection/prevention systems 15 Difference forensic investigat ion intrusion detection 16 IDS alerts starting point forensic investigation 16 Collecting network - base evidence 17 Acquiring traffic cables 17 Acquiring traffic radio networks 22 Short introduction well - known tools 23 Packet capturing tools tcpdump dumpcap 24 A simple pattern matching engine ngrep 24 A flow capture & analysis tool Argus 25 Network intrus ion detection system example Snort 26 The full - scale analysis tool Wireshark 26 2 Logging Monitoring 28 Useful sources analysis 28 Host - based sources 28 N etwork - based sources 34 Prerequisites enable suitable network forensics 39 Monitoring policy 39 Monitoring targets 40 Additional data sources 41 Timeline anal ysis 41 Aggregation correlation different sources normalisation data 43 Address normalisation 44 Name resolution 45 Time normalisation 45 Introduction Network Forensics FINAL | Version 1.0 | January 2019 06 Collecting nd storing traffic data 46 Collecting agents 46 Storage 47 Data transfer 48 Legal basics 49 Obligations 50 Constraints 51 3 Detection 52 Distinguishing regular traffic suspicious/malicious traffic 52 Baselining normal traffic 52 Filtering network traffic 56 Building signatures 57 Detecting intrusions 57 Detecting enumeration 57 Detecting lateral movement 58 Detecting data exfiltration 59 Using threa intelligence 60 4 Analysis data interpretation 62 Overview 62 The value importance Network forensics 63 Where one find Network forensics ? 64 Logging monitoring 64 Combining pieces 65 What purpose data visualisation ? 66 Chain Custody 66 What Chain Custody ? 67 Why careful Chain Custody important ? 67 Integrity 68 Traceability 69 Practical issues 70 Legal value 71 Example Chain Custody form 71 From data information 72 Introduction data capture files 72 Data Analysis Tools 73 Command line tools 80 Encryption making best encrypted capture 83 CIA triad Privacy Anonymity 83 Networks 85 Encryption 88 IPsec 90 Introduction Network Forensics FINAL | Version 1.0 | January 2019 07 VPN 92 Wireless 94 Network Forensics Encryption 95 Tool sources 98 Further r eading 98 5 Use Cases 99 ICS/SCADA environment 99 Summary 99 Summary Table 101 Introduction exercise overview 102 Task 1 Setting monitoring environment 102 Task 2 Baselining regular traffic 106 Task 3 Initial attack detection 114 Task 4 Second attack stage analysis 118 Task 5 Analysing th e attack PLCs 125 Summary exercise 135 Tools used use - case 135 Evaluation metrics 135 Further reading 136 Detecting exfiltration large finance corporation environment 137 Summary 137 Summary Table 137 Introduction training 138 Introduction proxy server 139 Setup 140 Network Traffic Analysis 149 Detecting data exfiltration DNS 168 Log analysis summary/recommendations 179 Tools used 179 Evaluation metrics 179 Analysis airport third - party VPN connection compromise 180 PART1 Summary 180 PART2 Summary table 180 PART 3 Introduction exercise tools overview 181 PART 4 The Examination 196 Summary exercise 211 Conclusions Recommendations 211 Tools repository 2 12 Evaluation metrics 212 6 Glossary 213 7 References 214 Introduction Network Forensics FINAL | Version 1.0 | January 2019 08 Introduction Network Forensics FINAL | Version 1.0 | January 2019 09 Executive Summary This material contains update existing ENISA Collection CERT exercises specifically focusing 1 The revised/renewed training materials based good practices include needed methodologies tools procedures The updated scenarios also include con tent line current technologies methodologies The training includes performance indicators means supporting use increase operational competence It made available ready - - use version The dura tion training 3 full working days approximately 24 hours The training consists extensive introduction sections 1 4 three exercises section 5 The exercises targeted mainly towards national governmental types CSIRTs focused enhancing skills effectiveness quality service cooperation teams stakeholders 1 https //www.enisa.europa.eu/topics/trainings - - cybersecurity - specialists/online - trainin g - material/technical - operational Introduction Network Forensics FINAL | Version 1.0 | January 2019 10 1 Introduction Network Forensics This chapter establish basic understanding network forensics proceed ho w relates forensic fields importantly host - based forensics memory forensics mobile forensics Section 1.2 introduces different levels traffic capture data retention used Section 1.3 deals relation network forensics intrusion detection process network evidence captured different media cable wireless covered section 1.4 The chapter closing brief introduction common tools used network fore nsics The material presentation discretion trainer If trainees enough knowledge basics material skipped The word forensics comes Latin words forensis scientia th forum Forensic science hence referring process applying scientific methods criminal civil proceedings Correspondingly forens ic scientist collects preserves analyses scientific evidence investigation They may also testify expert witnesses courts Over time technical aspects forensic investigations evolved sub - fields relating speci al conditions evidence involved like toxicology fingerprint analysis etc digital forensics branch forensic science encompassing recovery investigation material found digital devices From Jones et al 2013 see also ENISA 2013 dealings electronic evidence These principles adopted part European Union Council - ted laws regarding admissibility evidence differ countries using principles considered appropriate Data integrity No action taken change electronic devices media subsequently relied upon court Audit trail An audit trail record actions taken handling electronic evidence created preserved An independent third party able examine actions achieve result Specialist support If assumed electronic evidence may found course operation person c harge notify specialists often external advisers time ly fashion Appropriate training First responders mu st appropriately trained able search seize electronic evidence experts available scene Legality The person agency charge case responsible ensuring law general forensic procedur al principles listed principles adhered This applies possession access electronic evidence Network forensics sub - branch digital forensics relating monitoring analysis computer network traff ic purposes information gathering legal evidence intrusion detection evidence Computing disk - centred collecting computer several disks would assure collection Introduction Network Forensics FINAL | Version 1.0 | January 2019 11 relevant digital evidence Today however computing become network - centred people rely e - mail e - commerce network resources It longer adequate think computers isolat ion many connected together using various network technologies Digital investigators/examiners must become skilled following cybertrail find related digital evidence public Internet private networks commercial ystems An understanding technology involved enable digital investigators recognis e collect preserve examine analy e evidence Casey 2011 p 607 Network forensics follow basic prin ciples digital forensics outlined For current task performing network forensics OSCAR methodology used brief introduction follows full description found Davidoff 2012 p 17 - 22 The acronym OSC AR stands O btain information The gathering general information incident environment took place date time incident discovered persons systems involved initially happen ed actions taken since charge etc The goals investigation defined written prioritized always resource constraints investigation S trategize This deals planni ng investigation Acquisition prioritized according volatility sources potential value investigation effort needed get This priority list starting point allocating resources pe rsonnel conduct present tasks acquiring information evidence C ollect evidence Based plan previous phase evidence collected identified source Three points must considered Documentation All actions aken systems accessed logged log safely stored following guidelines evidence The log include time source evidence acquisition method involved investigator Capture evide nce This part packets captured copying logs imaging hard drives systems etc Store/Transport This maintaining Chain Custody i.e `` showing seizure custody control transfer analysis disposi EDRM Glossary n.d. 3 A naly z e During analysis investigator recovers evidence material using number different methodologies tools Forensics researcher Brian Carrier described '' intuitive proc edure '' obvious evidence first identified '' exhaustive searches conducted start filling Carrier 2006 The method chosen analysis depend case leads already present It may take several iterations examination analysis support theory R eport This deal conveying results investigations client It must understandable non - technical persons like managers judges etc It must factual efensible detail Relation fields digital forensics As forensic science general digital forensics divided several sub - branches relating digital devices involved computer forensics memory forensics mobile devic e forensics database 3 found cited source Introduction Network Forensics FINAL | Version 1.0 | January 2019 12 forensics forensic data analysis course network forensics Since topic training network forensics relationship fields shown Computer forensics Sometimes calle host - based forensics oldest field digital forensics deals acquisition analysis data found individual computers typically PCs laptops servers workstations etc Data usually resides hard disk non - vola tile state main memory However evidence may found less commonly known places like firmware storage e.g mainboard graphics cards even form storage media left drive slot e.g DVDs SD cards Even components evidence like keylogger plugged keyboard mainboard USB plugs Network forensics computer forensics complement Adversaries may hide well invisible investigation methods However need communicate packets seen network On hand network forensics tell happened packet data communicating systems processes ent/received packets etc Memory forensics Memory forensics deals forensic analysis computer 's memory contents It method investigation remains usable adversaries write data system non - volatile storage attack In addition method allows analysis volatile evidence i.e RAM content would lost system reboot power - like state operating system kernel process es system Memory forensics hence complements computer - based forensics well network forensics allows recovering keys hard drive encryption keys network connections It may also help discover network interface put promiscuous mode capturing network traffic may find traces previously used network connections parts memory freed yet overwritten Mobile forensics Mobile device forensics branch digital forensics relating recovery digital evidence data mobile device forensically sound conditions obile device typically means mobile phones also relate tablets laptops wearables devices carried around feature memory wireless network connection Mobile device forensics challenging several reasons It may difficult separate device network Most mobile devices WiFi als GSM Bluetooth Near Field Communication NFC infrared connectivity More mobile devices dynamically - connect different network primary network connection fails Turning power source mobile devices challeng ing Batteries may non - removable device may solar panel This may run contrary standard forensic procedures Full device encryption makes data acquisition difficult impossible Standard interface hardware i.e keyboard screen may present Application data formats may unknown proprietary changing frequently Because challenges wide variety tools exists extract evidence mobile devices since single tool method acquire e vidence types devices Introduction Network Forensics FINAL | Version 1.0 | January 2019 13 Different types network - based evidence There different types network - based evidence pros cons respect forensic analysis This section briefly introduce different types nd well - known corresponding tools evidence analysis provided later Full content data Full content data exactly name implies every single piece information passes across network networks Nothing b eing filtered exact copies traffic often called `` packet captures '' abbreviated PCAP stored The following listing shows tiny packet capture excerpt provided one common PCAP tools tcpdump 17:35:14.46 5902 IP tos 0x10 ttl 64 id 5436 offset 0 flags DF proto TCP 6 length 104 10.0.3.246.22 > 10.0.3.1.32855 Flags P. cksum 0x1b51 incorrect - > 0x72bc seq 2547781277:2547781329 ack 1824703573 win 355 options nop nop TS val 622081791 ecr 622081775 length 52 17:35:14.466007 IP tos 0x10 ttl 64 id 52193 offset 0 flags DF proto TCP 6 length 52 10.0.3.1.32855 > 10.0.3.246.22 Flags cksum 0x1b1d incorrect - > 0x4950 seq 1 ack 52 win 541 options nop nop TS val 6 22081791 ecr 622081791 length 0 17:35:14.470239 IP tos 0x10 ttl 64 id 5437 offset 0 flags DF proto TCP 6 length 168 10.0.3.246.22 > 10.0.3.1.32855 Flags P. cksum 0x1b91 incorrect - > 0x98c3 seq 52:168 ack 1 win 355 options nop nop TS val 622081792 ecr 622081791 length 116 17:35:14.470370 IP tos 0x10 ttl 64 id 52194 offset 0 flags DF proto TCP 6 length 52 10.0.3.1.32855 > 10.0.3.246.22 Flags cksum 0x1b1d incorrect - > 0x48da seq 1 ack 168 win 541 ptions nop nop TS val 622081792 ecr 622081792 length 0 17:35:15.464575 IP tos 0x10 ttl 64 id 5438 offset 0 flags DF proto TCP 6 length 104 10.0.3.246.22 > 10.0.3.1.32855 Flags P. cksum 0x1b51 incorrect - > 0xc3ba seq 168:220 ack 1 win 355 options nop nop TS val 622082040 ecr 622081792 length 52 From listing becomes immediately obvious output like rarely useful network forensic investigations Thus analysing PCAP file one either pplies one many useful tcpdump filter options uses graphical tools Wireshark look extracted content data sub - set full content data Extracted content data frequently refers high - level data streams e.g. MAC addresses IP protocols displayed analyst 4 4 Source Wireshark n.d. https //www.wireshark.org/docs/wsug_html Introduction Network Forensics FINAL | Version 1.0 | January 2019 14 Figure 1 - 1 Session data Another source network - based evidence called session ata It usually consists aggregated traffic metadata usually refers conversation two network entities grouped together '' flows '' and/or groups network packets related one another cf section 1.5.3 An example shown listing 44 packets seen 44 TCP packets traced elapsed wallclock time 0:00:00.025033 1757 pkts/sec analys ed trace file elapsed time 0:00:00.435121 TCP connection info 1 host1.net:63807 - prefetch.biz www a2b 7 > 6 < 2 host1.net:62941 - prefetch.biz www c2d 6 > 4 < 3 host1.net:57312 - prefetch.biz www e2f 6 > 5 < 4 host1.net:55792 - prefetch.biz www g2h 6 > 4y With respect network forensics therefore session data able inform investigator questions w ho talked long etc without looking contents conversation Sometimes investigator needs know 700,000 packets transferred two otherwise `` quiet '' network nodes Sunday 02:15 Alert data Whenever network traffic triggers pre - defined item interest particular pattern bytes counts activity characteristics analyst dealing alert data Alerts typically generated Network Intrusion Detection Systems NIDS Suricata Snort cf section 1.5.4 The listing shows example snort alert message ** 1:528:3 BAD TRAFFIC loopback traffic ** Classification Potentially Bad Traffic Priority 2 10/16 - 08:21:31.175096 127.0.0.1:80 - > `` INTERNET_IP '' PORT TCP TTL:123 TOS:0x0 ID:42230 IpLen:20 DgmLen:40 ***A*R** Seq 0x0 Ack 0x32A60001 Win 0x0 TcpLen 20 Xref = > http //rr.sans.org/firewall/egress.php A common problem almost every nvestigation involving alert data analyst frequently deal false alerts commonly referred false positives thus extra care needs taken interpreting data Moreover alert data often enough decide w hether particular Introduction Network Forensics FINAL | Version 1.0 | January 2019 15 pattern network traffic malicious benign The investigator need context arrive conclusion Statistical data Finally one source network - based evidence called statistical data T many diffe rent types statistical data sometimes also referred metadata many useful tools generate different data types Wireshark described section 1.5.5 Statistical data provide analyst network - related aspects number bytes contained packet trace start end times network conversations number services protocols used active network nodes least active network nodes outliers network usage average packet size average pa cket rate It therefore also act useful source anomaly detection Relation intrusion detection/prevention systems From Scarfone 2007 chapter 2 p 15 '' Intrusion detection process monitoring events occurring computer system network analysing signs possible incidents violations imminent threats violation computer security policies acceptable use policies standard security practices An intrusion detection system ID S software automates intrusion detection process An intrusion prevention system IPS software capabilities intrusion detection system also attempt stop possible incidents '' Notifications malicious activity violation typically reported either administrator collected centrally using security information event management SIEM system IDSs classified based detection takes place based detection method employed Further quoting Scarfone 2007 chapter 4 p. 35 '' A network - based intrusion detection system NIDS monitors network traffic strategic points within network segments devices analyses network transport application protocols identify suspicious activity A NIDS capability change drop harmful detected packets would called Network Intrusion Prevention System NIPS '' Again quoting Scarfone 2007 chapter 6 p. 65 '' A host - based intrusion detec tion system HIDS monitors characteristics single host events occurring within host suspicious activity Examples types characteristics host - based IDS might monitor wired wireless network traffic tha host system logs running processes file access modification system application configuration changes '' According Lokesak 2008 '' Signature - based IDS refers detection attacks looking specific patterns byte equences network traffic known malicious instruction sequences used malware This terminology originates anti - virus software refers detected patterns signatures Although signature - based IDS easily detect known attacks impossible detect new attacks pattern available '' Anomaly - based detection characterized Rowayda 2013 p. 227 `` Anomaly detection .. studies normal behaviour monitored system looks dif ference detect intrusions able detect new attacks attack assumed different normal activity However anomaly detection sometimes sets false alarms erroneously classifies normal user behaviours att acks '' Introduction Network Forensics FINAL | Version 1.0 | January 2019 16 Difference forensic investigation intrusion detection From EC - Council Press 2010 p 29 The following elements end - - end forensic trace The end - - end concept An end - - end investigation tracks elem ents attack including attack began intermediate devices used attack attacked Locating evidence Once investigator knows devices used attack search evidence th ose devices The investigator analyse evidence learn attack attacker Pitfalls network evidence collection Evidence lost seconds log analysis logs change rapidly Sometimes permis sion required get evidence certain sources ISPs This process take time increases chances evidence loss Other pitfalls include following An investigator network administrator may mistake normal computer ne twork activity attack activity There may gaps chain evidence Logs may ambiguous incomplete missing Since Internet spans globe nations may involved investigation This create legal political sues investigation Event analysis After investigator examines information correlates events data various sources get whole picture Investigation security alert nec essarily goal prosecute however legal action may still consequence investigation For example termination employees result investigation may lead unfair dismissal suit In case personally identifiable information PII theft regulatory obligations It therefore advisable treat evidence going used court fluence Forensic Science In addition providing scientific techniques theories processing individual pieces digital evidence Forensic Science help reconstruct crimes generate leads Using scientific method analyse available evidence reconstruct crime test hypotheses digital investigators generate strong possibilities Casey 2011 p 15 IDS alerts starting point forensic investigation Every forensic investigation must start somewhere form report accusation human automatic alert computer Without starting point nothing investigate In practice also take form alert IDS curious log ent ries abnormal system behaviour like high CPU load complaint e - mail combination indicators reliability information An indi vidual making harassment complaint repeated offensive messages appearing screen might actually dealing computer worm/virus An intrusion detection system alert may indicate attempted unsuccessful intrusion might false alarm Therefore necessary weigh strengths weaknesses known nuances Casey 2011 p 198 Introduction Network Forensics FINAL | Version 1.0 | January 2019 17 Collecting network - based evidence Depending th e technical means available well legal regulatory requirements always possible wiretap everything keep full log data sent The task acquiring network evidence divided active passive acquisition Passive acquisition happens data gathered without emitting data OSI Layer 2 Traffic acquisition capturing sniffing falls field In contrast active acquisition happens evidence gathered interacting ystems network i.e sending queries systems logging log host SIEM management station This may even include scanning network ports systems determine current state To preserve much evidence poss ible acquisition change packets send additional packets alter network configuration thus observing data integrity principle Quoting Jones 2013 p 45 - fidelity evidence z ero impact environment For copper wires would mean observing changes voltages without ever modifying For fibre cables would mean observing quanta without ever injecting For radio frequency would mean observi ng RF waves without ever emitting In real world would equivalent murder Davidoff Ham 2012 p. 45 Network forensic investigators pas sively acquire network traffic intercepting sent across cables air network equipment hubs switches One word advice If investigators capture traffic adversaries A compromised system cou ld trivially act passive listener eavesdrop data transfers communications Any evidence captured anyone else local network Acquiring traffic cables Cables allow point - - point connections stations The common cabling types copper cables twisted - pair coaxial subtypes information transferred form electrical signals glass fibres information takes form optical signals Both sorts cables sniffed equipment side effects vary Coaxial cable add itional outer metal layer shield Another insulation layer outer protective layer The term coaxial comes inner conductor outer shield sharing geometric axis The advantage coaxial cables core thus transmiss ion shielded electromagnetic interference If inner core tapped traffic stations share physical medium captured investigator The main use coaxial cable transmission line radio fre quency signals Applications include They fallen use replaced cheaper performant network technologies Fast Gigabit Ethernet based twisted pair cabling although legacy installations still might use Twisted Pair TP cabling wiring two conductors si ngle circuit twisted together negate electromagnetic interference Multiple circuits combined cable optional Introduction Network Forensics FINAL | Version 1.0 | January 2019 18 outer shielding layer In latter case called Shielded Twisted Pair STP case Unshielded T wisted Pair UTP Typical deployments computer networks consist 4 pairs wires one cable TP cabling typically deployed star network topologies stations connected switch hub contrast direct connection called cross - cables relatively rare By tapping one pair TP wires switched network traffic relating one end station may received Standard network taps allow tapping two wire pairs cable receive least bi - direc tional traffic Fibre optic cables consist thin strands glass sometimes plastic bundled together send signals across distance Light beamed fib r e one end travels along optic fibre reflecting constantly ag ainst walls reaches optical receiver end 1.4.1.1 Network taps Inline network taps OSI layer 1 devices see Figure 1 - 2 inserted inline two physically connected network devices The network tap pass alo ng packets physically replicate copies one monitoring ports Network taps like one figure commonly four ports two connected inline facilitate normal traffic two sniffing ports mirror traffic one direction Insertion inline network tap typically causes brief disruption since cable must separated connect network tap inline Figure 1 - 2 Inline network tap They com monly designed require power passively passing packets This reduces risk network outage caused tap This cover power requirements monitoring station though Fully passive tapping possible Gigabit Ethernet cable pair transports 5 bits simultaneously directions The Layer 1 PHY chips end cable must separate two signals This possible know signal dedu ct send signals mixed signals line interpret information sent link partners Introduction Network Forensics FINAL | Version 1.0 | January 2019 19 Figure 1 - 3 Gigabit Ethernet network tap function schema The way termin ate signal shown Figure 1 - 3 5 use PHY chip separate signal send signal link partner However passive longer case failure link go services link inter rupted To minimize problem copper tap bypass switch relays closes power situation shown picture bring link back This drawbacks see article Network tap section Gigabit Base - T issue Wikipedia Vampire taps Figure 1 - 4 6 devices pierce shielding coaxial cables provide access Figure 1 - 5 7 inserting probe thr ough hole drilled using special tool outer shielding contact inner conductor spikes bite outer conductor Unlike inline network taps cable need severed disconnected vampire tap installed Great care must taken drilling cable since inner conductor millimetres thick best conductor broken drilling far 8 5 Source https //en.wikipkedia.org/wiki/Network_tap # /media/File Gbit - Tap_schema.gif 6 Source https //en.wikipedia.org/wiki/Vam pire_tap # /media/File ThicknetTransceiver.jpg 7 Source https //en.wikipedia.org/wiki/Vampire_tap # /media/File VampireTap.jpg 8 As everybody knows ever dealt 10Base5 cabling Introduction Network Forensics FINAL | Version 1.0 | January 2019 20 Figure 1 - 4 V ampire tap Figure 1 - 5 Vampire tap internals Fibre Optic network taps Figure 1 - 6 9 work similarly inline taps copper cables The investigators splice optic cable connect por tap insert pre - fabricated tap point optical cable terminating like switch patch panel Figure 1 - 6 Passive fibre optic tap 9 Source https //en.wikipedia.org/wiki/Network_tap # /media/File Fiber_optic _tap.png Introduction Network Forensics FINAL | Version 1.0 | January 2019 21 Attaching tap network dis rupt network point insertion cause additional signal attenuation although taps complex may amplify signal back original level require kind power supply 1.4.1.2 Hubs A network hub OSI Layer 1 device physically connects stations local subnet one circuit It maintains knowledge devices connected ports It merely physical device e hub receives fram e forwards ports Therefore every device connected hub physically receives traffic destined every device attached hub Thus traffic segment trivially captured connec ting unused port hub Many devices switches A reliable way determine device actually hub connect station put network interface promiscuous mode observe traf fic If packets destined monitoring station broadcast traffic seen device switch If hub traffic connected stations seen 1.4.1.3 Switches Like hubs switches connect multiple stations togeth er form LAN Unlike hubs switches use software keep track stations connected ports CAM Content Addressable Memory dual collision domain Depending OSI layer switch operates referred layer 2 switch operating data - link layer layer 3 switch operating network layer also called routing A switches CAM table stores MAC addresses corresponding switch ports The purpose CAM table allow switch minimize traffic per port ndividual station receives traffic destined Switches often configured replicate traffic one ports port aggregation analysis The vendor - tigators need needs connected mirroring port capture traffic Investigators must consider bandwidth mirroring port comp arison traffic monitored ports drop packets 1.4.1.4 Active acquisition Without administrative access still methods sniff traffic switched networks In cases network administrators trusted inves tigators may need use techniques attackers This recommended seen measure last resort cause switch operate outside normal parameters likely trigger intrusion detection mechanisms network First attacker flood CAM table switch information sending packets CAM table overflows switches defa systems CAM table every port Introduction Network Forensics FINAL | Version 1.0 | January 2019 22 Protocol ARP used stations n LAN dynamically map IPv4 addresses Layer 3 corresponding MAC addresses IPv6 function carried within ICMPv6 principle otherwise identical address Other stations LAN add bogus information ARP tables send traffic station sent instead attacker copy change and/or forward victim Acquiring traffic radio networks There additional complexities involved capturing traffic wireless network In section significa nt notes capturing analysing wireless traffic given There many protocols use today enable wireless networking To name common ones WLAN refers Wireless Local Area Networks specified IEEE 802.11 - 20 16 10 Mobile telephone wide variety protocols currently use Bluetooth Also called Wireless Personal Area Networks specified IEEE 802.15.1 11 Depending class device ranges vary 0.5 100 m. IEEE 80 2.15.4 12 This refer lower layers protocols like ZigBee 13 LoPWAN 14 ranges similar Bluetooth Power requirements data ranges generally lower 802.15.1 except Bluetooth LE low energy For protocol ar e several frequency band data transmitted band subdivided smaller bands called channels Not frequency bands channels use everywhere world Most countries limit frequency channels us ed within jurisdiction The consequence network equipment made one country may operate different frequencies channels one made another country Thus adversaries using wireless technology different country may detected countries network equipment Spectrum analysers designed monitor RF frequencies report usage They helpful identifying rogue wireless devices channels use 1.4.2.1 WLAN passive evidence acquisition To capture WLAN traffic investigators need 802.11 wireless card capable running Monitor mode mode many WLAN cards support There diffe rence Monitor mode P romiscuous mode summed follows 10 IEEE 2016 IEEE 802.11 - 2016 Wireless LAN Medium Access Control MAC Physical Layer PHY Specifications https //ieeexplore.ieee.org/document/7786995 11 Original standard IEEE IEEE 802.15.1 - 2005 Wireless Medium Access Control MAC Physical Layer PHY specifications Wireless Personal Area Networks WPAN http //standards.ieee.org/findstds/standard/802.15.1 - 2005.html maintained Bluetooth SiG Bluetooth 2018 https //www.bluetooth.com/specifications/protocol - specifications 12 IEEE 2015 IEEE 802.15.4 - 2015 IEEE Standard Low - Rate Wireless Networks https //standards.ieee.org/standard/802_15_4 - 2015.html 13 Zigbee 2018 https //www.zigbee.org/zigbee - - developers/zigbee - 3 - 0/ 14 Kushalnagar 2007 https // datatracker.ietf.org/doc/rfc4919/ Introduction Network Forensics FINAL | Version 1.0 | January 2019 23 Monitor mo de Packets captured without associating access point Traffic access points stations radio range captured independent SSID This thought analogue standing room listening people 's c onversations Promiscuous mode Packets captured associating access point system packets stations associated AP This thought analogue joining group people conversation hearing sentences related An important difference Monitor mode promiscuous mode monitor mode packets captured 802.11 format promiscuous mode presented Ethernet 802.3 format From forensic standpoint monitor mode preferable completely passive conveys information It recommended use special - purpose WiFi monit oring card configured operate completely passively Similar considerations must made 802.15.1 802.15.4 traffic Equipment capture mobile telephone traffic typically available investigators belonging law enforc ement Regardless whether WLANs traffic encrypted investigators gain great deal information capturing analysing 802.11 management traffic This information commonly includes Broadcast SSIDs sometimes even non - broadcast ones WAP MAC addresses Supported encryption/authentication algorithms Associated client MAC addresses Even WLAN traffic encrypted single shared key stations This means anyone gains access encryption k ey listen traffic relating stations physical hubs 15 For investigators helpful local IT staff provide authentication credentials facilitate monitoring WLANs traffic Furthermore well - known flaws common WLAN encryption algorithms WEP allow investigators circumvent crack unknown encryption keys Once investigator gained full access unencrypted 802.11 traffic contents data analysed th e manner unencrypted network traffic Short introduction well - known tools In following sub - sections brief introduction common network forensic tools given outlining general purpose wh ile chapter 2 go depth tools used practice The focus open - source Linux - based tools VM used exercise also Linux - based goal ENISA training material make accessible wider audience since non - free OS VM and/or non - free tools would impose licence costs participants Besides many forensic practitioners use Linux work introduced tools except Argus also run Wi ndows macOS 15 This mitigated deployment WPA3 Introduction Network Forensics FINAL | Version 1.0 | January 2019 24 Packet capturing tools tcpdump dumpcap Getting access network traffic prerequisite analysis real - time - line sometime later Beyond dedicated hardware sniffers two software tools perform task capturing network packets writing disk tcpdump 16 dumpcap 17 18 The former software package latter tool Wireshark package used perform actual packet capturing Wireshark tshark tcpdump oldest tools also source libpcap library reading filtering packets Both tools similar usage command line options dumpcap largely modelled tcpdump In imple invocation tcpdump dumpcap given network interface listen filename write like tcpdump - eth0 - w dump.pcap dumpcap - eth0 - w dump.pcapng Both tools use pcap output format newer pcapng format Additional features include filtering language Berkeley Packet Filter BPF selecting packets network allows capturing specific traffic like HTTP coming given IP - address like tcpdump src 192.168.2.3 tcp port 80 Another featur e ability switch output files given size exceeded This come handy underlying filesystem supports files certain maximum size like 2 GB since analysing large dump files time - consuming especially importing dump file full analysis tool like Wireshark A simple pattern matching engine ngrep A common task network forensics intrusion detection searching pattern network traffic passing certain point network While carried full analysis tools like Wireshark IDS like snort sometimes simpler lightweight tool better suited job This niche filled ngrep 19 simple effective tool searching simple patterns network traffic It basically It uses pcap library tcpdump libpcap read packet network interface Perl Compatible Regular Expression PCRE library pattern mat ching read packets ngrep command line tool makes easy applied demand assumed command line interface CLI access system present Besides sniffing network interface ngrep also used search patterns pcap file Filtering ngrep two - fold first textual hexadecimal pattern used search payload second pcap filter mostly used filter IP - addresses port numbers etc An ex ample ngrep - q - eth0 - W byline - wi '' pass|USER '' port 80 searches either coming port 80 TCP UDP - instructs ngrep ignore case matching It outputs pack ets standard output matching pattern 16 https //www.tcpdump.org/ 17 https //www.wireshark.org/ 18 For completeness third tool Linux netsniff - ng https //www.netsniff.org/ 19 https //gith u b.com/jpr5/ngrep Introduction Network Forensics FINAL | Version 1.0 | January 2019 25 A flow capture & analysis tool Argus Before goi ng details often useful start acquiring overview going network This network flow tools come use A flow sequence packets source destination Brownlee et al. 1999 By looking flows instead packets one quickly find things stand like new hosts ne twork unusually high amounts data transfers data flows uncommon ports etc Furthermore storing flow records instead full packet captures lot space conserved payload data OSI Layer 5 stored low er layer information aggregated thus enabling longer time periods monitoring Argus one first implementations network flow monitoring system used acronym Audit Record Generation Utilization System 20 Bejtlich 201 3 describes Originally developed Carter Bullard maintained Qosient Technologies 21 Open Source licence The system consists two packages The Argus package contains Arg us monitor consisting program Argus used capture packets using libpcap network file aggregate flow records Running Argus monitor similar tcpdump example argus - eth0 - w log.argus generate flow records network interface argus - r dump.pcap - dump.argus create flow records packet capture file If subset network traffic like say subnet 172.28.2.0/22 interes Argus supports use tcpd ump style filter expressions like argus - eth0 - w log.argus net 172.28.2.0/22 Together flow records Argus provides several flow metrics reachability loss jitter retransmission delay The flows also enriched attribute da ta available packet contents OSI Layer 2 addresses tunnel identifiers MPLS GRE IPsec etc ... protocol ids SAP 's hop - count options Layer 4 transport Th e argus - clients package contains numerous clients analyse flow records ra Read Argus program flexible Other programs include rapolicy match flow records access control list catch misconfigured packet filt ers ragraph graph flow record data The following picture shows output ratop hosted website ratop - r argus.out - remote 'port http' 2018/07/17.19:21:31 CEST StartTime Flgs Proto SrcAddr Sport Dir DstAddr Dport TotPkts TotB ytes State 00:15:36.233618 e tcp 78.186.188.12.52903 - > 85.114.128.143.80 4 228 RST 09:41:32.626411 e tcp 179.228.18.161.33058 - > 85.114.128.143.80 4 228 RST 18:17:01.280555 e tcp 93.174.93.218.58117 - > 85.114.128.143.80 3 174 RST 18:06:23.979436 e tcp 93.174.93.218.43854 - > 85.114.128.143.80 3 174 RST 16:20:22.553271 e tcp 93.174.93.218.43915 - > 85 .114.128.143.80 3 174 RST 18:44:35.080129 e tcp 216.244.65.210.59901 - > 85.114.128.143.80 3 174 RST 20 There also system monitoring package name part exercise http //argus.tcp4me.com/ 21 https //qosient.com/argus/index.shtml Introduction Network Forensics FINAL | Version 1.0 | January 2019 26 21:47:48.993661 e tcp 109.248.9.10.42952 - > 85.114.128.143.80 3 174 RST .. ProcessQueu e 729 DisplayQueue 729 TotalRecords 860 Rate 19.6161 rps St atus Idle Network intrusion detection system example Snort A NIDS device software application monitors network signs malicious activity This form matching signatures known bad activity general form deviations expected behaviour either form established policy learned patterns When activity discovered NIDS logs security message console central log host dedicated Security Information Event Management SIEM system An example open source NIDS Snort 22 operates primarily attack signatures thus signature - based NIDS kind It originall developed Martin Roesch Open Source licence maintained Cisco Systems The tool database attack signatures maintained separately Packet capture called acquisition snort terminology libpcap various Linux BSD firewall frameworks like NFQ NetFilter Queue IPFW IP FireWall Snort also read packet capture files requiring libpcap Snort configured run three modes Snort manual n.d. Sniffer mode simply reads packets network displays continuous human readable stream console Packet Logger mode logs packets disk In modes snort perform pretty much like tcpdump NIDS mode whi ch performs detection analysis network traffic rule - set laid user It take specific measure based identified What exactly detected logged depends rule base snort configured run There fourth mode called NIPS Network Intrusion Prevention System inline snort snort drop rewrite network traffic detects malicious activity order prevent attacks This requires snort positioned hat attack traffic pass system snort runs Dietrich 2016 The full - scale analysis tool Wireshark Wireshark 23 originally named Ethereal open source packet analyser package It offers GUI tool see Figure 1 - 7 also called Wireshark command line analyser called tshark Analysis tools used network administrators forensic investigators network forensics also troubleshooting analysis software communications protoco l development education The technical requirements cases nearly identical groups use tool An analysis tool presents user human readable representation network packet data either form plain text form graphical usage interface GUI The data typically represented individual packets packet broken ISO layers layer broken 22 https //www.snort.org/ 23 https //www.wireshark.org/ Introduction Network Forensics FINAL | Version 1.0 | January 2019 27 individual fields bits Besides representation functio n analysis tools allows user filter irrelevant packets thus narrowing amount data manageable amount analysis Further functions may include The display metadata importantly time packet ca ptured form timestamp The timestamp absolute relative packets Name resolution like vendor network card derived MAC - address full qualifie domain names FQDN Domain Name System DNS etc Statis tical functions like packet count network - address byte - counts top - talkers breakdown data network protocols etc These functions often used beginning investigations tigation Stream - assembly especially stream - oriented protocols like TCP Extraction network artefacts higher - level protocols like transferred files HTTP FTP chat conversations Decryption network traffic necessary key somehow available Often analysis tools functionality extended plugins add new functionality like dissecting new protocols different graphical representations missing statistical functions Figure 1 - 7 Wireshark GUI Also included packet capture tool dumpcap several tools merge convert edit capture files Wireshark calls dumpcap sniffing traffic This security advantage dumpcap process run extended root privileges undertake capturing wire Wireshark process run normal privileges As dissectors Wireshark plagued security vulnerabilities past allevia tes security risks analysing malicious traffic Calling analysis program done several ways using shortcut desktop directly menu associating Wireshark .pcap file extension double clicking p cap file file manager command line wireshark Unix/Linux wireshark.exe Windows Introduction Network Forensics FINAL | Version 1.0 | January 2019 28 2 Logging Monitoring Logging monitoring hosts networks one everyday tasks IT - administrators security personnel Logging monitoring typically undertaken one several goals mind Monitoring resource consumption processor memory disk storage network bandwidth goal proactively identify shortages deadlocks Functional monitoring identify problems applications Security monitoring become aware ongoing known attacks For scope present work term logging means components issue notifications log messages periodically certain conditions met These messages stored locally and/or copied central location log server Monitoring means active probing eavesdropping gather information state systems networks Without logging monitoring problems could remain un detected long periods time Events especially security incidents become much harder even impossible reconstruct The following sections detail task monitoring logging closely starting useful sources data analyse For network forensics become possible even preconditions must met detailed section Error ! Reference source found Section Error ! Reference source found examine key forensic instrument reconstructing events timeline followed section Error ! Reference source found. correlation data different sources Section Error ! Reference source found deal tasks collecting storing monitored data Finally collecting security data legal ramifications covered detail section Error ! Reference source found Useful sources analysis In following sub - ections analysis prevalent exhausting sources host network - based forensics Host - based sources Host - based tools meant tools gather analyse log data Log data generated applications oper ating system i.e components kernel notify developers system administrators events The concrete structure reliability var underlying log infrastructure The information conveyed depends developers thought worth logged It typically possible increase amount information logged beyond designed system Usually possible filter amount information acceptable level The following sub - ections introduce often used logs major operating systems 2.1.1.1 Syslog When talking syslog one keep mind two standards named syslog The old - style BSD syslog specified Lonvick 2001 well newer `` Syslog '' type protocol specified Gerhard 2009 From application programmer perspective identical use syslog API User space programs use libc syslog function turn logs user space mes sages /dev/log Introduction Network Forensics FINAL | Version 1.0 | January 2019 29 UNIX domain socket The syslogd daemon listens socket Other log sockets used application developers syslogd configuration must adopted use 24 syslogd write messages log file named pipe forward syslog daemons remote hosts syslog protocol see section 2.5.3.1 Syslog protocols At early boot stages syslog daemon yet started logging behaves differently The Linux kernel logs message - memory buffer klogd daemon extracts messages kernel log buffer sends systems console This function also assumed implementations syslogd If neither running data remains buffer someon e reads buffer overflows results overwriting older entries buffer For convenience dmesg program called user space access kernel log buffer Advantages Syslog well - established system ships w ith every Linux system network devices like switches routers firewalls WLAN access points etc Investigators almost certainly find couple devices using syslog Likewise wide range tools gather parse normalise anal yse syslog messages already present With messages simple ASCII format human readability always ensured conversion necessary transferring logfiles systems see Error ! Reference source found Disadvantages The source events logged syslog system authenticated every local process claim given name process id user id etc The data simply recei ved stored syslog daemon Data logged free - form Automated log - analysers need parse human language strings identify message types parse parameters This cause regular expression errors steady need catch - upstream developers might tweak human language log strings new versions software The entire length f syslog message limited 1024 bytes The message must visible characters including space li ne - breaks non - printable characters In cases however useful binary data blobs analysis example ATA SMART blobs SCSI sense data firmware dumps binary packet data The metadata stored log entries limited lacking key bits information service name audit session monotonic 25 timestamps The timestamps generally carry time zone information timestamp syslog message header contain information th e year time zone sub - second resolution 26 The former needed information correlated spans multiple time zones The latter useful hundreds events occur single system proxies gateway tha connections per second case larger organisations 24 The mkfifo command used create sockets file system written like normal Unix files 25 https //en.wikipedia.org/wiki/Monotonic_function 26 RFC 5424 addresses section 6.2.3 see Gerhard 2009 https //tools.ietf.org/html/rfc5424 Introduction Network Forensics FINAL | Version 1.0 | January 2019 30 2.1.1.2 Systemd - journald Systemd replacement init system Linux systems Many Linux distributions ship systemd default init system It comes l ogging program called systemd - journald short journald addresses shortcomings Linux syslog implementations replaces syslog klogd Systemd replace standard Linux logging facilities although uses API 27 inter nal use handle log messages coming different sources including Kernel log messages via kmsg otherwise handled dmesg klogd Simple system log messages via libc syslog 3 call These messages handled traditio nal syslog daemons Structured system log messages via native Journal API i.e sd_journal_print 4 Standard output standard error systemd service units Audit records originating kernel audit subsystem The main difference syslo g journald replacing plain text files structured format 28 It retains syslog compatibility API level log syslog messages journal files Journald log messages consist fixed list fields th e main log messages single free - form body also allow application define fields message The format allows quick access retrieval messages fields Advantages As systemd handles messages /proc/kms g handle early boot late shutdown logging although syslog implementations also capability Journald need log rotation using space - optimized format directly require renaming files archive entries automatically limiting maximum size journal disk This removes lot difficult y' programs face dealing log files Journald log files smaller somewhat easier parse automated tools There prot ection tampering journald logs internal signing mechanism detect manipulations log Also source log messages easy fake syslog requires kernel level privileges However still possible de lete log entries whole log attacker gets sufficient privileges manipulate i.e write log files typically root Disadvantages J ournald provisions forward logs hosts Instead journald logs transferred eit periodic file transfers syslog forwarders There recent development called systemd - journal - remote 29 tries address shortcomings forwarding systemd logs via HTTPS 30 quality remains evaluated Another way wo uld use structured syslog 27 sd_jo urnal_print 4 28 https //www.freedesktop.org/wiki/Software/systemd/journal - files/ 29 https //www.freedesktop.org/software/systemd/man/systemd - journal - remote.html 30 https //www.freedesktop.org/wiki/Software/systemd/export/ Introduction Network Forensics FINAL | Version 1.0 | January 2019 31 messages Gerhard 2009 one implementation 31 support journald event fields Journald logfiles longer directly processed standard tools made syslog text logs However conversion possible 2.1.1.3 auditd auditd logs text files consisting entries Each entry single line key - value pairs Entries raw format resolve user - ids syscalls etc enriched format resolve The following listing example audit log line raw format type=USER_AUTH msg=audit 1509820875.793:519693 pid=17957 uid=1000 auid=1000 es=4657 msg='op=PAM authentication acct= '' root '' exe= '' /usr/bin/su '' hostname= ? addr= ? termina l=pts/0 res=success' Linux security systems like SELinux 32 GRSecurity 33 others may make use auditd use log format depending implementation Unlike syslog configuration logged auditd kept cen tral location developed locally usually come operating system application Advantages With regards audit configuration system administrators investigators rely developers tho ught useful The audit subsystem generates audit - id auid user logs stays created processes even user assumes user ids sudo su This helps keeping track user activities session eve n user id changed su sudo Disadvantages Since configuration come system developed deployed - site may result longer deployment time Finding right amount audit data difficu lt easy configure much audit messages turn hurt system performance consume disk space like logging every instance open 2 system call track file access Even small set calls audited performanc e may hurt number rules becomes high As events logged relatively low level additional work needed assemble various pieces information meaningful higher - level messages In practice auditd configur ed regulation requires By default auditd logs forwarded Being text files however copied downloaded means There dispatcher program 34 locally forward audit messages 31 https //www.rsyslog.com/ 32 https //selinuxproject.org/page/Main_Page 33 https //grsecurity.net/ 34 Audispd http //man7.org/linux/man - pages/man8/audispd.8.html Introduction Network Forensics FINAL | Version 1.0 | January 2019 32 various sockets file additional plugins forward carried plain text TCP connection syslog 2.1.1.4 Alerts HIDS HIDS detect intrusions searching signatures malicious software examples anti - virus scanners look f anomalies changes configurations system files The detection even extends scanning memory signs intrusion manipulated kernel data structures analysis logs generated system Samhain 35 example HIDS scans changed files kernel data structures OSSEC 36 scan operating system logs The methods log detected events IDS vary concrete systems use syslog others use standards like I DMEF 37 proprietary formats Coverage IDMEF formats vary depending tools used analysis Advantages HIDS knowledge internals monitored hosts unlike NIDS For example NIDS spot malicious network tra ffic originating host tell process user responsible HIDS access systems internal data structures potentially A HIDS valuable detecting intrusion also aiding ana lysing attack especially uses anomaly detection system files data structures Disadvantages HIDS face problem false positives false negatives i.e either reporting intrusion none reporting intrusi e. The challenge operating HIDS fine - tuning acceptable level false positive false negative messages keeping acceptable system performance The necessary work configure HIDS needs figured operating costs Commercial IDS need initial investment keeping signature anomaly database - - date may incur additional operating costs commercial feed chosen For hypervisors systems strong process separation may possible HIDS monitor look separate compartments This would make deployment hypervisor host impossible Care taken sel ecting architectures HIDS used Also HIDS may support archi tecture - - - box 2.1.1.5 Wtmp x Unix - like operating systems use files wmtp utmp btmp keep track logins logouts The files usually kept /var/log/ Documentation file format corresponding manual pages b een standardized across different Unix flavours original form extended format denoted `` x '' suffix developed Sun Microsystems part POSIX 35 http //www.la - samhna.de/ 36 https //ossec.github.io/ 37 Debar et al 2007 RFC 4765 https //www.ietf.org/rfc/rfc4765.txt Introduction Network Forensics FINAL | Version 1.0 | January 2019 33 specification Which file format file naming convention withou `` x '' used depends Unix variant The role file follows utmp x keeps record logged user well system boot time status wtmp x keeps history successful logins users btmp x record failed login attempts Disadvantages As Unix log facilities files secured manipulated adversary root privileges Tools manipulate binary file format conceal activities exist public repositories 38 2.1.1.6 EventLog Microsoft uses logging framework Windows NT family operating systems With Windows Vista framework revised expanded essentially two standards later discussed th e older Windows NT 3.5 Windows XP/Server 2003 Windows Event Logging API binary file format newer since Windows Vista/Server 2008 Windows Event Log XML - based file format Event Log based upon structured message format API includes functions event consumers like Windows Event Viewer program functions event producers called EWT API used kernel user space programs log events Events first written kern el ring buffer later consumed push pull subscription depending needs consumer The - disk structure BXML serialisation XML faster parse space efficient redundancy removed data structures The event collector service Windows logs events produces EWT disk files ending .evtx stored file system 39 Windows Vista defines 50 files different purposes among System.evtx Applicatio n.evtx Security.evtx correspond older Event Logging files name For general structure see following listing < Events > < Event > < /Event > < Event > < /Event > < Event > < /Event > 38 https //packetstormsecurity.com/UNIX/penetration/log - wipers/ 39 % SYSTEMROOT % \ system32 \ winevt \ Logs \ Introduction Network Forensics FINAL | Version 1.0 | January 2019 34 < /Events > From Schuster 2007 Events element spans whole file It acts container Event elements Each provides information single event Every Event starts System element filled Windows event logging subsystem contains basic set information like timestamp Event ID number subsystem eve nt message originated One EventData UserData BinaryEventData DebugData ProcessingErrorDat structures may follow System container Of EventData What logged Windows controlled th rough Audit settings two - stage process First administrator configure general audit settings management console Second access objects like files registry keys need fine - controlled System ACLs SACLs uditing configured specific operations users groups Unlike Linux auditing audit rules Windows thus kept central space distributed throughout systems objects Forwarding Event Logs either push `` urce initiated '' pull `` collector initiated '' The network protocol HTTPS Alternatively forwarding agent host import Event Logs log message translated open format i.e syslog implementations like sna 40 rsyslog 41 give two examples Disadvantages The event records file store full strings messages taken separate DLLs change Windows versions even application updates application supp lies event log DLL This allows language independent storage event logs makes normali z ation event logs difficult event structure i.e field layout change Windows versions The proper DLLs must sup plied supporting information event log Paths DLLs stored Windows registry 42 Usernames likewise stored event log file event log stores SID If mapping SIDs back user group names desired corresponding information must supplied Event logs somewhat pr tected tampering event log files locked writing OS kernel SYSTEM user However files manipulated i.e deleted overwritten throu gh Windows log API When locked kernel files manipulated like file neither integrity protected encrypted except full disk encryption like BitLocker deployed Network - based sources Network traffic data valuable source information potential security issues In successful attacks attacker manipulate compromised host way host logging useful information even logging false formation network data may evidence left It also give information preparatory activities ttackers port scans unsuccessful attacks 40 https //www.snaresolutions.com/products/snare - agents/ 41 http //www.rsyslog.com/windows - agent/ 42 HKLM \ SYSTEM \ CurrentControlSet \ Services \ Eventlog \ Introduction Network Forensics FINAL | Version 1.0 | January 2019 35 From security standpoint information could gained traffic captur ed stored This impossible storage space limited also illegal jurisdictions Besides logging encrypted traffic yield much useful information unless decryption keys somehow obtained di fficult probably illegal 43 This issue organisation breaks TLS/SSL encrypted traffic network boundary essentially Man - - - Middle approach conducted proxy/firewall CA certificate stalled client devices Such undertakings would probably require information employees even consent whatever form necessitated local laws Therefore way log network traffic efficiently must found One way keeping traffic metadata i.e communication circumstances like communicated This considerably reduce log size special hardware probes performance issues avoided However incident res ponse full capture suspicious traffic may needed thus provisions - demand capturing traffic carried 2.1.2.1 Packet captures Data upper protocol layers may highly useful resolving incident contains many items interest investigators including URLs exploit payloads usernames passwords used login etc The technique packet capturing present operating systems form tcpdump Wireshark tools mentio ned section 1.5 These programs work well enough TCP/IP protocols including IPv6 underlying layer 2 headers long standard layer 2 protocols like Ethernet ATM etc concerned They also work well wireless protocols like WiF Bluetooth Zigbee special drivers and/or network adapters may needed If packet captures taken several points considered Where data captured ? The best points capture network segments coupled uch switches routers gateways even firewalls This would allow monitoring multiple network connections If sort protocol translation used devices would already software read protocols question could probab ly expand include capturing logging facility Section 2 Sanders 2011 gives flowchart selecting packet capturing method When position design network architecture later packet capturing option one w ould choose switch mirroring port dedicated capturing device Access capturing device/process must secured monitored prevent abuse disabling attackers Such capturing device would also good place position NIDS desired 43 Attackers woul follow rules key escrow anyway Introduction Network Forensics FINAL | Version 1.0 | January 2019 36 Figure 2 - 1 Tap selection workflow What format store capture ? Most common Berkeley packet capture format known short name pcap The advantage format al every capturing device analys er supports It also complete information layer 2 captured On downside format compressed pcap files larger 2 gib bytes GiB underlying file sy stem supports The file format neither integrity protection encryption although file may encrypted integrity protected additional programs like gpg 44 openssl 45 How transfer data ? Since pcap data files treated like ordinary files secure file transfer program example ssh To summaris e packet captures taken achieve specific investigation objective broad measure legal space constraints prohibit 2.1.2.2 Network flows NetFlow IPFIX Analysis traffic metadata yield valuable information network forensics well intrusion detection Network flow data form collecting data network traffic first implemented CISCO Systems NetFlow 46 originally accounting purposes It differs packet capture tcpdump summaris es communications sources destinations network IPFIX IETF standard 47 Net Flow 44 https //www.gnupg.org/ 45 https //www.openssl.org/ 46 NetFlow v9 described informational RFC 3954 47 IPFIX encompasses several RFCs 3917 zyppe5103 7011 7015 Introduction Network Forensics FINAL | Version 1.0 | January 2019 37 All raffic matched several keys among source destination IP - address transport protocol source destination port number IP type service interface traffic entering device A se lection keys called flow label The statistics traffic matching flow label number bytes packets called flow record A flow record closed communication ends like end TCP session r time interval expires UDP Network traffic observed point network called probe The IPFIX standard sub - divides metering traffic actual exporter One exporter export flow records mul tiple metering points The flow records exported collector stores and/or forwards records When dealing NetFlows one must distinguish network protocol used export - disk storage format The former st andardised NetFlow v9 IPFIX latter meaning tool uses format Probes metering points IPFIX typically positioned network points used monitor channel traffic like switches routers firewalls IDS etc Dedicated hardware probes monitor high - speed 100 Gigabit network traffic links purchased Pure software probes also available like softflowd 48 module Linux iptables framework 49 enabling NetFl ow export Network Flows sampled i.e traffic evaluated every n - th packet n anywhere 100 1 000 000 Obviously higher sample rates ease processing burden side exporter well reduce amount network traffic sent collector correspondingly amount storage needed records If Network Flows used gain general picture going network impact sampling done statis tically However Network Flows used intrusion detection network forensics missing significant number packets whole flows may mean entire activities adversary scan exploit noticed Detectio n DDoS attacks exception rule usually generate enough packets noted even high sampling rates Analysing flow data requires software either works collector reads stored flow records disk Open Source analysis packages include nfdump/nfsen 50 SiLK 51 suite forgetting Argus Flow records never contain packet payload data makes much smaller original traffic This avoids problems assoc iated packet capturing regarding privacy protection wiretapping Probes also aggregate traffic multiple sources destinations one flow record order reduce data volume meet requirements anonymization To gether makes network flow data well suited long - term storage analysis 48 https //github.com/irino/softflowd 49 IP T_NETFLOW https //sourceforge.net/projects/ipt - netflow/ 50 http //ndump.sourceforge.net/ http //nfsen.sourceforge.net/ 51 https //tools.netsa.cert.org/silk/index.html Introduction Network Forensics FINAL | Version 1.0 | January 2019 38 2.1.2.3 Network flows Argus As laid previous chapter Argus another tool collect flow data There however several differences Argus N etFlow summaris ed The network protocol storage formats different However ra - tools argus - clients package natively understand NetFlow protocol records Flow records Argus bi - directional NetFlow IP FIX flow records unidirectional one record side communication i.e source destination destination source Bi - directional flow information somewhat ease analysis task forensic outlook nothing could undertaken unidirectional flows Argus uses data build flow labels NetFlow/IPFIX It include layer 2 information MAC addresses VLAN ids Higher level information includes MPLS labels TCP flags TCP wind ows sizes Argus configured capture number bytes higher protocol layers making Argus - flow capturing full packet capturing tool With argus - clients flows evaluated number ways including mor e elaborate statistics packet loss rate jitter retransmissions etc The ralabel program used add user defined labels attached flows like geo - information DNS lookups etc 2.1.2.4 NIDS/NIPS The advantage NIDS onitor whole network segment In switched networks require access mirror port The placement NIDS need access raw network data packet stream follows rules packet capturing devices outlined chapter 1 Li ke HIDS NIDS signature - based like Snort 52 offer anomaly - based detections like Bro 53 Suricata 54 The exhibit false positive/false negative problems like HIDS similar cost - efficiency issues The drawback NIDS ev aded encryption obfuscation techniques overwhelmed excessive network traffic even network traffic specifically designed trigger vulnerabilities high CPU usage form denial - - service attack NIDS An anomaly - based NIDS coul used automate task detecting unusual network traffic patterns If placed together packet - capturing probe could automate task capturing suspicious network traffic later analysis ground personnel Like Argus NIDS ca n used later forensic investigation process analyse packet dumps Care must taken rules NID S. If advers ary knows guess NID S rules rules block also legitimate traffic potential Denia l Service attack exists adversary repeatedly spoof traffic trigger blocking rules If rules used impacts network operations understood communicated 52 https //www.snort.org/ 53 https //www.bro.org/ 54 https //suricata - ids.org/ Introduction Network Forensics FINAL | Version 1.0 | January 2019 39 2.1.2.5 Application specific data Applications may implemen logging scheme independent syslog EventLog frameworks Not much said except investigators evaluate usefulness data investigation individual case basis Prerequisites enable suitable network forensics Traffic network include kinds items interest likely distract investigators key issues keeping network secure administrators answer case questions investigators To focus hese formal approach taken First policy monitoring take place developed followed monitored targets additional data sources besides logs flow - packet capture data neede d. Monitoring policy The monitoring policy general decision kind events monitored The following approaches taken Ghorbani et al 2010 chapter 2 Fry Nystrom 2009 chapter 2 Blacklist monitoring also called misuse detection enumerate evil The approach write threatening events document preparations detect address This policy looks straightforward effective following conditions Signs licious activities reliably accurately identified Accurate identification necessity otherwise monitoring staff would look every alert remove false positives Identification means malicious activity easil obscured monitoring For example malware writers typically use code obfuscation avoid detection AV scanners The number items blacklist relatively small otherwise screening process may take long and/or list c annot kept - - date reliable high costs Anomaly whitelist monitoring This approach opposite approach i.e drawing policy known good behaviour network written monitori ng looks deviations norm thus name Accordingly criteria almost opposite blacklist monitoring The list acceptable criteria relatively small i.e traffic patterns network monitored set clearly see In academic environment example impossible catalogue accepted communications keep list - - date The white list kept - - date This needed traffic patterns network going change If frequency changes becomes high keep whitelist monitoring becomes unreliable To monitor accurately known good activity first determined This carried learning phase network observed time build statistical model good network traffic called baseline Sustained statistical deviations baseline triggers analyse traffic produce alert network security analyst Policy spec ificati monitoring This also whitelist approach unlike policy monitoring one use statistical model learnt observation network traffic derives set criteria whitelist policies hopefully place already Fo r example incoming network - addresses authenticated backup user happens certain time day average packet Introduction Network Forensics FINAL | Version 1.0 | January 2019 40 size 1000 bytes A netwo rk good candidate policy monitoring following condition Reasonable control deployed systems services This often case organisations internal networks systems centrally administered deployed Therefore used protocols connection kept necessary minimum turn enables monitoring staff draw policy Hybrid approaches often taken different monitoring policies different parts network comp lementing For example blacklist monitoring could used servers reachable internet traffic patterns control central staff change frequently Policy monitoring could used high - security part network everything kept strict checks anomaly detection might method choice rest network Alternatively anomaly blacklist monitoring combined abnormal traffic submitted black list screening Monitoring targets With monitoring policy place one still face question prioritisation case multiple alerts Which alerts processed first dropped process gets overwhelmed wi th events ? To fine - tune monitoring process systems monitor selected focus critical ones Nystrom Fry Nystrom 2009 c hapter 4 gives list approaches select critical systems Business impact anal ysis B IA This approach tries identify systems critical organisations functions It typically used disaster recovery planning The focus availability systems Revenue impact This refinement BIA concentrates systems earn money organisations order entry fulfilment systems Expenses impact Again refinement BIA systems impact money organisation spends payroll time - keeping systems They especially significant fraud cases Legal requirements Organisations may incur civil criminal lawsuits keep compliant laws governing sectors In addition contractual obligations customers partne rs observed Systems needed fulfil obligations given priority approach Sensitivity Priority given systems store access process sensitive restricted information This personally identifiabl e information PII confidential classified government information Riskiness In practice systems kept secure operation The reason system certified specific hard - software configur ation Losing certification would mean system shut Thus risk compromise taken organisation This often case embedded systems used industrial applications SCADA Visibil ity S ecurity breaches embarrassing organisation especially breach becomes publicly known example website defacement Likewise visiting compromised system may damaging visitors malware delivered system Introduction Network Forensics FINAL | Version 1.0 | January 2019 41 Additional data sources Besides data capturing probes flow - tools intrusion detection systems like data sources give alerts provide evidence narrower sense nonetheless needed ensic investigation These sources include limited IP - address information The IP - address investigator sees always belong system may dynamically assigned Investigators need access logs DH CP servers correlate Conversely system may appear different addresses depending network evidence data comes This often case NAT - application gateways involved cf Error ! Reference source found. Geographical information Although internet buil along national borders sometimes useful correlate data along countries origin destination Free databases geo - information exist often used investigations WHOIS information More important geographical origin question administrative contact IP - address This information kept WHOIS system Lookups ar e everyday job investigators 55 Instead IP - addresses hostnames may also used although bad practice logging see section Error ! Reference source found. However DNS names often need dealt investigation URLs phishing mails etc Thus investigators need access name servers case dynamic DNS updates access logs servers needed T hese often servers MS Windows Active Directory DHCP - servers clients dynamic registration thus logs importance Timeline analysis Timestamps always important artefact almost every forensic investigation In many investigations alert event happened particular point time raises suspicion leads analysis first place In fact many investigations start time - related questions '' When host get infected ? '' `` How often user access website ? '' `` When user last access particular file ? '' `` How long suspicious file directory ? '' `` When intruder get access internal ne twork ? '' `` How long take intruder access server ? '' `` How frequently process xyz failed ? '' `` When apply patch could prevented intrusion ? '' 55 It wort h noting due advice given ICANN impact GDPR WHOIS data major issues surfaced More information found https //www.ica nn.org/news/blog/icann - gdpr - - data - protection - privacy - update https //www.circl.lu/pub/tr - 53/ https //www.first.org/blog/20180412_GDPR_and_W HOIS Introduction Network Forensics FINAL | Version 1.0 | January 2019 42 An investigator need deep understanding look timestamps correctly interpret timestamps convert many different timestamps formats correlate timestamps coming various sources different operating systems multiple time zones The obvious source timestamps example well - known timestamps every file almost every file system carries Usually referred MAC times 56 subtle yet important differences respect MAC times used different file systems nd even across different versions operating system The details however beyond scope training Moreover MAC times importance lots different sources timestamps meta - data embedded within files e.g last printed server log files Windows Event Logs LastWrite timestamps MS Windows Registry keys meta - data file system web - browsing e - mail artefacts database timestamps network captures etc Th taken even concept extra guarantees specific information existed created specific given time This even involving placing trust Time Stamping Authority TSA 57 Some netw ork appliances allow enabling Trusted Timestamping TTS log file entries situations case However despite importance recent years timestamps become powerful analysis artefact today The paradigm looking single even timestamps investigation slowly shifted towards building comprehensive timelines easily consisting millions millions timestamps built large number sources Thankfully th ere exist freely available open source tools help analyst creating investigating timelines To summaris e following comprehensive complete list time - related activities usually major role many forensi c investigations develop context around events alerts add additional data sources investigation see events occurred `` near '' events correlate different traces multiple sources even server logs meta - data ! one another e. g. user receives e - mail user 's host connects URL file downloaded office file created local file system office application started temporary file created local file system another URL accessed host another file downloaded executable file created local file system executable file started Windows Registry key created `` suspicious '' network traffic shows logs inte rnal systems start behaving `` weird '' lateral movement 56 Modification last written time Access time Change time certain file 57 https //www.incibe - cert.es/en/blog/trusted - timestamping - en Introduction Network Forensics FINAL | Version 1.0 | January 2019 43 detect times high system activity detect events `` unusual '' times outliers allows concentrate important events one always needs `` full picture '' may detect system clock mani pulation may detect log tampering e.g. correlating timestamps different sources differentiate automated/scripted/system activities human activities differentiate regular tasks least frequent activities system patterns gaps create human - readable histograms convert/interpret timestamps different sources/different formats/different time zones daylight savings time ? normalized format provide information deleted data even data self recoverable Fortunately exists powerful yet free open - source tool named P laso 58 according developers `` tool designed extract timestamps various files found typical computer system aggr egate '' One many strengths Plaso ability investigator multiple timestamp sources combined single timeline So respect network forensics one add acquired host images USB thumb drives timeline logs many different network sources well firewall logs proxy logs web server logs mail server logs packet captures chat logs etc. Furthermore since Plaso released open - source license easily enhanced e.g. creating new parsers new proprietary log formats Aggregation correlation different sources normalisation data Analysis logs incident data digital forensics means events aggregated duce data one make sure records comparable correlated information items contain timestamps network IP addresses process identifiers user identifiers vulnerability identifiers CVE etc When talking normalisation aggregation correlation definitions Kent Souppaya 2007 section 3.2 used similar entries consolidated single entry containing count number occurrences event For example thousand entries record part scan could aggregated single entry indicates many hosts wer e scanned Aggregation often performed logs originally generated generator counts similar related events periodically writes log entry containing count also performed part log reduction event correlation p rocesses described Event correlation finding relationships two log entries The common form event correlation rule - based correlation matches multiple log entries single source multiple source based logged values timestamps IP addresses event types Event correlation also performed ways using statistical methods visualis ation tools If correlation performed automated methods generally result successful correlation new log entry brings together pieces information single place Depending nature 58 https //github.com/log2tim eline/plaso Introduction Network Forensics FINAL | Version 1.0 | January 2019 44 information infrastructure might also generate alert indicate identified event ne eds investigation In log normalisation log data field converted particular data representation categorized consistently One common uses normalisation storing dates times single format .. Normalizin There numerous tools log normalisation aggregation two given examples Kibana 59 Squert 60 Both used web browser view analyse data data coming systems namely Elasticsearch databases Kibana Squil databases Squert Figure 2 - 2 Squert GUI Both tools allow viewing event - data different forms display curves charts graphs etc individual displays combined dashboards Data correlated additional sources geolocation information sample display Squert display given Error ! Reference source found A full discussion tools would beyond scope document For introduction use Kibana ElasticSearch reader find information ENISA 2 103b Address normalisation IP - addresses often seen static information one IP - address belonging one system changing long periods time That IP - addresses globally unique one cornerstones origina l internet design Both assumptions long invalidated introduction dynamic host configuration DHCP Network Address Translation NAT IP - addresses assigned temporarily address may belong different systems time In addition depending observation point system may appear different IP address NAT comes play form home - routers VPN - gateways firewalls etc 59 https //www.elastic.co/products/kibana 60 http //www.squertproject.org/ Introduction Network Forensics FINAL | Version 1.0 | January 2019 45 Correlation events IP - address would impossible environments To overcome problem investigators aware fact get logs DHCP servers NAT gateways events later correlated In preparation network forensics inves tigators urge proper retention information environments Name resolution Using symbolic names instead numbers advantage messages read humans problem Similar problems exist mapping vendor part MAC - addresses vendor names How names translated numbers translation unambiguous globally consistent ? In practice case How names translated back numbers controlled Unix/Linux world Name Service Switch NSS system wi th configuration /etc/nsswitch.conf This file controls whether names resolved local file lookups lookups Domain Name System DNS LDAP servers systems This configuration vary system system Howeve r lookups network services DNS LDAP may fail various reasons configuration change time case fast - flux DNS network often minutes Also naming system may susceptible attacks manipulating name resolution DNS cache poisoning give example Furthermore systems use local files resolution port numbers use hard - coded names These naming files /etc/hosts /etc/services may different systems Sometime differences subtle may enough throw correlation systems course Being plain ASCII files files also often manipulated attackers Investigators avoid problems much possible using numbers instead symbolic names messages This also side effect performant closes opportunities denial - - service attacks adversaries inject traffic would lead slow name - lookups example choosing IP - addresses th poorly responding nameservers - addr.arpa zone Second puts less trust operating systems involved good thing forensic point view Time normalisation As stated section Error ! Reference source found timeline powerful tool displaying analysing occurrence events The generation timeline rests timestamps extracts data system logs file metadata packet dumps These usually generated time value format system logs generated packet capture taken This leads two problems regarding timestamps Firstly timestamp may incorrect becaus e time synchronized central time source NTP fallen synchronisation botched switch to/from daylight savings time etc Investigators always check local time system document along right da te even source reliable wristwatch Secondly timestamps may format correctly parsed analysing software For example one software might store timestamps twelve - hour format 1:23:45 AM w hile another might store twenty - four - hour format 23:45 Time zones might written strings CEST strings Introduction Network Forensics FINAL | Version 1.0 | January 2019 46 offset UTC - 2 offset - 2000 The separating characters may differ date may come time th e name weekday may included year may two four - digit format day month month may swapped etc The combinations manifold software developers change format time time Investigators caref ully watch events parsed errors parsing The change date daylight savings time normal time vice versa challenging The switch daylight saving time less severe put jump forward one hour n timestamps thus logs one - hour gap Turning back normal time put jump backward one hour 3 prepared explain anomalies evidence material When investigations span large areas different time zones considered The EU 4 time zones AZOST WET CET EET covering time values UTC - 1 UTC+2 without daylight saving time To make matte rs complicated naming time zone uniform Ireland UK using different naming For information see directive 2000/84/EC 61 Best practice recommendations include Use clock synchronisation NTP systems Ideally internally i.e local time servers high accuracy external dependency Monitor correct operation especially around switches to/from daylight saving time Log time zone information form offset name time zone Inclu de full four - digit year timestamps Standardise time formats much possible Normalise timestamps UTC early possible log chain Collecting storing traffic data Network monitoring data usually acquired probe poin ts network traverse several collection points finally reaches central location analysis long - term storage takes place This central location n need one server could whole distrib Once security event data logs flow - data collected must protected tampering i.e changing event records inserting fake event records r deletion single records whole logs Unlike evidence data formats specifically developed forensics i.e maintain chain custody network data formats typically quality They also protected unauthoris ed access storage system also event records indivi dual users allowed see Collecting agents Evidence data usually directly transferred probe storage In - lies collector name implies collects data one sources forwards either another higher - level collector storage An intermediate collector could also used aggregate filter normalize data offloading processing central analysing system 61 https //eur - lex.europa.eu/legal - content/de/TXT/ ? uri=CELEX % 3A32000L0084 Introduction Network Forensics FINAL | Version 1.0 | January 2019 47 Usually collector receive data NetFlow probes syslog devices If collectors deployed systems need secured target attackers potential source manipulati evidence data The policy configuration devices need documented Storage There essentially three types storage flat files relational databases structured documents storage The first also include files wit h indexed directory structure YYYY/MM/DD/HH/file 2.5.2.1 Flat files indexed files disk file regarded simple byte str eam data appended Many network forensic tools data sources use flat files like syslog nfdump pcap etc This simplicity helps investigators develop tools task looking interesting things i.e analysing eviden ce The drawbacks flat files lack higher functionality Searching absence sorting indices done sequentially make analysing large volumes data inefficient Flat files typically compresse wastes storage space Especially ASCII strings syslog files easily compressed save 90 % space Being unstructured parsing complex error prone Integrity protection encryption present must supplied external tools openssl gpg Last rotation retention ever - growing log files challenge developers/operators make sure log lines dropped written wrong file switching logfile 2.5.2.2 Bina ry files databases Binary files machine - readable require special tools read process Examples include log files generated Linux systemd/journald Windows EventLog Database formats also relational n - relational binary Advantages They easily accommodate structured information More resource - efficient n need - parsed time read analysing tools For example normalisation needs performed onc e storage In addition compression applied transparently storage back end i.e database engine Indexes stored together data save additional CPU resources analysing data Disadvantages The data ce stored tied probably proprietary formats specific tools carrying storage Migrating different solution could take significant effort especially high volume data involved Open Source RDBMS PostgreSQL MySQL take middle stance internal disk format known public They may perform quite well larger commercial counterparts usually enough medium - large size operations Introduction Network Forensics FINAL | Version 1.0 | January 2019 48 2.5.2.3 Structured document storage A n ewer approach use document storage engines store log entries The idea behind leverage capabilities engines They scale well large amounts data distributed storage This offers also high availability good searc h performance queries parallelized Use intrinsic full - text fuzzy searching better suited log analysis SQL queries used traditional databases An Open Source example ElasticSearch 62 based Apache L ucene 63 The interface web - based allowing queries done form REST calls Log entries query results JSON format The drawback document storage engines require considerable amount configuration fine - tuning run efficiently quite resource intensive regarding hardware CPU storage Data transfer Log NetFlow data protected attackers network This means forwarding channel Has secured eavesdro pping This done TLS DTLS specified Gerhard 2009 Salowey et al 2010 The integrity forwarded data must protected manipulation loss messages done signed syslog messages specified Kelsey et al 2010 The logging architecture also able deal network outages One probable solution could Reliable Event Logging Protocol RELP specified Gerhards 2014 Furthermore log data forward ed even parts network unavailable collector unreachable Therefore advisable multiple forwarding channels different network paths allow failover network paths redundant delivery channels 2.5.3.1 Syslog p rotocols BSD syslog Lonvick 2001 well suited requirements The syslog network protocol simple also limited Since generally supports push transfer model employ store - - forward problems Th undering Herd packet loss hamper use All data transferred clear text attacker could eavesdrop notified whether actions logged The transport protocol UDP - based port 514 default guarantee mess ages reach intended receiver The problem missing transport security addressed three standards Kelsey et al 2010 cryptographically signed syslog messages protecting data manipulation transport 62 https //www.elastic.co/products/elasticsearch 63 https //lucene.apache.org/ Introduction Network Forensics FINAL | Version 1.0 | January 2019 49 Miao et al 2009 Salowey et al 2010 introduce TLS DTLS protection syslogs transfer channels Another alternative may use RELP It provisions protection message loss also used TLS altho ugh use RELP UDP advised see Gerhards 2014 2.5.3.2 NetFlow/IPFIX NetFlow IPFIX set mechanism log network traffic also transport protocol tran fer flow records flow collector The transport UDP - bas ed standard port assigned NetFlow IPFIX port 4739/udp 4740/udp IPFIX DTLS assigned IPFIX also transferred TCP The UDP transport like syslog unidirectional Alternatively files containing flow reco rds transferred standard file transfer programs like SSH 2.5.3.3 Argus Argus sets transfer protocol also read NetFlow protocols Two ways exist transfer Argus data network A pull service clients access TCP por 561 running argus daemon This service secured TLS access control maintained SASL A push service argus daemon writes one receivers This uses UDP default port 561 This service using secu rity means 2.5.3.4 Bulk transfer standard protocols Some evidence like forensic images .pcap files intrinsic transfer protocol They transferred either manually i.e removable storage media file transfer protocols A secure protocol chosen Two suitable protocols SSH HTTPS Both offer secure i.e encrypted integrity protected transfer data user authentication server side Transfer usually undertaken ecured dedicated evidence server They protect data rest however It therefore best practice encrypt sign evidence files least compute cryptographic checksum time acquisition E - mail may used transfe r evidence however ascertained transfer storage E - mails transit rest secure evidence must cryptographically protected PGP S/MIME Also size E - mail limited typically meg abytes medium well suited transfer large data items Legal basics There numerous legal regulatory questions surrounding logging network monitoring network forensics mostly dealing data collected Speaking gene rally law applies two things What organisations investigators What organisations/investigators allowed In consequence investigators incident well network operators day - - day operations Introduction Network Forensics FINAL | Version 1.0 | January 2019 50 To k laws apply situation Act according laws This may require documentation measures prove Deal contradicting laws Knowing laws apply challenging All member states EU law EU legislation well Countries may also subdivided different legislations like Germany composed 1 6 federal states version privacy protection law Finding legislation applies data acqui red analysing parties challenging system operator owner organisation log - analysis outsourced somebody else ? This additionally depend variety factors including organisations type commercial education government type data collected processed country subject data resides etc When systems used stepping - stones carry attacks systems outside organisation attacked legis lation apply ? That victim attacker ascertained stepping - stone ? It understood investigators abide law especially since matters may taken court Dealing contra dicting laws even challenging finding laws apply Matters get complicated taking consideration performed professional point view 64 point network administrators investigators wi usually familiar For example risk balance The data logged higher chance detecting resolving security breaches although scale linearly Conversely high amount data collected raises demands use data purposes even misuses like spying employees Finally logged data item needs secured properly monitored There even legislations giving legal advice lim ited professional lawyers Thus strongly advised anyone facing questions seek advice trained legal experts resolve issues 65 The following two subsections give insights laws limit requi things done investigators They seen starting point investigation points consider Obligations As stated laws may require certain information collected kept even longer pe riod time Examples laws include Data retention laws ISPs required log telephone numbers IP - addresses dial - connections customers Taxation laws require information payments incoming utgoing kept amount time sometimes 10 years Germany 64 This referred https //www.geant.org/Services/Trust_identity_and_security/Pages/TRANSITS - I.aspx 65 Practical experience shows however two given legal experts likely disagree shy away giving concr ete advice Introduction Network Forensics FINAL | Version 1.0 | January 2019 51 Financial industry regulations like PCI - DSS regulates data kept relation online payments credit card processing Specific laws regarding online services Laws regarding protection critical infrastructures Laws regarding cybercrime computer crime Constraints The single significant piece legislation relating privacy protection EU General Data Protection Regulation GDPR E U 2016/679 It supersedes older Data Protection Directive 95/46/EC It affects organisations collect process PII data based EU data belongs person based EU limited professional commercial activity With GDPR setting baseline member states legislation may go details Network forensics inevitably collect privacy - related data foremost IP addresses packet captures well log files may contain kinds da ta including passwords usernames credit - card numbers etc Depending legislation applies limitations data items logged/captured whether data needs pseudonymised anonymized time period ata stored etc Most significantly purpose data logged must accurately defined Another type law limits data acquired way data processed laws give specific rights employees trade unions Consent may obtained employees unions representative certain measures taken may already written agreements place covering done There technical organisational ways overcome problems full c overage would beyond scope exercise focus use logs For rest training material assumed legal questions dealt investigator need worry unless task question explicitly dictates otherwise Introduction Network Forensics FINAL | Version 1.0 | January 2019 52 3 Detection In incident response workflow ISO 27035 NIST 800 - 61 detection part incident handling begins The first part workflow deals wit h preparation incidents la er ones recovery post - incident activity Figure 3 - 1 NIST SP 800 - 61rev2 incident handling workflow Section Error ! Reference source found deals process baselining prerequisite distinguishing malicious normal network traffic This typically seen preparatory task incident handling outlook Section Error ! Reference source found starts detection enumeration activities often first steps attackers conduct Next detecting lateral movement network attackers mov e host host detection data exfiltration activity Section Error ! Reference source found completes chapter introduction threat intelligence process incident detec tion Distinguishing regular traffic suspicious/malicious traffic This part builds upon sections 1.4 2.2 2.5 points traffic capture already established tools selected The focus detecting incident compromise denial - - service attack exfiltration data etc For practice network forensics means distinguishing regular network malicious traffic This undertaken three steps compare Davidoff Ham 2012 cha pter 5 Baselining see Error ! Reference source f ound Filtering see Error ! Reference source found Building signa tures see Error ! Reference source found Baselining normal traffic To identify attack necessary establish normal activity network looks like This process c alled baselining The idea behind compromised system network attacks shows traffic patterns different normal non - compromised activity Also keeping history traffic patterns investigators find approximate ime attack happened i.e traffic pattern changed Introduction Network Forensics FINAL | Version 1.0 | January 2019 53 The problem establish baseline Initially traffic capture flow capture traffic At second stage key items information extracted capture These define rules signatures intrusion detection forensic analysis Simply capturing traffic days may yield desired results would result single big blob data without explanation happening Th would unwieldy work Rather one single big baseline one builds number small baselines compared traffic pre - filtered An example might web - traffic baseline compared TCP packets connections going port 80 port web servers Davidoff Ham 2012 section 5.5 distinguish two baseline types differing number network IP addresses taken ac count time baseline w built Network baseline The investigators start network segment look trends time like ports used packet sizes traffic volume etc Generally specific source destination IP - addresses abstracted make results useable Host baseline When particular host becomes interest important server network A network host baseline refined making captures basic activity functions start - up/shutdown system server workstation laptop users logging in/out start network applications etc Each function baseline item compare later activities 3.1.1.1 Baseline ex amples Following number baselines taken Chappell 2012 chapter 28 meant exhaustive act starting point Broadcast multicast Broadcasts typically happen system network tries find next hop r boot searching DHCP server In IPv6 networks multicast traffic often used instead broadcasts multicast also often used streaming applications routing protocols OSPF A baseline used identify new hos ts rogue routers VPN - tunnels rogue DHCP - servers Also sudden increases broadcast multicast traffic may sign network problems The baseline include Source IP - address Who broadcasting/multicasting ? Destination IP - address mul ticast ? This give hint application often tied specific multicast groups i.e addresses What application sending broadcasts/multicasts ? Sometimes applications send names identifiers packet data In ot cases fingerprint established looking various parameters packets Typical broadcast/multicast rate packets per seconds ? Protocols applications used If system suspected compromised baseline compare actual traffic system This starts compiling list applications used system protocols use application following included baseline What IP protocols used applicati ons UDP TCP GRE etc. ? What UDP/TCP/SCTP ports use ? What ICMP traffic host use ? What routing update process look like ? Introduction Network Forensics FINAL | Version 1.0 | January 2019 54 Routing protocols Attackers may try - route packets sniff traffic conduct man - - - middle attacks r denial - service Baselines routing traffic help spot attacker activity This include internal routing protocols like RIP UDP port 520 OSPF IP protocol 89 well external routing protocols like BGP TCP port 179 also IP - address failover protocols like HSRP port 1985 IPv4 2029 IPv6 VRRP IP protcol 112 IP - addresses routers Protocols used i. e.TCP UDP OSPF VRRP Port numbers used using TCP UDP SCTP Router IDs Security mechanisms used like R IPv2 OSPF authentication simple 66 MD5 none Routing update frequencies Other information specific routing protocol configuration BGP Autonomous System numbers OSPF area IDs etc Name resolution In practice means ly DNS lookups protocols may used special cases like WINS NIS LDAP In ad - hoc networks multicast name resolution protocols like mDNS 67 Bonjour Avahi LLMR 68 Windows used With baseline typical DNS traffic rogue serve rs DNS cache poisoning attacks may discovered IP - addresses internal external name servers Typical round - trip times Packet sizes Resource records commonly used A NS SRV etc IP auto - configuration During boot sequence g eneral network configuration system set includes IP - address subnet - mask default gateway i.e router like NTP - server domain controller DNS - servers etc The exact number parameters depend network con figuration type auto - configuration used Typically done DHCP newer IPv6 stacks use ICMPv6 combination The baseline include DHCP Parameters used values like server addresses The IP - addres ses DHCP - servers router etc spot rogue DHCP - servers routers etc Login/Logout sequences Similar IP auto - configuration covers traffic user logs workstation This may include complex sequence using network logons Kerberos servers LDAP - servers file servers automount terminal servers involved Consequently baseline include The type network logon protocols used Discovery processes involved Server IP - addresses How many packets ypical login require ? Data flows sequence Idle traffic Even nobody using system traffic may flowing Typically include management traffic backups etc IP protocols port numbers IP - addresses DNS names systems involved Time frames systems typically idle 66 67 Cheshire Krochmal 2013 Multicast DNS RFC 6762 https //tools.ietf.org/html/rfc6762 68 Aboba et al 2007 Link - Local Multicast Name Resolution RFC 4795 https //tools.ietf.org/html/rfc4795 Introduction Network Forensics FINAL | Version 1.0 | January 2019 55 Operating system installation backups upgrades These activities typically involve large amounts data transferred endpoints well - known The direc tion data transfer also clearly defined The baseline include IP - address servers backup internal repositories internet repositories Protocols port numbers used like HTTP TFTP etc Security options used Authenticat ion encryption Time activities example Microsoft patches typically come second Tuesday evening month How failed attempts install/backup/upgrade look like example many retries typically done ? Monitoring spot errors processes well probable adversary activity Application launch sequences key tasks This would cover important applications For application baselines taken application launch identify int erdependencies general ports start - procedure used key tasks learn work typical network response times IP - addresses servers involved Protocols port numbers used TCP options set ha ndshake packets Times application used usually office hours Errors session lookup failures redirects etc Packet rates size distributions Round trip times What happens application idle time ? Are portions login visible clear text ? Browsing sessions Users network generally use sites either internally organisations network externally popular news sites This make major portion web Browser type used ID string browser software What target name resolution process ? IP - add resses port numbers servers Characteristics DNS lookups spot DNS cache poisoning Round trip times client server may used spot traffic misdirection SSL certificates used using HTTPS HTTP errors session like redirects Time activities lunch breaks may look different work hours holidays calendar fixed ones major events streamed traffic may look different normal workdays Wireless Connectivity De ploying rogue access points break - ins WLANs common attack techniques IP - addresses cable wireless access points BSSIDs used APs Wireless authentication encryption parameters used Protocols used AP authentication infrastructure RADIUS Typical login station WLAN VoIP Communications Voice - - IP often used organisations Attackers may try compromise systems gain free phone calls abuse system profit w ith calls pay - per - Introduction Network Forensics FINAL | Version 1.0 | January 2019 56 call services sniff traffic valuable information For security purposes baseline include What sub - protocol used call setup procedure ? Where calls go phone numbers ? Time calls placed What servers IP - addresses used ? Standard number calls per user/time How long VoIP session typically ? Codecs used Security activities Security teams may conduct portscans penetration tests usually trigger rules IDS/IPS This may even deliberately test rules On hand sometimes administrators scans without informing central security teams To differentiate real adversary activities policies define parameters recognis e Originating IP - address es like dedicated scan server/workstation Time window scan carried Target IP - address range Type scan undertaken i.e TCP connect scan webserver vulnerability scan etc 3.1.1.2 Baseline adaption retention Baselines use long properly reflect traffic patterns signatures encountered production network Using obsolete baselines trigger false alerts require investigation take resources network monitoring process In worst case alerts ignored turned time obsolete whole network monitoring process baselines become obsolete Old baselines consequently dropped updated become date This happen network addresses change systems taken - - use application update changes traffic pattern Another reason changing traffic patterns chan ges user behaviour users discover new ways use application drop old applications use change way work done etc Automated learning techniques alleviate problem However case history data kept old otherwise adaption new traffic patterns slow meantime false alert problem occurs Also attackers use obsolete traffic patterns disguise activities Care must also taken include traffic patterns real - going attacks learning regular activity Traffic histories learning algorithms therefore cover certain time frame How long time frame depends frequent traffic patt erns change In large scale ISPs time frames 30 days worked well static network longer time frames may suitable Filtering network traffic Narrowing large pool potential evidence one subsets interest Sinc e investigators deal lot traffic comfortably analysed necessary step reduce data manageable amount Introduction Network Forensics FINAL | Version 1.0 | January 2019 57 Building signatures T - Virus software vendors wher e refer r ed b - patterns files used recognis e viruses In Intrusion Detection Signatures used broader sense meaning list known suspicious values like filenames exploit code patterns hash - sums known - bad files etc part potentially interesting traffic In terms flow data IP - addresses port numbers protocols A signature also indirect statistical values derived network activity high volume data entering leaving organisations network More complex signatures consist activity patterns match behaviour automated malware worms viruses Detecting intrusions The reason NIDS detect ongoing attacks What exactly constitutes attack terms NIDS differs course type attack When building activating rulesets NIDS best practice start attack types usually important given network expand ruleset time The following sub - sections examples exhaustive list Detecting enumeration Enumeration gaining information targeted network While attack strict sense often precursor attack It makes sense alerted enumeration previously unseen scan patterns i.e new ports may sign emerging interest side attackers application rise scan activity certain ports ap plications may sign new vulnerability availability new exploit 3.2.1.1 Detecting scans Scans typically come distinct patterns Attackers want enumerate systems open ports In case IP - addresses network range canned This means repeating target IP - address pattern packets This simple ICMP echo request packets destined specific TCP UDP ports Attackers interested specific system scan range ports sometimes In case target IP - address constant repeating pattern connection attempts TCP UDP port range scanned seen Both scan types combined i.e scanning IP - addresses por ts network range When scan comes single IP - address multiple IP - addresses called distributed scan In distributed scan addresses ports scanned per IP - address This way rules relying number connection attempts time avoided This also makes scan faster work parallelized multiple scanning systems Simple signatures work well detection scanning activity unless system used count items l - address port within certain signature - based systems Introduction Network Forensics FINAL | Version 1.0 | January 2019 58 Scan detection generally wo rks best anomaly detection Deviations normal connection setup frequencies i.e number connection attempts certain time well abstracted detected statistical means Scans made deliberately slow avoid detec tion The scan take much longer compromise sophisticated attackers may make 3.2.1.2 Detecting probes A probe similar scan looks information higher protocol stack like version banners applications A speci al case web - application probes lot URLs tried attacker gain information configuration web server web application Password probes attempts guess combinations username password trying log application To distinguish automated manual human activity variation time difference packets sent used Automated scans probes tend faster humans b variation time - gap pro packets jitter higher human activity The typical way detect password probes number failed logins coming specific IP - address Even benign users make typing mistakes even several times prone false alerts value set low turn may exploited attackers slow - probing accounts distributing probes many source IP - addresses Detecting lateral movement When attackers first gain foothold organisation network ofte n via neglected system security holes This often system valuable information administrative access organisations resources To gain access attackers must use initial system stepping stone attack ing systems organisations network reach objectives This process called lateral movement Similarly data exfiltration lateral movement take two forms direct careless method slower stealthier one Whe n taking direct approach adversary mind detected The methods employed hard detect Enumeration activity like covered previous section Error ! Reference source found. discovered way Standard exploits used detected signature - based IDS With stealthier approach attackers avoid noisy Enumeration undertaken pas sively using information found compromised system traffic sniffing system Introduction Network Forensics FINAL | Version 1.0 | January 2019 59 Exploit traffic obfuscated and/or encrypted avoid detection NIDS 69 In cases compromises systems may detected HIDS NIDS see one following connections systems typically n communicate connections happening unusual times compromised system exhibits unusual behaviour increased amount login failures sign break - attempts unusual data used standard network connections may sign exploit attempts Detecting data exfiltration Data exfiltration means data moved outside organisations network The data may high value organisation may attackers credit card numbers customers If done carelessly detected easily anomaly detection The anomaly high amounts data leaving internal secu part network The protocols involved usually standard like SMTP E - mails HTTP SSH FTP file/bulk transfer protocols If connection going IP - address typically used organisation may trigger alert If uncommon protocols used TFTP leaving network also easily noticed If attacker careful like many APT cases data exfiltration much harder detect In case attacker aware detection chanisms tries avoid Statistical detection methods avoided sending low amounts data This way exfiltration may take long time weeks months Traffic use standard protocols port numbers used organisation Traffic use IP - addresses use organisation least legitimate use like IP - address co - hosting many websites Exfiltration traffic may piggybacked onto legitimate network traffic example DNS HTTP The exf iltration data obfuscated and/or encrypted avoid signature detection organisations documents signatures looking credit card numbers Detection traffic hard compounded fact organisation likely aware attack going If looking long - term anomalies traffic may look suspicious many gigabytes data leaving network system Signature detection may pick artefacts piggybacking encryption/obfuscation If meaningful indicators compromise IOCs exists server IP - address URL exfiltration going game changes Exfiltration traffic becomes trivially easy spot see section Error ! Reference source found use threat intelligence information 69 Zero - day exploits likely seen type activity Usable zero - days rare expensive Organisations afford i.e intelligence agencies reluctant waste likely use high - value targets Introduction Network Forensics FINAL | Version 1.0 | January 2019 60 Using threat intelligence In recent years new term emerged within IT security world general within forensics world particular Cyber Threa Intelligence CTI often abbreviated Threat Intelligence TI The term threat intelligence actually use within military world long time slowly found way IT world well While exist different definit ions esp service providers trying sell threat intelligence services customers UK 's National Cyber Security Centre NCSC attempted come general description 70 '' As traditional intelligence core definition th reat intelligence information aid decisions aim preventing attack decreasing time taken discover attack Intelligence also information instead aiding specific decisions helps illuminate risk landscape '' The NCSC describes four different subtypes threat intelligence containing information different levels usually targeting different groups people within organisation '' Strategic Threat Intelligence high - level informat ion consumed board level senior decision - makers It unlikely technical cover things financial impact cyber activity attack trends areas might impact high - level business decisions An example wou ld report indicating particular government believed hack foreign companies direct competitors within nation ... Operational Threat Intelligence information specific impending attacks organis ation initially consumed higher - level security staff security managers heads incident response Any organisation would dearly love true operational threat intelligence i.e know groups going attack wh en intelligence rare In cases government sort access attack groups infrastructure necessary collect type intelligence ... Tactical Threat Intelligence often referre Tactics Techniques Procedures TTPs 71 information threat actors conducting attacks Tactical threat intelligence consumed defenders incident responders ensure defences alerting investigation prepared current tactics For example fact attackers using tools often Mimikatz derivatives obtain clear text credentials replaying credentials PsExec tactical intelligence could prompt defenders change policy prevent interactive logins admins ensure logging capture use PsExec ... Technical Threat In telligence information often data normally consumed technical means An example would feed IP addresses suspected malicious implicated command control servers Technical threat intelligence often short lifetime attackers easily change IP addresses modify MD5 sums hence need consume intelli gence automatically Technical threat intelligence typically feeds investigative monitoring functions business example blocking attempted connections suspect servers '' With respect network forensics high importance te chnical threat intelligence usually comprises - called Indicators Compromise IoC IP addresses command - - control 70 Chismon 2015 71 Sometimes TTP also referred Tools Techniques Procedures Tactics Tools Procedures Introduction Network Forensics FINAL | Version 1.0 | January 2019 61 servers C2 servers hash sums malicious files found system network artefacts In regard IoCs similar signatures used Antivirus software These IoCs frequently accumulated forensic investigations technical threat intelligence may help analyst putting artefacts finds broader context correlating artefacts events However tactical threat intelligence often plays significant role forensic investigations well While single artefacts mentioned may provide vital clue analysis e.g. well - known malware sample found file server often presence multiple artefacts certain order combination lead bigger picture attacker using various tools exploiting different vulnerabilities order successfully c ompromise multiple hosts operated different security zones throughout organisation called lateral movement In practice threat intelligence systems usually built around database fed information publicly availa ble threat feeds e.g. providing lists well - known C2 servers and/or CTI databases operated industrial sector `` community '' and/or commercial feeds The investigator may use CTI database 3 major workflows among others Use CTI database search engine artefacts found analysis order get context esp certain artefacts seen elsewhere Insert newly found artefacts database allow future correlation share responsible parties Regularly export artefacts internal security systems Firewalls Intrusion Detection Systems IDS Security Information Event Management Systems SIEM etc order automatically take action blo ck detect future attacks One popular esp Europe threat intelligence platforms MISP 72 According developers '' The MISP threat sharing platform free open source software helping information sharing threat intellig ence including cyber security indicators A threat intelligence platform gathering sharing storing correlating Indicators Compromise targeted attacks threat intelligence financial fraud information vulnerability information even count er - terrorism information '' 72 MISP n.d. http //www.misp - project.org/ Introduction Network Forensics FINAL | Version 1.0 | January 2019 62 4 Analysis data interpretation Overview Network forensics subset digital forensics 73 Network Forensics includes among others research network - related log files packet captures network traffic analys network related events Research done incident still going incident closed If incident still progress network tap used Live traffic data saved later research If incident alre ady happened evidence log files collected investigation When evidence captured seized submitted data structured unstructured The purpose analysis answer research questions forensic case based available data Common research questions forensic cases known five six W's 74 What Why Who When Where How These questions identical digital analogue forensic cases To clarify take fictit ious case A company discovers In fictitious case number log files collected stored securely Examples possible collected log files Application logs c ompromised web server System logs compromised web server Firewall logs Network traffic logs switch Network traffic logs router Not logs directly related network forensics included investigation The conducted Forensic investigation limited network forensics The question related investigation answered combination available log files Who involved ? In network forensics IP add ress MAC address metadata information packet captures lead identification device person is/are involved In ficti tious case compromised webserver ? What happened ? The network logs provide information exactly happened In fictitious case possible investigate basis traffic data whether server compromised Where take place ? 73 74 Sometimes also called 5W1H Introduction Network Forensics FINAL | Version 1.0 | January 2019 63 This question investigates attack carried worked In fictitious case offense committed scene crime When take place ? This research question deals question incident occurred In case whe n attack occur machine get compromised active abuse begin ? Why happen ? Often motive behind incident event In case example webserver used spread malware website defaced political reasons used part Distributed Denial Service DDoS attack How happen ? A system vulnerable compromised using exploit password guessed weak The port numb ers protocols used attack provide information attack successful If exploit used useful packet capture exploit available In case question came The right tool must selected analysis answer questions There tools used select specific data log files visualis e data The value importance Network forensics Network forensics provides insight network traff ic incident event Depending log level even whole payload data packet may available In case digital intrusion network forensics help answer questions organis ation may 75 How long activity going i.e. intrusion begin ? Is activity still ongoing ? How many systems affected ? What data taken ? Was sensitive proprietary confidential information taken ? Other valu able additions 76 network forensics Hunting unusual suspect activity network Metrics/Network Knowledge Intelligence DNS/Passive DNS Intelligent Alerting 75 https //www.fireeye.com/blog/executive - perspective/2014/07/network - forensics - use - cases - - - enterprise.html 76 https //www.fireeye.com/blog/executive - pe rspective/2014/07/network - forensics - use - cases - - - enterprise.html Introduction Network Forensics FINAL | Version 1.0 | January 2019 64 When system compromised system tools system longer reliable Displayed information system tools intentionally display incorrect values The compromised system hide information using rootkits 77 The malicious traffic goes switch router remains visible point A visual peak specific network traffic r general analysis traffic provide information issue Where one find Network forensics ? When one thinks network forensic research one often thinks criminal hacking investigation However additionally law enf orcement private investigation agencies network forensic investigation also done CERT CSIRT teams security professionals network administrators In `` 1.4 Collecting network - based evidence '' sources network forensics already di scussed Possible sources 78 network data Switch The switch might function port mirror span port Port mirroring method used send copy packets switch port another switch port Router Routers provide N etFlow data monitoring network traffic Layer 2 - 7 devices Each device layer 2 - 7 capture network data devices provide services even endpoint Tap A network tap duplicates data packet streams ability send data stream another physical network port storage medium Logging monitoring Logging passive saving network traffic therefore logged attacks detected automatically By monitoring log files monitoring live network traffic alerts created send notifications case known pattern detected In case error incident specific network traffic also manually saved log files analysis review Logging The DHCP server keeps log files assigned IP addresses The webserver stores network information visitors pages Network devices store information network traffic metadata The metadata consists information connections betwee n IP address connection date time used ports protocols In countries IP address considered personal information subject legal rules protection privacy Therefore de fault rule log files b e kept longer strict ly necessary Monitoring 77 https //www.helpnetsecurity.com/2008/09/01/rootkit - evolution/ 78 https //digital - forensics.sans.org/media/Poster_Network - Forensics_WEB.pdf Introduction Network Forensics FINAL | Version 1.0 | January 2019 65 With network monitoring network constantly monitored triggers activated predefined deviations detected administrator alerted There variety net work monitoring tools existence monitoring quantity traffic monitoring attacks In general network monitoring system monitors network problems Intrusion Detection System IDS monitors network threats A n example open source web - based network monitoring graphing tool Cacti 79 Figure 4 - 1 Screenshot Cacti 80 Combining pieces An Intrusion Detection System IDS gives alert attack signature detected network traffic More sources needed answer question whether machine actually compromised The suspicious host may compromised therefore system tools log files host might unreliable In case investigation network traffic logs higher confidence val u e. More c larity given victim host connects known Command Control C & C server one malicious domain name IP address 79 https //www.cacti.net/ 80 Image source https //www.cacti.net/ Introduction Network Forensics FINAL | Version 1.0 | January 2019 66 What purpose data visualis ation ? Netwo rk traffic logs exists binary ASCII 81 human readable format Log files millions lines human readable necessarily provide insight Command line ools make possible select example top used network ports top source IP addresses Data visualis ation gives investigator graphical overview situation When network disruption occurs graphical representation network traffic quickly provide clarity exclude certain causes Nfsen ha possibility make profiles filters DNS reflection amplification attacks displayed graphically chronologically For type attack know advance UDP protocol source port 53 1500 b tes per packet f low used When using data filter see table example result Nfsen graphic shown figure 5 proto udp src port 53 bpp 1500 Figure 4 - 2 Example NFSEN filter DNS reflection amplification attack 82 N ot volume peaks also deviating traffic patterns become visible An example data exfiltration Long - term low bandwidth used transport data network The low bandwidth aims stay radar Chain Custody When incident occurs evidence collected seized investigation S ystems data carriers log files collected stored securely The evidence also protected degradation Booting system evidence collected reduc es legal value evidence courtroom The 81 American Standard Code Information Interchange 82 Image source image created ENISA Introduction Network Forensics FINAL | Version 1.0 | January 2019 67 applies collected log file affected could change hash value The lawyer counterparty may suggest evidence tampered When handling evi dence careful registration important It guarantees integrity traceability evidence origin courtroom Breaches integrity affect legal value proof A good monitoring chain contributes probability tha evidence comes person list It also meant prove evidence chain never left without supervision Lack strict control holds responsibility evidence given point time may result ts degradation compromise In part importance inviolability juristic value explained In addition practical issues transport registration numbers signatures storage discussed An example Chain Custody form also included What Chain Custody ? The Chain C ustody process validating collection storage movement protection evidence The forensic investigator must document characteristics evidence di stinguish comparable devices identify evidence There many notebooks certain product series A serial number damages stickers characteristics useful prove concerning device device seized longs person concerned For digital evidence hash value characteristic well The location date time transfer seizure evidence careful noted Also must noted stored might acce ss handled To ensure Chain Custody broken e vidence management important includes 83 Being able determine evidence ca piece hardware Where piece hardware retrieved fro Documenting al l persons handling evidence Ensuring secure storage evid ence limited accessibility Documenting processes used extract information Ensuring processes used reproducible would produce result Why careful Chain Custody important ? Whether digital careful Chain Custody necessary court case An example case good Chain Custody kept case O.J Simpson 84 Evidence items g ot lost never entered Chain Custody Such omissions errors negative impact legal proo f e specially courtroom The lawyer counterparty claim situation evidence legally obtained wise invalid The following situation makes clear importance good Chain Custody A computer confiscated Friday 13 th 10:00 AM On Monday 16 th investigator started computer accident After investigator made f orensic image hard disk calculated hash value From forensic image concluded computer still used moment seized In event counter - expertise counterparty might stipulate 83 Ryder 2002 84 The Forensics Library n.d. OJ Simpson http //aboutforensics.co.uk/oj - simpson/ Introduction Network Forensics FINAL | Version 1.0 | January 2019 68 person computer possession seizure added incriminating evidence taken exculpatory evidence Integrity Integrity ensures evidence changed original form In forensic investigations integri ty important moment seizure way time evidence served supporting evidence proven lawsuit The investigator check whether evidence changed First important know original state evidence Authenticity refers ability confirm integrity information original state When forensic copy made investigator carries check confirm copy matches exactly riginal One method checking forensic copy exactly matches original evidence use comparing hash values Hashing process digital fingerprinting evidence data A hash value numeric value fixed length uniquely identifies data Hash values represent large amounts data much smaller numeric values used digital signatures 85 Hashing one - way method substantive text derived hash value A hash value makes possible compare another substantive text original text The hash value original file calculated known The possibility happens negligible possibility equalize hash value c ollision ating file adjusted produces hash value original file There known proof concepts attacks two commonly used hash functions MD5 SHA - 1 Therefore avoided forensic investigations SHA 256 SHA512 used instead Below graphical view hash c ollision attack 85 Microsoft 2017a https //docs.microsoft.com/ en - us/dotnet/standard/security/ensuring - data - integrity - - hash - codes Introduction Network Forensics FINAL | Version 1.0 | January 2019 69 Figure 4 - 3 Illustration hash collision attack 86 Maintenance data integrity well data authenticity important safeguards key forensics ex aminations 87 Traceability Traceability maps events different urces combines events resulting new meaningful infor mation The result new information could obtained single piece evidence could onl result combining information different sources For e xample There incident originating computer user A If information used user A would main suspect If network logs Microsoft Active Directo ry logs analys ed might become clear example user A logged time outside company found relevant network logs With new information case changes ! The illustration 88 makes attack scenario visible combination different log files like personal firewall log security log system log application log IDS log Tcpdump Wireshark log 86 Image source http //shattered.io/ 87 https //www.forensicswiki.org/wiki/Computer_forensics 88 Selamat et al 2013 https //pdfs.semanticscholar.org/04ef/a0984b76b2e9b7a4390606552d98 a1881d07.pdf Introduction Network Forensics FINAL | Version 1.0 | January 2019 70 Figure 4 - 4 Example f attack visible traceability evidence 89 Practical issues When digital forensic case starts several practical issues may occur Although course specifically focused network forensics important look overall digital forensics handling evidence The forensic investigator needs complete toolkit advance When evidence take custody takes unnecessary time search print forms wipe 90 used media Another lim itation sometimes really practical issue file system type storage log files FAT16 FAT32 filesystems maximum file size 2GB 4GB respectively Filesystems commonly used Linux 91 OSX 92 almost inaccessi ble Microsoft Windows The forensic toolkit complete media tools cables available However might problem availability qualified staff able copy export log files When network management utsourced log files might received ticket request Physical access server 89 Image source Selamat et al 2013 90 Overwrite 91 For example EXT4 92 HFS+ Introduction Network Forensics FINAL | Version 1.0 | January 2019 71 room also problem At last hard disk containing evidence must store securely example physical safe ccess evidence th ird parties must permitted Legal value The legal value evidence prove persons guilt courtroom The integrity discussed already legal aspects digital evidence Below legal consideratio ns Brezinski Killalea 2002 Computer evidence needs Admissible It must conform certain legal rules put court Authentic It must possible positively tie evidentiary material incident Complete It must tell whole story particular perspective Reliable There must nothing evidence collected subsequently handled casts doubt au thenticity veracity Believable It must readily believable understandable court Example Chain Custody form A complete careful Chain Custody necessary support admissible evidence court case The Chain Custod form record seizure date time storage locations transfer condition electronic evidence Forensic investigators always Chain Custody forms available A part example form shown downl oaded freely National Institute Standards Technology NIST website NIST 2013 Introduction Network Forensics FINAL | Version 1.0 | January 2019 72 Figure 4 - 5 Sample Chain Custody form 93 From data information The focus section log analysis captured packets derive inf ormation data It starts data capture file D ifferent programs possibility capture packets log different formats There tools c orrelate reconstruct network connections data capture files Graphical ls Wireshark Moloch NetFlow discussed well command line tools like tcpdump Introduction data capture files T commonly used type data capture files pcap file format Wireshark graphical tool b e used read pcap files There format types data capture files Wireshark 93 Image source NIST 2013 Introduction Network Forensics FINAL | Version 1.0 | January 2019 73 read previously saved capture files 94 supports variety capture file formats reverse engineering support formats done `` soph isticated guesswork '' 95 Wire hark supports native PcapNg libpcap Libpcap library packet capturing comes tool tcpdump This packet capture library default format also called libpcap This library used amongst others tcpd ump nmap ntop S nort The Windows port L ibpcap WinPcap Pcap N g flexible extensible successor libpcap format Wireshark 1.8 later save files P cap N g format default Wi r eshark v ersions prior 1.8 use 96 default This training limited pcap files Data Analys T ools Data A naly sis T 97 There two types systems collect network data forensic investigation Catch - - - - captured written storage Stop look listen packet analysed memory certain information saved future analysis The pcap file previous paragraph example Catch - - - - There many data analysi tools Wireshark popular graphical tool CERT teams use tools N fS en network traffic analysis Moloch 98 also capability like Wireshark NfSen query network traffic data Another tool Xplico 99 able extra ct type specific traffic mail http voip call sip pcap file 94 Wireshark n.d. https //www.wireshark.org/docs/wsug_html_chunked/ChIOOpenSection.html 95 Wiresh ark n.d. b https //wiki.wireshark.org/FileFormatReference 96 Wireshark n.d. https //www.wireshark.org/docs/wsug_html_chunked/ChIOSaveSection.html 97 Sira 2003 https //www.giac.org/paper/gsec/2478/network - fore nsics - analysis - tools - overview - emerging - technology/104303 98 https //molo.ch/ 99 https //www.xplico.org/ Introduction Network Forensics FINAL | Version 1.0 | January 2019 74 Figure 4 - 6 Screen shot Xplico analys e http 100 Splunk 101 commercial tool used correlate log files store results searchable repository 100 Image ource http //www.xplico.org/wp - content/uploads/2008/11/xwi_http_list.png 101 https //www.splunk.com/ Introduction Network Forensics FINAL | Version 1.0 | January 2019 75 Fig ure 4 - 7 Screenshot Splunk 102 4.3.2.1 Wireshark Wireshark graphical tool used capture analys e data packets act packet sniffer protocol analys er It one commonly used tools create read packet capture files For practicing use Wireshark several publicly available 103 pcap files A screenshot Wireshark shown see figure 11 There also command line version Wireshark called tshark 104 102 Image source https //zdnet1.cbsistatic.com/hub/i/r/2018/04/23/15a4f6f7 - 23f2 - 4e64 - afe4 - 00e8eaa7920d/resize/770xauto/8e9c1bfd169ff02a11d28e011ddb0905/splunkoi - demo - executive - view.png 103 Netresec n.d. Publicly available PCAP files https //www.netresec.com /index.ashx ? page=PcapFiles 104 Wireshark n.d. https //www.wireshark.org/docs/wsug_html_chunked/AppToolstshark.html Introduction Network Forensics FINAL | Version 1.0 | January 2019 76 Figure 4 - 8 Screenshot Wireshark 105 There however remark safety using Wireshark In past number vulnerabilities Wireshark allowed exploitation processing live traffic data data capture file This could example allow remote attacke rs execute arbitrary code via crafted pcap file via malformed packet 4.3.2.2 Netflow NfSen Nf Dump NetFlow enables collect ion traffic flow statistics routing devices 106 Netflow developed Cisco There Netflow exporter run router Netflow collector runs different machine Netflow designed process IP packets interface supports sampling Sampling selecting one number sequential packets analysing res instance analysing 1 every 100 packets still useful anomaly traffic analysis 105 Image source https //www.wireshark.org 106 https //www.cisco.com/c/en/us/td/docs/ios/12_2/switch/co nfiguration/guide/fswtch_c/xcfnfc.pdf Introduction Network Forensics FINAL | Version 1.0 | January 2019 77 Figure 4 - 9 NetFlow Architecture 107 Nfdump 108 main netflow processing tool part Netflow collector tools NfSen 109 gr aphical web based front end N fdump netflow tools Netflow widely used CERT/CSIRT team In NfSen time frame selected together filters like source destination addresses ports protocols 107 Image source https //commons.wikimedia.org/wiki/File NetFlow_Architecture_2012.png 108 https //github.com/phaag/nfdump 109 http //nfsen.sourceforge.net/ Introduction Network Forensics FINAL | Version 1.0 | January 2019 78 Figure 4 - 10 Screenshot NfS e n 110 110 Image source http //nfsen.sourceforge.net/processing - 1.png Introduction Network Forensics FINAL | Version 1.0 | January 2019 79 Figure 4 - 11 Screenshot NfS en 111 4.3.2.3 Moloch Moloch 112 full - packet capture indexing platform It reads network data streams existing pcap files extracts data known protocol fields store Elasticsearch 113 backend 114 Similar Wiresha rk unique query syntax used Moloch functionality visualis e indexed traffic location point view 111 I mage ource https //dvas0004.files.wordpress.com/2011/04/nfsen2_thumb.png ? w=640 & h=324 112 https //molo.ch/ 113 https //www.elastic.co/ 114 https //digital - forensics.sans.org/media/Poster_Network - Forensics_WEB.pdf Introduction Network Forensics FINAL | Version 1.0 | January 2019 80 Figure 4 - 12 Screenshot Moloch 115 Command line tools In previous paragraphs used graphical tools make anal ysis network traffic It worth mentioning Wireshark command line tool called T shark 116 Tshark With T shark traffic written 117 file capability read 118 pcap files An example shown $ tshark - eth0 - w eth0_dump_20180801.pcap E xample T shark packet capture $ tshark - r eth0_dump_20180801.pcap E xample T shark read pap file 115 Image source https //molo.ch/sessions.png 116 h ttps //www.wireshark.org/docs/man - pages/tshark.html 117 https //www.wireshark.org/docs/man - pages/tshark.html 118 https //osqa - ask.wireshark.org/questions/40881/what - - - tshark - command - - open - previously - captured - pcap - files Introduction Network Forensics FINAL | Version 1.0 | January 2019 81 Below another example Tshark data HTTP request extracted $ tshark - wlan0 - Y http.request - T fiel ds - e http.host - e http.user_agent searchdns.netcraft.com Mozilla/5.0 X11 Ubuntu Linux x86_64 rv:36.0 Gecko/20100101 Firefox/36.0 searchdns.netcraft.com Mozilla/5.0 X11 Ubuntu Linux x86_64 rv:36.0 Gecko/20100101 Firefox/36.0 ads.netcraft.com Moz illa/5.0 X11 Ubuntu Linux x86_64 rv:36.0 Gecko/20100101 Firefox/36.0 HTTP Analysis Tshark 119 Tcpdump Tcpdump 120 Unix type packet sniffer capturing diagnosi ng analysi ng network traffic There also Windows version called Wi ndump 121 Basic command listening interface eth0 write output file example called eth0_dump_20180801.pcap - $ tcpdump - eth0 - w eth0_dump_20180801.pcap Another example capturing onl packets destination address 192.168.0.1 source - written file called eth0_dump_20180801.pcap $ tcpdump A eth0 dst 192.168.0.1 p ort 22 - w eth0_dump_20180801.pcap Grep Grep tool belongs Swiss knives It versatile Grep search input file lines containing match given pattern list $ grep < pattern > file $ grep < pattern > logfile The tool match given pattern $ grep v < p attern > logfile Tail The command line tool tail program display ing end text file piped da ta By default tail prints last 10 lines file 122 To monitor file parameter - f included Example shows monitoring syslog file 119 https //hackertarget.com/tshark - tutorial - - filter - examples/ 120 http //www.tcpdump.org/ 121 http //www.winpcap.org/windump/ 122 https //www.gnu.org/software/coreutils/manual/html_node/tail - invocation.html Introduction Network Forensics FINAL | Version 1.0 | January 2019 82 th os e lines displayed match given pattern $ tail - f file For live investigations useful use commands tail grep To monitor file show relevant lines contains pattern example 123 us ed $ tail - f file | grep < pattern > Sed Sed stream editor mostly popular substitute command In example simply domainnames.txt write result new file calle new_domainnames.txt $ sed s/.nl/.gr/ domainnames.txt > new_domainnames.txt AWK AWK scripting language Unix like systems intended automatic processing text files With AWK print example certain columns This useful print certain columns log file An example shown clarification An example log file contains four columns year http status response IP address request line To select display IP address request line A WK used example 2018 200 172.168.0.1 GET/1.0 awk ' { print $ 3 $ 4 } ' ip.txt 172.168.0.1 GET/1.0 Strings A network log ASCII binary format The strings command returns string printable characters files Its main use extract text binary files 124 The parameter used scan whole file $ strings Regular expressions A regular expression sequence characters defines search pattern Grep option e u se regular expressions The example uses file logfile.txt searches matching lines Secret secret $ grep - e `` sS ecret '' logfile.txt 123 https //stackoverflow.com/questions/7161821/how - - grep - - continuous - stream 124 http //www.linfo.org/strings.html Introduction Network Forensics FINAL | Version 1.0 | January 2019 83 To find IPv4 address pattern must mapped An IPv4 address range 0.0.0.0 throu gh 255.255.255.255 Consists 4 octets Consists numbers The length octet may vary 1 3 Octets separated dot An example pattern use regular expression matching IPv4 addresses listed 125 $ grep - - E '^ 0 - 9 | 1 - 9 0 - 9 |1 0 - 9 0 - 9 |2 0 - 4 0 - 9 |25 0 - 5 \ { 3 } 0 - 9 | 1 - 9 0 - 9 |1 0 - 9 0 - 9 |2 0 - 4 0 - 9 |25 0 - 5 ' file Encryption making best encrypted capture Encryption method protect digital information scrambling travels across Internet authoris ed users decrypt un - scramble information use 126 When using encryption network connections connection whole b e encrypted content packets When using VPN connection encryption network connections information traffic data remains readable What information still read depends encryption network transmission methods used Both topics discussed focus still read despite presence strong encryption CIA triad Privacy Anonymity In nformation ecurity CIA triad 127 model used confused US g overnment agency bearing name The CIA riad consists c onfidentiality ntegrity vailability When c ompany data stored cloud storage outsourced sensitive information therefore logically transported network conne ctions It therefore important look encryption network connections The terms explained detail 125 https //superuser.com/questions/202818/what - regular - expression - - - use - - match - - ip - address 126 https //its.uiowa.edu/support/article /104105 127 https //geek - university.com/ccna - security/confidentiality - integrity - - availability - cia - triad/ Introduction Network Forensics FINAL | Version 1.0 | January 2019 84 Figure 4 - 13 CIA Triad 128 Confidentiality Confidentiality protection information access unauth oris ed persons Protection system level offered access control Protected encryption used network connections Integrity Integrity ensures data true correct original form It important data prote cted changing unauthoris ed persons When file transported content identical original file destination To check whether copied transported file still identical original calculated hash values c compared Availability Availability ensures information systems available accessible Processes redundancy failover RAID high - availability clusters used mitigate consequences hardware issues occur 129 Privac Confidentiality privacy pursue goal Protection data unauthoris ed persons With advent privacy laws e.g GDPR 130 protection personal data particular high agenda companies organis ations Directive EU 2016/680 GDPR protection natural persons regard processing personal data free movement data 131 Anonymity Anonymity protects identity person VPN used grant authoris ed persons access certain systems networks also used safeguard user anonymity Internet Another example service hat may protect user anonymity Internet Tor Project 132 128 Image source image created ENISA 129 https //geek - university.com/ccna - security/confidentiality - integrity - - availability - cia - triad/ 130 https //eur - lex.europa.eu/eli/reg/2016/679/oj General Data Protection Regulation GDPR 131 https //ec.europa.eu/info/aw/law - topic/data - protection/data - protection - eu_en 132 https //www.torproject.org/ Introduction Network Forensics FINAL | Version 1.0 | January 2019 85 Both VPN anonymity services Tor project makes diffic ult trace perpetrators based network data Networks An explanation networks IP packets encryption Ethernet commonly used wired connections based standard IEEE 802.3 WiFi commonly used Wireless networks based 802.11 IEEE network standard 4.4.2.1 Ethernet Ethernet standard method connecting devices like computers routers printers wired connections 133 Cables used coaxial cables 134 twisted pair cables UTP/RJ - 45 fiber opti cs cables connected hubs switches routers The Ethernet frame contains source destinations MAC address Ethernet data link 2nd layer OSI Model displayed picture Figure 4 - 14 The OSI mod el 135 4.4.2.2 Short review IP packet The third layer OSI model network layer IP 136 network protocol wide used LAN Local area network WAN Wide area network networks An IP packet contains IP header see figure 133 https //www.iplocation.net/ethernet 134 Less used modern days 135 Image source http //teaching.csse.uwa.edu.au/units/CITS3002/lectures/lecture09/05.html 136 https //tools.ietf.org/html/rfc791 Introduction Network Forensics FINAL | Version 1.0 | January 2019 86 Figure 4 - 15 T first 32 bits typical IP packet header 137 The IP headers contains metadata IP packet The version field shows IP version 4 example IPv4 uses 32 - bit address The source IP destination IP addresses useful network forensic investigations On top network protocol layer transport layer placed layer four OSI model TCP UDP transport layers Network packets encapsulated one layer within another like onion exampl e An IP - packet resides within Ethernet - frame A TCP - segment resides within IP - packet A HTTP - packet resides within TCP - segment 138 Figure 4 - 16 N etwork packet 139 Ethernet IP TCP often called packets For Ethernet IP TCP correct de nomination Ethernet frame IP packet TCP segment 137 Image source IBM n.d. 138 http //www.laneye.com/network/how - network - works/mac - address - - ip - address - relationship.htm 139 Image source http //www.laneye.com/network/ethernet - network - packet - holding - - ip - packet.gif Introduction Network Forensics FINAL | Version 1.0 | January 2019 87 4.4.2.3 IPv4 versus IPv6 In previous paragraph example IPv4 address header shown An IPv4 address 32 - bit numeric address consists four numbers period decimal notation Ea ch number consists number range 0 - 255 The format 1.2.3.4 IPv6 140 addresses 128 bits length written hexadecimal An IPv6 address format called segment h exadecimal value 0 FFFF The segments separated colons periods 141 Figure 4 - 17 IPv6 address 142 An IPv6 address looks different terms format header also differs IPv4 header Below illustration I Pv4 header IPv6 header 140 Kawamura Kawashima 2010 141 IBM n.d. b 142 Image source https //upload.wikimedia.org/wikipedia/commons/thumb/7/70/Ipv6_address_leading_zeros.svg/760px - Ipv6_addre ss_leading_zeros.svg.png Introduction Network Forensics FINAL | Version 1.0 | January 2019 88 Figure 4 - 18 IPv4 vs IPv6 143 available Modern operating systems already support IPv6 Internet provi ders offer However applications take IPv6 account An example firewall endpoint security services accessed via IPv4 IPv6 IPv4 ports protected Because IPv6 involves risk Encry ption Encryption converting data form rendered meaningful using decryption key Nowadays many types encryption exist homomorphic encryption quantum - safe encryption etc ... classical approach cat egorising still use related actual network forensics following one Symmetric one key shared sending party receiving party Asymmetric two keys one public used encrypt private key used decryption Following examples two terms relation encryption Symmetric encryption sides essentially posses key information exchange encrypted messages occur So person A Alice encryp ts file send person B Bob The secret key already shared Bob decrypts file known shared secret key Asymmetric encryption efore exchange encrypted messages happen sender message needs know public part key information The label public refers tha fact times public key information published pub lic keyservers websites business cards The 143 Image source https //upload.wikimedia.org/wikipedia/commons/a/ae/IPv6_vs_IPv4.jpg Introduction Network Forensics FINAL | Version 1.0 | January 2019 89 encrypted message decrypted means f private part key information This shodl never shared parties So Alice sends Bob message encrypts message using Bob 's public key The encrypted message decrypted secret key Bob Usually ymmetric encryption performed faster use less resources th n asymmetric encryption disadvantage parties involved exchange information encrypted using symmetric algorythms need exchange key needed decryption amongst e secure way Some VPN solutions use symmetric well asymmetric encryption secure fast connections Ususally asymmetric encryption used negotiating symmetric key later used es tablishing connection In way resource intensive algorithms needed key exchange 4.4.3.1 Application Layer encryption c ommunication within one single application This way application encrypts data application needed decrypt data Other applications might able use Examples 144 application layer encryption S/MIME secure/m ultipurpose internet mail extensions S - HTTP secure hypertext transfer protocol PGP Pretty Good Privacy MSP message security protocol SET secure electronic transactions There confusing examples worth mentioning For example S - HTTP well - known HTTPS S - HTTP uses symmetric key encryption encrypts served page data submitted data like POST fields 145 HTTPS used webservers stands HyperText Transfer Protocol Secure make use Transport Layer Security TLS Secure Sockets Layer SSL SSL TLS session layer OSI Model A nother somewhat confusing example Secure Shell SSH 146 In past users applied Telnet remote shells telnet use encryption SSH program use secure remote shell - also term transport layer p rotocol 144 http //www.open.edu/openlearn/science - maths - technology/computing - - ict/systems - computer/network - security/content - section - 5.3.2 145 CISSP Cert Gu ide CISSP Cert Guide 3/e_c3 summary 146 Ylonen Lonvick 2006 Introduction Network Forensics FINAL | Version 1.0 | January 2019 90 4.4.3.2 Network encryption N etwork encryption used encrypt data transmitted server client server server 147 IPs ec Internet Protocol Security IPsec framework open standards ensure private secure communications Internet Protocol IP networks This done means use cryptographic security services 148 There two security protocols use IPsec Authentication Header AH Encapsulating Security Payload ESP Each protocol supports two modes use transport mode tunnel mode 149 An explanation tunnel mode transport mode first explained followed Authentication Header AH Encapsulating Security Payload ESP 4.4.4.1 Tunnel mode With use tunnel mode information IP header original packet protected encryption The original packet IP header payload encapsulated new IP heade r IPsec header This often used Site - - Site VPN Figure 4 - 19 Tunnel mode 150 4.4.4.2 Transport mode With use transport mode payload protected encryption original header remains intact unencrypted It used end - - end encryption example client server 147 https //www.ibm.com/support/knowledgecenter/en/SSGU8G_12.1.0/com.ibm.sec.doc/ids_en_001.htm 148 Microsoft 2018 149 https //www.ibm.com/support/knowledgecenter/en/SSLTBW_2.3.0/com.ibm.zos.v 2r3.halz002/ipsecurity_ipsec_a h_esp_encap_modes.htm 150 Image source https //www.cisco.com/c/dam/en/us/td/i/100001 - 200000/130001 - 140000/132001 - 133000/132165.ps/_jcr_content/renditions/132165.jpg Introduction Network Forensics FINAL | Version 1.0 | January 2019 91 Figure 4 - 20 Transport mode 151 4.4.4.3 Authentication Header AH protocol provides data origin authentication da ta integrity replay protection However AH 152 The IP Authentication Header described RFC4302 153 151 Image source https //www.cisco.com/c/dam/en/us/td/i/100001 - 200000/130001 - 140000/132001 - 133000/132166.ps/_jcr_content/renditions/132166.jpg 152 IBM n.d. c 153 https //tools.ietf.org/html/rfc4302 Introduction Network Forensics FINAL | Version 1.0 | January 2019 92 Figure 4 - 21 Authentication H eader 154 4.4.4.4 Encapsulation Se curity Payload ESP The IPsec Encapsulating Security Payload ESP protocol Kent 2005 provides authentication integrity confidentially network data payload In transport mode ESP n protect original IP header This encrypted unnel mode Figure 4 - 22 E ncapsulation S ecurity P ayload 155 VPN A Virtual Private Network VPN allows user securely connect private network Internet A VPN tunnel encrypted connection VPN services used within company acce ss company network outside VPN also used hide users IP address get IP specific country Sometimes sites services give different content based IP location An example IP location based services offering country based video streams 154 Image source https //www.cisco.com/c/dam/en/us/td/i/100001 - 200000 /130001 - 140000/132001 - 133000/132164.ps/_jcr_content/renditions/132164.jpg 155 Image source https //www.cisco.com/c/dam/en/us/td/i/100001 - 200000/130001 - 140000/132001 - 133000/132163.ps/_jcr_content/renditions/132163.jpg Introduction Network Forensics FINAL | Version 1.0 | January 2019 93 Figure 4 - 23 Encrypted VPN Tunnel 156 4.4.5.1 VPN types VPN used remote access also used connect two parts networks In case remote access employee log company network order gain access protected services VPN also securely interconnect networks offices different geographical locations In general two types VPN Remote Access VPN Site - - Site VPN 157 In terms VPN distinguish split tunnels full tunnels With full tunnel traffic goes VPN gateway With split tunnel traffic specific network ranges routed VPN gatewa destinations routed regular gateway There variant split tunneling called Inverse split tunneling With variant traffic routed default trough VPN gateway except indicated traffic routed normal gateway 4.4.5.2 VPN Protocol types We discussed IPsec previous paragraphs protocols 158 used VPN SSTP L2TP/IPsec PPTP WireGuard OpenVPN SoftEther IKEv2/IPSec 156 Image source https //cybersecurity.os u.edu/sites/default/files/2017/10/vpn_img1.jpg 157 Site - - Site VPN also called Lan - 2 - Lan connects two networks privately 158 https //thebestvpn.com/pptp - l2tp - openvpn - sstp - ikev2 - protocols/ Introduction Network Forensics FINAL | Version 1.0 | January 2019 94 OpenVPN 159 popular protocol 160 high security known VPN application PPTP weak security Wireless Wireless internet advantage physical Ethernet cables required Wireless internet also known Wi - Fi WiFi It technology based IEE E 802.11 trademark Wi - Fi Alliance With Wi - Fi radio frequencies 2.4 GHz 5 GHz band The disadvantage 5 GHz less far range The frame format Ethernet frames differs bit Wi - Fi frame formats illustrated belo w. Wi - Fi frames contains four MAC addresses typically use three Wi - Fi frames complex Ethernet frames use two MAC Address Figure 4 - 24 Frame format Ethernet vs Wi - Fi 161 Open Wi - Fi networks really open form security The traffic data listened collected With superseded Wired Equivalent Privacy WEP protocol traffic encrypted via Wi - Fi using RC4 encryption The encryption applies NIC client NIC Access Point WEP uses pre - WEP officially abandoned Wi - Fi Alliance 2004 162 WEPCrack open source tool breaking 159 https //openvpn.net/index.php/open - source/documentation/secur ity - overview.html 160 https //wiki.wireshark.org/OpenVPN 161 Image source https //thenetworkseal.files.wordpress.com/2015/05/ethernet_wifi_frames.jpg 162 Netspot 2018a Introduction Network Forensics FINAL | Version 1.0 | January 2019 95 802.11 WEP secret keys 163 Another tool cracking encryption keys Wi - Fi networks WEP Airsnort 164 Wi - Fi Protected Access WPA replacement enhancement WEP WPA Personal also supports pre - shared keys PSK Temporal Key Integrity Protocol TKIP fo r encryption WPA Enterprise uses authentication server keys certificates generation 165 WPA2 improves WPA use Advanced Encryption Standard AES encryption Aircrack - ng 166 used amongst others crack pre - shared keys WEP WPA1 WPA2 Airdump - ng tool packet capturing raw 802.11 frames part Aircrack - ng suite It particularly suitable collecting WEP IVs Initialization Vector 167 cracked brute forcing techniques In 2017 vulnerability WPA2 published known Key Reinstallation Attacks 168 KRACK WPA3 169 follows WPA2 2004 makes attacks lot harder protecting dictionary attacks impl ementation new key exchange protocol Network Forensics Encryption When log files network traffic used forensics encryption obstacle research Encryption established VPN example SSL HTTPS There scenarios thinkable investigator confronted 4.4.7.1 Explanation different scenarios With use SSL VPN connections metadata still read Which metadata still readable explained SSL When SSL used w ith number applications SSL former version TLS protocol Some well - known TCP ports TLS traffic 170 443 https 636 ldaps 989 ftps - data 990 ftps 992 telnets 993 imaps 994 ircs 995 pop3s 5061 sips 163 http //wepcrack.sourceforge.net/ 164 http //airsnort.shmoo.com/ 165 Netspot 2018a 166 https /www.aircrack - ng.org/ 167 Aircrack - ng 2018 168 Vanhoef 2017 169 Wi - Fi Alliance 2018 170 Wireshark n.d. c Introduction Network Forensics FINAL | Version 1.0 | January 2019 96 Sources destination information f rom IP headers still readable If credentials provided l ibgcrypt supports TLS decryption VPN We seen two modes VPN IPsec Tunnel mode Transport mode een two routers The traffic office router encrypted A network capture show clear text traffic A capture two routers show encrypted traffic except Ethernet address two routers In transport mode encryption end end traffic Office router encrypted Briefly summaris ed overview Figure 4 - 25 Frame format Ethernet vs Wi - Fi 171 4.4.7.2 Network Metadata The common definition metadata ar e `` data data '' A better definition metadata deliberate structured data data 172 Some kinds metadata interesting computer forensics 173 File system metadata e.g MAC times access control lists etc Digital image tadata Although information image size number colours technically metadata JPEG file formats store additional data photo device acquired Document metadata creator document last print time etc 171 Image source https //images.techhive.com/images/idge/imported/article/nww/2007/04/06fig01 - 100299773 - orig.jpg 172 https //guides.library.ucsc.edu/c.ph p ? g=618773 173 https //www.forensicswiki.org/wiki/Metadata Introduction Network Forensics FINAL | Version 1.0 | January 2019 97 Network traffic contains also metadata relying header packet contain information The source IP address destination IP address Used protocol Size packets Number packets Figure 4 - 26 Frame fo rmat Ethernet vs Wi - Fi 174 4.4.7.3 Other characteristics HTTPS DNS When requesting website trough HTTPS URL content encrypted Before HTTPS requested DNS query DNS server done request correct IP address serv er This done separate connection DNS server usually encrypted 175 Features traffic like size timing destination encrypted packets possible uniquely ide ntify certain web page visits otherwise reveal information 176 Web site fingerprinting potentially identifying pecific encrypted web pages user visiting Classification When traffic encrypted content readable encrypted traffic For classifying traffic encrypted SSL/TLS e.g https 177 One read name service n SSL/TLS certificate Server Name Indication SNI 174 Image source https //www.kentik.com/wp - content/uploads/2016/03/metadata - 420w.png 175 https //serverfault.com/questions/447653/does - ssl - also - encrypt - - dns - address 176 Rieke et al 2016 177 Chetlall 2018 Introduction Network Forensics FINAL | Version 1.0 | January 2019 98 Tool sources CACTI https //www.cacti.net/ last accessed July 31th 2018 https //sourceforge.net/projects/libpcap/ last accessed July 31th 2018 https //www.winpcap.org last accessed n July 31th 2018 https //www.torproject.org/ last accessed July 31th 2018 http //wepcrack.sourceforge.net/ last accessed July 31th 2018 https //www.aircrack - ng.org/ last accessed July 31th 2018 http //airsnort.shmoo.com/ last acces sed July 31th 2018 http //technotif.com/how - - use - airsnort/ last accessed July 31th 2018 https //www.aircrack - ng.org/doku.php ? id=airodump - ng last accessed July 31th 2018 https //molo.ch/ last accessed July 31th 2018 http //nfse n.sourceforge.net/ last accessed July 31th 2018 https //github.com/phaag/nfdump last accessed July 31th 2018 https //www.xplico.org/ last accessed July 31th 2018 https //www.splunk.com/ last accessed July 31th 2018 https //www.w ireshark.org/docs/man - pages/tshark.html http //www.tcpdump.org/ last accessed July 31th 2018 http //www.winpcap.org/windump/ last accessed July 31th 2018 Further reading Hales G.A. Ferguson R.I. McEwan Archibald J. On use ata visualisation techniques support digital forensic analysis A survey current approaches https //pdfs.semanticscholar.org/9833/c84bb66df3e37939dd90d9965 016d37b6e56.pdf last accessed October 7 th 2018 Raftopoulos E. Dimitropoulos X. Understanding Network Forensics Analysis Operational Environment https //www.tik.ee.ethz.ch/file/b0e1bbfa2135af7b379e67a23dd18fc5/iwcc_RaDi13.pdf last accessed October 7 th 2018 Introduction Network Forensics FINAL | Version 1.0 | January 2019 99 5 Use Cases ICS/SCADA environment Summary This use case deal attack ICS/SCADA environment energy sector The successful completion scenario teach students set configure network security monitoring environment including baselining regular non - malicious traffic finally successful analysis multi - stage attack n network During exercise students deal previously unseen networ k architecture familiaris e unknown protocol used control industrial environment 5.1.1.1 What ICS/SCADA ? Industrial plants power plants factories oil refineries etc large distributed complexes proper operation Before computers introduced industrial plants rely human personnel manually control monitor equipment processes push buttons dials As plants grew size solution needed control monitor equipment long distances With introduction computers become possible remotely control monitor industrial components processes Industrial Control Systems ICS The first ICS simple point - - point networks connecting monitoring panel command device remote sensor actuator These since evolved complex large - scale networks interconnecting computers sensors actuators Remote Terminal Units RTUs Programmable Logic Controllers PLCs Supervisory Control Data Acquisition SCADA control system archit ecture allows high - level management systems interface peripheral devices PLCs different vendors perform supervisory operation The general model seen Figu 5 - 1 Introduction Network Forensics FINAL | Version 1.0 | January 2019 100 Figu 5 - 1 ICS/SCADA control levels Level 0 Contains field devices flow temperature sensors final control elements control valves Level 1 Contains industrialised input/output I/O modules associated distributed electronic processors Level 2 Contains supervisory computers collate information processor nodes system provide operator control screens Level 3 Is production control l evel directly control process concerned monitoring production targets Level 4 Is production scheduling level 5.1.1.2 What challenging SCADA security ? The consequences intrusions SCADA systems may much severe traditional IT - systems Equipment may damaged hazardous poisonous radioactive material released environment human life may endangered even people outside plant When SCADA systems attacked con trol critical infrastructures transmission electricity transportation gas oil pipelines water distribution traffic lights etc. impacts could range much original compromised systems The move proprietary technologies standardized open solutions together increased number connections SCADA systems office networks Internet made vulnerable types network attacks relatively common computer security This imposes new challenges traditional IT - security monitoring including Introduction Network Forensics FINAL | Version 1.0 | January 2019 101 SCADA environments different guiding principle Foremost importance SCADA systems safety reliability availability SRA industrial proc ess outages would risk damaging equipment risking catastrophic failures For traditional IT - systems confidentiality integrity availability CIA data guiding principle SCADA systems networks originally planned wi th IT - security mind Particularly lack encryption authentication Furthermore availability primary concern systems may updated regularly thus exposing vulnerabilities months longer testing live systems possible due SRA principle dedicated test environments deemed complex expensive There multitude SCADA protocols little known traditional IT - security personnel There many threat vectors mode rn SCADA system One threat unauthoris ed access control software whether human access changes induced intentionally accidentally virus infections software threats residing control host machine Another threat packet access network segments hosting SCADA devices In many cases control protocol lacks form cryptographic security allowing attacker control SCADA device sending commands network In many cases attac kers also able compromise monitoring systems operators unaware ongoing attack ENISA 2011 Summary Table PARAMETER DESCRIPTION DURATION Main Objective In exercise trainees taken incident resp onse attack ICS/SCADA environment starting preparation phase incident analysis post - incident activity In first two tasks trainees set IDS SCADA network using well - established open source sof tware solutions Main goal part learn place configure sensor gain suitable forensic data given specific network setup The latter tasks 3 - 5 focus forensic analysis three attack stages For stag e network traffic captures given students analyse IDS environment set - previous tasks scenario Targeted Audience The exercise dedicated new CERT staff involved network forensics The exe rcise also helpful CERT staff involved daily incident response Total Duration 8.0 hours Time Schedule Introduction exercise tools overview 2.0 hours Task 1 Setting monitoring environment 1.0 hour Introduction Network Forensics FINAL | Version 1.0 | January 2019 102 PARAMETER DESCRIPTION DURATION Tas k 2 Baselining regular traffic 1.0 hour Task 3 Initial attack analysis 1.0 hour Task 4 Second attack stage analysis 1.0 hour Task 5 Analyse attack PLCs 1.0 hour Summary exercise 1.0 hour Frequency It advised organi se exercise new team members join CERT/CSIRT Introduction exercise overview The exercise consists several tasks sub - tasks leading students preparatory phase network monitoring simulated multi - sta ge attack Each stage attack covered section students given data tasks accomplish At end section sample solution presented teacher together presentation discussion stud solution give opportunity catch - proceeding next section The Virtual Machine used exercise downloaded http //www.enisa .europa.eu/ftp/ENISA_INF _5.1.ova - username exercise password enisa 5.1.3.1 Background information This cover topics chapters 1 - 4 familiaris e students basic knowledge needed upcoming exercises This part needs held one scenario used It recommended workshop - style approach students teacher discuss ideas l knowledge This part could skipped students already high enough knowledge IDS network forensics Task 1 Setting monitoring environment In accordance laid previous chapters exercise start coverage preparatory tasks network monitoring forensics i.e setting capturing points selecting monitoring targets defining monitoring policy 5.1.4.1 The background This scenario take place power plant wher e students take role network monitoring staff tasked deploying Network Intrusion Detection System small sub - network The goal NIDS detect attacks PLCs well workstations network If successful NIDS deployed processes developed around used pilot plant systems Introduction Network Forensics FINAL | Version 1.0 | January 2019 103 Figure 5 - 2 SCADA application 5.1.4.2 The network This scenario requires students analyse simulated attack simulated network nuclear power plant include An Engineering workstation configuring industrial devices programming PLCs Two programmable logic controller PLCs used control physical processes openin g valve button pushed A Supervisory control data acquisition SCADA workstation used control industrial process The application running SCADA workstation gives operator two buttons control operation pump One power pump another button emergency shutdown first button fails work reason Despite apparent simplicity system critical operation plant see Figure 5 - 2 The network connection networks Within scenario systems interconnected single hardware switch like show n Figure 5 - 3 Figure 5 - 3 The exercise network Introduction Network Forensics FINAL | Version 1.0 | January 2019 104 The network traffic data generated courtesy National Centre Nuclear Research NCBJ Poland 5.1.4.3 Subtask Decide monitoring points In section Collecting network - based evidence 1.4 several different methods traffic capture put forward It students select one given network Students Select one capturing points monitoring network Justify decision Solution Since traffic to/from systems need monitored canonical point traffic capture configure span - port switch tr affic four systems workstations PLCs mirrored Figure 5 - 4 This may impose traffic problem span - port would need 4 - 8 times bandwidth individual network connection 4 systems times 2 - outgoing traffic For exercise assumed mirroring port enough bandwidth Figure 5 - 4 Exercise network capturing system Alternative Solution If switch n ot support port mirroring perhaps ports already use alternative solution devised One could use cable taps workstations PLCs shown Figu 5 - 1 This would require cables going taps capturing system 8 total 2 system covering - outgoing traffic correspondingly 8 network ports capturing system hand would avoid bandwidth problems req uire anything switch The costs taps cables network ports would probably exceed switch port mirroring support however Introduction Network Forensics FINAL | Version 1.0 | January 2019 105 Figure 5 - 5 Exercise network cable taps Teacher While decision strictly speaking point packet capture necessity inclusion system stores analyses traffic This covered task For simplicity assumed tap point directly connected computer system enough storage capacity shown Figure 5 - 4 5.1.4.4 Subtask Develop monitoring policy C ontinuing path preparing network monitoring time decide monitor In section 2.2 prerequisites laid This sub - task let students decide monitoring policy well targets given network Students Select monitoring policy target network Justify decision Teacher If size group allows task spread multiple groups comparing results Enough time reserved discussion different approaches Blacklist monitoring difficult n ot enough attack signatures SCADA networks available especially type PLCs used exercise For anomaly monitoring policy monitoring point made The network small closed expected clea r set traffic patterns w ill n change often This speaks anomaly monitoring Also traffic patterns known baselining next sub - task another point anomaly monitoring one start right away fine policy time Details policy postponed baselining done With full control systems network case also made policy monitoring Only key points already made Only workstations shall communicate PLCs Introduction Network Forensics FINAL | Version 1.0 | January 2019 106 Communication shall limited port 102/tcp S7plus protocols The question except PLCs workstations communicate left open If communicate communicat ion limited port 5900/tcp VNC Engineering workstation SCDA workstation Both combined hybrid approach This kept mind brought back point summary discussion As seen later systems network need monitored When talking individual targets following arguments made The PLCs monitored attacked system network bypassing protective measures workstations The PLCs monitored defensive measures This said workstations sort firewall IDS/IPS retrofitted difficult PLCs The SCADA w orkstation monitored attack workstation could used compromise SCADA application It also system largest attack surface two protocols VNC S7plus running Also SCADA workstation could u sed attack PLCs communications theses The engineering workstation one largest influence controls programs run P LCs In end depends arguments weigh ed Since connection networks use name servers DNS NAT VPN - gateways automatic address management So additional information needed present h ere One may argue lack NTP investigators cautions comparing timestamps different hosts As exercise work network packet captures problem It may argued sub - task somewhat unfair given students n access traffic data detailed information network yet However uncommon real - world cases advice often sought - incomplete inaccurate information A lso without seen real attacks live networks coming solution works perfectly almost impossible revisions policies n uncommon several policy revisions arriving one works well enough Task 2 Baselining regular traffic The second part focuses learning get best IDS system able differentiate regular traffic patterns anything malicious/suspicious One main tasks operating I DS system constantly adjust configuration minimise false alarms configuration errors well To achieve goal students presented number prepared network captures analyse take input IDS configuration Students Assume time sample traffic network The file normal.pcapng contain traffic without user activity SCADA workstation file button_push.pcapng button push th e SCADA workstation Answer following questions Introduction Network Forensics FINAL | Version 1.0 | January 2019 107 1 What systems network ? What addresses MAC IPv4 systems ? Are addresses systems ? 2 Over protocols systems communicate ? Solution A good way start use endpoint statistic obtained tshark - q - z endpoints eth - r normal.pcapng wireshark Ignoring broadcast multicast addresses total seven systems r emains The first column shows MAC - - tshark Vendor name resolved Full MAC address IP address Broadcast ff ff ff ff ff ff 255.255.255.255 Dell_9f:7c:74 f4:8e:38:9f:7c:74 10.3.5.3 D - Link_e7 b7 c4 00:26:5a e7 b7 c4 10.3.5.1 IPv4mcast_7f ff:64 01:00:5e:7f ff:64 239.255.255.100 IPv4mcast_7f ff fa 01:00:5e:7f ff fa 239.255.255 .250 IPv4mcast_fc 01:00:5e:00:00 fc 224.0.0.252 LLDP_Multicast 01:80 c2:00:00:0e Siemens_ad:91:96 28:63:36 ad:91:96 10.5.3.12 Siemens_ad:91:97 28:63:36 ad:91:97 Siemens_ae:70:0b 28:63:36 ae:70:0b Siemens_f6:8b bd 00:1b:1b f6:8b bd Siemens_f7:7c 4f 00:1b:1b f7:7c:4f For completeness MAC IP - addresses second PLC Engineering workstation given These systems come later exercise Vendor name resolved Full MAC address IP - address Siemens_ae:70:09 28:6 3:36 ae:70:09 10.3.5.11 Siemens_f7:7c:4f 01:1b:1b f7:7c:4f 10.3.5.5 The relationship MAC - IP - addresses obtained ARP responses exchanged network These responses identified opcode 2 In wireshark GUI done applying filter ARP responses thus arp.opcode == 2 From CLI tshark - O arp - Y 'arp.opcode == 2 ' - n - r normal.pcapng Note responses 10.3.5.3 SCADA workstation 10.3.5.12 PLC seen Seemingly time capture entry Introduction Network Forensics FINAL | Version 1.0 | January 2019 108 10.3.5.12 already ARP cache system n asking But IP - MAC - address still seen response see Figure 5 - 6 Figure 5 - 6 ARP responses Wireshark There IPv6 protocol addresses network seen empty tab endpoints display 1 To get overview protocols used wireshark offers p ro tocol hierarchy display tshark r normal.pcapng - z io phs GUI giving detailed information Figure 5 - 7 Figure 5 - 7 Protocol hierarchy Introduction Network Forensics FINAL | Version 1.0 | January 2019 109 As Layer 2 protocols play larger role exercise focus IP There four different protocols used Two UDP - based SSDP LLMNR one TCP - based S7 Communication Plus shorte ned S7plus document IGMP SSDP LLMNR artefacts Microsoft Windows ignored IGMP As seen hierarchy S7plus encapsulated via two protocols TPKT COTP Being originally OSI suite protocols S7plus transported TCP encapsulation transport protocol COTP short Connection Oriented Transport Protocol plays role TCP OSI world The encapsulation done throug h small intermediate protocol layer TPKT 178 see Figure 5 - 8 third second rightmost columns 179 Figure 5 - 8 S7 protocol layering top TCP/IP While redundant made porting OSI applications TCP/IP world easier The drawback TPKT uses one TCP port 102 transported OSI protocols One see OSI protocol transported without looking higher protocol layers The TPKT h eader four bytes long first byte version 3 one reserved byte 0 two bytes length encapsulated OSI packet including TPKT header see Figure 5 - 9 178 TPKT specified RFC 1006 https //tools.ietf.org/html/rfc1006 179 Taken https //plc4x.incubator.apache.org/img/protocols - s7 - osi.png Introduction Network Forensics FINAL | Version 1.0 | January 2019 110 Figure 5 - 9 TPKT header Wireshark COTP defines five classes transport protocols In exercise class 0 used also referred functions TP0 minimal set functions use planned connection - oriented layer 3 protocols like X.25 functions already supplied lower level protocol TP4 roughly equivalent TCP 180 f unctionality Since TCP already used supplying needed functionality TP0 needs used COTP connections initiated initiator sending TPDU type 0x0e Connect Request party responding Conne ct Confirm type 0x0d packet Data exchanged TPDUs type 0x0f Data ordered connection release done sending TPDU type 0x08 Disconnect disconnect response COTP TPDU Type code Connection request 0x0e Connec tion response 0x0d Data 0x0f Disconnect 0x08 The S7comm S7comm - plus protocols layered top COTP however unlike TCP IP one see directly COTP header protocol transported instead one look S7comm S7comm - plus header first byte tells type protocol used Figure 5 - 10 Figure 5 - 11 showing sample protocol version They needed later exercise S7 protocol Version code S7comm 0x32 S7comm - plus 0x72 180 For comparision COTP class functionality see https //en.wikipedia.org/wiki/OSI_model # Layer_4 _Tran sport_Layer Introduction Network Forensics FINAL | Version 1.0 | January 2019 111 Figure 5 - 10 S7comm PDU type 0x32 Figure 5 - 11 S7comm - plus PDU type 0x72 L et u The type S7plus packets inferred opcode wireshark filter terminology s7comm - plus.data.opcode The table gives view opcodes used exercise Introduction Network Forensics FINAL | Version 1.0 | January 2019 112 s7comm - plus.data.opcode Hex Mnemonic 0x31 Request 0x32 Response 0x33 Notification First notifications going PLC 10.3.5.12 workstation 10.3.5.12 Notification used inform SCADA application value set variables A sample packet shown These packets form bulk S7plus traffic captures The SCADA application `` subscribes '' set variables wants notified subscription identified '' Subscription Object Id '' s7comm - plus.notification.subscrobjectid A sample notification frame shown Frame 494 122 bytes wire 976 bits 122 bytes captured 976 bits interface 0 Ethernet II Src 28:63:36 ad:91:96 Dst f4:8e:38:9f:7c:74 Internet Protocol Version 4 Src 10.3.5.12 Dst 10.3.5.3 Transmission Control Protocol Src Port 102 Dst Port 52464 Seq 42600 Ack 21167 Len 68 TPKT Version 3 Length 68 ISO 8073/X.224 COTP Conne ction - Oriented Transport Protocol S7 Communication Plus Header Protocol version=V 3 Protocol Id 0x72 Protocol version V3 0x03 Data length 53 Integrity part Digest Length 32 Packet Digest dbf6f38588aded 43bfdc37245f084b8561ef494046aa7cb1 ... Data Notification Opcode Notification 0x33 Notification Data Set Subscription Object Id 0x70000c87 Unknown 2 0x0400 Unknown 3 0x0000 Unknown 4 0x0000 Notification Credit tickcount 201 Notification sequence number VLQ 1354 Unknown5 0x01 ValueList Terminating Item/List Unknown additional 3 bytes 1st Object ID > 0x70000000 0x000000 Data unknown 00 Trailer Protocol version=V3 Protocol Id 0x72 Protocol version V3 0x03 Data length 0 While one play around wireshark display filters like s7comm - plus.data.o pcode == 0x33 s7comm - plus.notification.subscrobjectid == 0x70000c87 s7comm - plus.notification.subscrobjectid == 0x7000c88 get overview values capture file easier use tshark UNIX sorting To find opcode value capture file uniq - c output first column number occurrences second column content line Introduction Network Forensics FINAL | Version 1.0 | January 2019 113 $ tshark - n - r normal.pcapng - Ys7comm - plus - Tfields - e s7comm - plus.data.opcode | sort - n | uniq - c 153 0x00000031 99 0x00000032 495 0x00000033 To find Subscription Object Ids capture file $ tshark - n - r normal.pcapng - Y 's7comm - plus.data.opcode == 0x33 ' - Tfields - e s7comm - plus.notification.subscrobjectid | sort - n | uniq - c 165 0x70000c87 330 0 x70000c88 The Subscription Id change S7plus session captures although variables subscribed may Unfortunately ca n't inferred capture variables exactly meant identified function subfield $ tshark - n - r normal.pcapng - Y 's7comm - plus.data.opcode == 0x31 ' - Tfields - e s7comm - plus.data.function | sort - n | uniq - c 54 0x000004f2 99 0x0000054c $ tshark - n - r button_push.pcapng - Y 's7comm - plus.data.opcode == 0x31 ' - Tfields - e s7comm - plus.data.function | sort - n | uniq - c 51 0x000004f2 9 0x00000542 94 0x0000054c So thre e functions SetVariable 0x04f2 GetMultiVariables 0x054c used normal operation SetMultiVariables 0x0542 used button pushed SCADA application Responses answers Requests obviously almost dentical structure Responses function type request answering capture files two different functions seen $ tshark - n - r normal.pcapng - Y 's7comm - plus.data.opcode == 0x32 ' - Tfields - e s7comm - plus.data.f unction | sort - n | uniq - c 99 0x0000054c $ tshark - n - r button_push.pcapng - Y 's7comm - plus.data.opcode == 0x32 ' - Tfields - e s7comm - plus.data.function | sort - n | uniq - c 9 0x00000542 94 0x0000054c Note number Responses equ al corresponding Requests It seems '' SetVariables '' request trigger response The following table gives overview functions used exercise Introduction Network Forensics FINAL | Version 1.0 | January 2019 114 Hex Function 0x04bb Explore 0x04ca CreateObject 0x04d4 DeleteObject 0 x04f2 SetVariable 0x0524 GetLink 0x0542 SetMultiVariables 0x054c GetMultiVariables 0x0556 BeginSequence 0x0560 EndSequence 0x056b Invoke Teachers When confronted capture file unknown properties structured analysis approach aken In exercise approach leaning Bejtlich 2005 taken one starts basic statistics trace file works OSI protocol layers upwards Multicast IP - addresses private 239.0.0.0/8 global 224.0.0.0/8 mapped MAC multicast addresses vendor part set 01:00:5e 24 th bit set 0 last 23 bits taken last 23 bits multicast IP - address case someone asking Unfortunately inferred packet captures initiating connections initial TCP packets SYN flag set COTP type 0x0f TPDUs contained capture files Later attack traffic show connection setup packets information solution also meant help prepare coming subtasks Besides IP traffic significant OSI layer 2 traffic students may ask Detail knowledge protocols needed solution exercise time scarce students may ignore packets In general however investigators never underestimate information OSI layer 2 protocols IP ARP Address Resolution Protocol When sending IP - packets local network sender know MAC i.e Ethernet address destinations IP - address The sending system - - address LLDP 181 Link Local Discovery Protocol used devices Ethernet advertise presence capabilities It great source information baselining penetration tests students see switch PLCs advertising presence packet capture P ROFINET Pro cess Fi eld Net another industry standard data communication SCADA environments also used However plays role exercise ignored Task 3 \ Initial attack detection During first stage attack intruder first gets onto SCADA network The students two tasks first analyse network behaviour initial attack stage review perhaps adapt monitoring policies depending whether notic ed attack Initial break - 181 LLDP officially known IEEE 802.1AB http //standards.ieee.org/getieee802/download/802.1AB - 2009.pdf Introduction Network Forensics FINAL | Version 1.0 | January 2019 115 An employee opens office document embedded macros engineering workstation After successful infection workstation tries connect C & C server via TCP network activity Since network separated connection established malware activates auto exploitation mode 5.1.6.1 Subtask Analyse attack engineering workstation Students Given packet capture file attack1.pcapng analyse traffic Answer following questi ons Do see attack ? If yes see ? What made suspicious ? Solution 1 No real attack network capture unsuccessful communication attempts may noticed The unsuccessful attempts download pictures interne TCP traffic 23.95.230.107 port 80 i.e HTTP The unsuccessful attempts contact command control server unknown protocol UDP traffic 234.5.6.7 port 8910 Both communications seen noting IP - addresses part net 10.3.5.0/24 protocols deviating traffic patterns normal.pcapng button_push.pcapng PROFINET S7 With structured anal ysis one would start overview protocols used like previous task Starting simple overview communication endpoints $ tshark - n - r attack1.pcapng - q - z endpoints ip ========================================================= ======================= IPv4 Endpoints Filter < No Filter > | Packets | | Bytes | | Tx Packets | | Tx Bytes | | Rx Packets | | Rx Bytes | 10.3.5.3 268 49559 124 36109 144 13450 10.3.5.12 240 21263 144 13450 96 7813 234.5.6.7 21 27722 0 0 21 27722 10.3.5.5 9 658 9 658 0 0 10.3.5.255 5 410 0 0 5 410 23.95.230.107 5 330 0 0 5 330 10.3.5.1 5 300 5 300 0 0 239.255.255.100 5 300 0 0 5 300 255.255.255.255 4 328 0 0 4 328 10.255.255.255 2 164 0 0 2 164 Both IP - addresses network 10.3.5.0/24 clearly stand But talking ? This answered conversations statistic time output limited Introduction Network Forensics FINAL | Version 1.0 | January 2019 116 suspicious IP - addresses done filter added conv selector filter 234.5.6.7 yield em pty list TCP $ tshark - n - r attack1.pcapng - q - z conv tcp ip.addr==23.95.230.107 ================================================================================ TCP Conversations Filter ip.addr==23.95.230.10 | < - | | - > | | Total |Relative |Duration | | Frames Bytes | | Frames Bytes | | Frames Bytes | Start | | 10.3.5.5:1232 < - > 23.95.230.107:80 0 0 1 66 1 66 13,031208000 0,0000 10.3.5.5:1233 < - > 23.95.230.107:80 0 0 1 66 1 66 18,337056000 0,0000 10.3.5.5:1234 < - > 23.95.230.107:80 0 0 1 66 1 66 23,656130 000 0,0000 10.3.5.5:1235 < - > 23.95.230.107:80 0 0 1 66 1 66 28,975215000 0,0000 10.3.5.5:1236 < - > 23.95.230.107:80 0 0 1 66 1 66 34,294342000 0,0000 As seen port 80 protocol used HTTP And one frame sent must initial SYN packet TCP connection As network connection outside answer received Figure 5 - 12 Figure 5 - 12 Malware HTTP connection attempts The done UDP communications empty filtering 23.95.230.107 $ tshark - n - r attack1.pcapng - q - z conv udp ip.addr==234 5.6.7 ================================================================================ Introduction Network Forensics FINAL | Version 1.0 | January 2019 117 UDP Conversations Filter ip.addr==234.5.6.7 | < - | | - > | | Total | Relative | Duration | | Frames Bytes | | Frames Bytes | | Frames Bytes| Start | | 10.3.5.3:60070 < - > 234.5.6.7:8910 0 0 6 6030 6 6030 7,825592000 20,1028 And S7plus traffic ? Let u lo ok opcodes $ tshark - n - r attack1.pcapng - q - z conv tcp tcp.port==102 ================================================================================ TCP Conversations Filter tcp.port==102 | < - | | - > | | Total | Relative | Duration | | Frames Bytes | | Frames Bytes | | Frames Bytes | Start | | 10.3.5.3:54043 < - > 10.3.5.12:102 140 13210 92 7573 232 20783 0,000000000 41,4049 10.3.5.3:54045 < - > 10.3.5.12:102 2 120 2 120 4 240 18,796773000 0,2014 10.3.5.3:54044 < - > 10.3.5.12:102 2 120 2 120 4 240 24,395835000 0,2003 Noth ing order far looking opcodes $ tshark - n - r attack1.pcapng - Y s7comm - plus - T fields - e s7comm - plus.data.opcode | sort - n | uniq - c 19 0x00000031 12 0x00000032 62 0x00000033 Everything seems normal 2 Wi th monitoring policy looks anything deviates laid rules unsuccessful communication attempts suspicious per definition 3 At least communication attempt IP - addresses workstations PLCs raise suspicion well use communication protocol TCP port 102 Teachers The students notice abnormal behaviour engineering workstation While initial TCP SYN packets contact HTTP server nothing said URL contacted server transmitted TCP handshake The UDP communication containing much data could yield information however data hand cann ot decoded see Figure 5 - 13 Introduction Network Forensics FINAL | Version 1.0 | January 2019 118 Figure 5 - 13 Malware UDP communication 5.1.6.2 Task Review monitoring policy Students Try answer following q uestions Would monitoring policy notice intruder activity ? All ? Which one would miss ? Solution The answer question depends policy students developed section 5.1.4.4 When sample policies key points used repeated Only workstations shall communicate PLCs Communication shall limited port 102/tcp S7plus protocols The question except PLCs workstations communicate left open If communicate communication limited port 5900/tcp VNC Engineering workstation SCDA workstation The HTTP UDP connections clearly detected destination IP - addresses neither PLCs one workstations They also easily detected protocol HTTP using port 80/tcp UDP port 8190 whitelisted policy When using sample policy given solutions section 5.1.4.4 port scan VNC password brute force would noticed involve connection engineering SCADA workstation 10.3.5.5 10.3.5.12 port 5900/tcp whitelisted policy Also S7scan discovered plain S7comm uses different protocol version 0x32 S7plus 0x72 Teachers The students learn analysis intrusion answer forensic indicators compromise IOCs help catch future intrusions similar kind This use ongoing attacks steps hav e documented refined well coordinating teams Task 4 Second attack stage analysis Typical attacks nowadays get direct access critical systems Usually attackers compromise less secured system move systems exploiting internal trust relationships Introduction Network Forensics FINAL | Version 1.0 | January 2019 119 5.1.7.1 Lateral movement Since malware connect C & C 182 server activates fall - back mode offline operation In mode malware scans local network tries attack w hatever targets finds The malware discovers SCADA workstation two Siemens PLCs subnet engineering workstation As part scanning open VNC port SCADA workstation discovered The VNC username passwords brute - forced malware successfully logs SCADA workstation VNC network activity stops industrial process SCADA panel emergency shutdown 5.1.7.2 Subtask Analyse lateral movement Students Given packet ca ptures attack2.pcapng attack3.pcapng attack4.pcapng analyse attack Describe classify activities ? Who ? Assess damage done end attack i.e three packet captures Solution Three activities noticed 1 In attack1.pcapng engineering workstation scanning/probing network This typical scan like one outlined section 3.2.2 2 In attack2.pcapng engineering workstation specifically scanning S7 enabled systems i.e PLCs 3. attack3.pcapng contains VNC attack SCADA workstation consists brute - force attempt password The port scan easily seen conversations overview $ tshark - n - r attack2.pcapng - q - z conv ip ==================== ============================================================ IPv4 Conversations Filter < No Filter > | < - | | - > | | Total | Relative | Duration | | Frames Bytes | | Frames Bytes | | Frames Bytes | Start | | 10.3.5.3 < - > 10.3.5.5 195 11700 15 900 210 12600 4,345429000 10,4537 10.3.5.5 < - > 10.3.5.11 100 6000 100 6000 200 12 000 4,345564000 0,1676 10.3.5.5 < - > 10.3.5.12 100 6000 100 6000 200 12000 4,345761000 0,1684 10.3.5.3 < - > 10.3.5.12 79 7416 55 4501 134 11917 0,000000000 21,4088 10 3.5.1 < - > 10.3.5.5 0 0 12 744 12 744 4,697235000 16,0501 10.3.5.1 < - > 239.255.255.100 0 0 5 300 5 300 19,782942000 0,0015 10.3.5.3 < - > 255.255.255.255 0 0 3 246 3 246 20,666588000 0,0000 182 Command Control Introduction Network Forensics FINAL | Version 1.0 | January 2019 120 $ tshark - n - r attack2.pcapng - q - z conv tcp ================================================================================ TCP Conversations Filter < No Filter > | < - | | - > | | Total | Relative | Duration | | Frames Bytes | | Frames Bytes | | Frames Bytes | Start | | 10.3.5.3:54043 < - > 10.3.5.12:102 75 7176 51 4261 126 11437 0,000000000 21,4088 10.3.5.5:59416 < - > 10.3.5.1:80 6 372 0 0 6 372 4,697235000 14,0504 10.3.5.5:59423 < - > 10.3.5.1:80 6 372 0 0 6 372 6,349966000 14,3973 10.3.5.5:59416 < - > 10.3.5.3:135 3 180 1 60 4 240 4,363587000 9,0002 10.3.5.5:59416 < - > 10.3.5.3:3389 3 180 1 60 4 240 4,377779000 8,9980 10.3.5.5:59416 < - > 10.3.5.3:445 3 180 1 60 4 240 5,562540000 8,9987 10.3.5.5:59416 < - > 10.3.5.3:5900 3 180 1 60 4 240 5,564956000 9,0004 10.3.5.5:59416 < - > 10 3.5.3:5800 3 180 1 60 4 240 5,798956000 9,0002 10.3.5.3:54045 < - > 10.3.5.12:102 2 120 2 120 4 240 10,998112000 0,0075 10.3.5.3:54044 < - > 10.3.5.12:102 2 120 2 120 4 240 15,597341000 0,2017 10.3.5.5:59416 < - > 10.3.5.11:443 1 60 1 60 2 120 4,345564000 0,0001 10.3.5.5:59416 < - > 10.3.5.12:443 1 60 1 60 2 120 4,345761000 0,0002 10.3.5.5:59416 < - > 10.3.5.11:8080 1 60 1 60 2 120 4,346828000 0,0001 10.3.5.5:59416 < - > 10.3.5.12:8080 1 60 1 60 2 120 4,347199000 0,0002 10.3.5 .5:59416 < - > 10.3.5.11:110 1 60 1 60 2 120 4,348204000 0,0001 10.3.5.5:59416 < - > 10.3.5.11:554 1 60 1 60 2 120 4,361129000 0,0002 10.3.5.5:59416 < - > 10.3.5.12:110 1 60 1 60 2 120 4,361533000 0,0001 10.3.5.5:59416 < - > 10.3.5.11:8888 1 60 1 60 2 120 4,362535000 0,0001 ... Lots ports n use But wait port scan IP - addresses network ? Why 4 IP - addresses network ? This answered look ARP requests wireshark see Figure 5 - 14 Introduction Network Forensics FINAL | Version 1.0 | January 2019 121 Figure 5 - 14 ARP responses From list unanswered ARP queries seen adversary really tries probe whole network In attack2.pcapng PLC scan seen selecting S7comm protocol s7co mm - plus $ tshark - n - r attack3.pcapng - Y 's7comm' communication Setup communication Function Request - > CPU functions - > Read SZL ID=0x0011 Index=0x0001 data Function Response - > CPU functions - > Read SZL ID=0x0011 Index=0x0000 Function Request - > CPU functions - > Read SZL ID=0x0011 Index=0x0001 250 13.058194 Function Response - > CPU functions - > Read SZL ID=0x0011 Index=0x0000 Function Request - > CPU funct ions - > Read SZL ID=0x001c Index=0x0001 Function Response - > CPU functions - > Read SZL ID=0x001c Index=0x0000 1242 102 ROSCTR Job Function Setup communication communication Fu nction Request - > CPU functions - > Read SZL ID=0x0011 Index=0x0001 Function Response - > CPU functions - > Read SZL ID=0x0011 Index=0x0000 330 19.876035 10 Function Request - > CPU functions - > Read SZL ID=0x0011 Index=0x0001 Function Response - > CPU functions - > Read SZL ID=0x0011 Index=0x0000 Function Request - > CPU functions - > Read SZL ID=0x001c Index=0x0001 Introduction Network Forensics FINAL | Version 1.0 | January 2019 122 2 ROSCTR Userdata Function Response - > CPU functions - > Read SZL ID=0x001c Index=0x0000 The scan conveys information similar obtained nmap '' s7 - info.nse '' script shown nmap - Pn - sT - p102 -- script s7 - info.nse 10.3 5.12 Starting Nmap 7.70 https //nmap.org 2018 - 06 - 08 13:53 Europa Zachodnia cz letni mass_dns warning Unable determine DNS servers Reverse DNS disabled Try using -- system - dns specify valid servers -- dns - servers Nmap scan r eport 10.3.5.12 Host 0.00s latency PORT STATE SERVICE 102/tcp open iso - tsap | s7 - info | Module 6ES7 511 - 1AK01 - 0AB0 | Basic Hardware 6ES7 511 - 1AK01 - 0AB0 | Version 2.0.1 | System Name S71500/ET200MP station_1 | Module Type P LC_1 | Serial Number S C - HDN715522016 | Plant Identification |_ Copyright Original Siemens Equipment Service Info Device specialized Nmap done 1 IP address 1 host scanned 1.11 seconds Here breakdown one answer packets Figure 5 - 15 Figure 5 - 15 S7comm packets Last attack4.pcapng VNC brute - force attempt passwords Introduction Network Forensics FINAL | Version 1.0 | January 2019 123 Six sessions seen packet capture start ing successively increasing source ports 1396 1397 1398 ... VNC authentication type used VNC challenge response process 183 The server sends authentication challenge random 16 - byte string The client sends authentication r esponse containing also 16 - byte string consisting DES encrypted challenge password encryption key The server responds authentication result packet The first four bytes encode integer value 1 means uthentication unsuccessful value 0 meaning authentication successful In case unsuccessful authentication server append string describing reason failure close connection However see n packet capture first five sessions server responds three authentication result packets first two containing code 1 failure one would expect The third however code 0 also str ing `` Authentication failed '' attached The sixth session different one authentication result packet time value 0 additional string attached see Figure 5 - 16 Also clien closing connection seen TCP packet coming next Figure 5 - 16 Successful VNC authentication It safely assumed adversary successfully guess password last session 183 https //tools.ietf.org/html/rfc6143 Introduction Network Forensics FINAL | Version 1.0 | January 2019 124 The port scan PLC scan damage except adversary gained information network systems The VNC brute - force attack give adversary login SCADA workstation However activity seen capture unclear whether already used compromise misuse SCADA workstation Teacher The first part analysing port scan pose significant problems students If need help h int section 3.2.2 could given Likewise PLC scan much problem given difference S7comm S7comm - plus mentioned several times Analysing password brute - force attempts requires deeper look packets note difference successful unsuccessful login 5.1.7.3 Subtask Review revise policy Students Solution Once recap initial policy Only workstations shall communicate PLCs Communication shall limited port 102/tcp S7plus protocols The question except PLCs workstations commun icate left open If communicate communication limited port 5900/tcp VNC Engineering workstation SCDA workstation When using first two points port scan VNC password brute fo rce would noticed involve connection engineering SCADA workstation 10.3.5.5 10.3.5.12 port 5900/tcp whitelisted policy Also S7 scan discovered plain S7comm uses different protocol rsion 0x32 S7plus 0x72 However VNC brute - force attack would noticed protocol included whitelist One fine point The policy specifies S7plus protocols note plural If taken S7comm S7c omm - plus S7 scan would noticed Taken narrowly S7comm - plus i.e protocol type 0x72 scan noticed For revision VNC brute - force discovered S7 scan As said latter e asily recognis ed protocol type policy clearly state type 0x72 i.e s7comm - plus connections meant The brute - force attempts need closer look protocol When looking closer packet capture fol lowing wireshark filter rules worked respect login packets length field wireshark windows frame IP packet length seen looking IP header Introduction Network Forensics FINAL | Version 1.0 | January 2019 125 A vnc.auth_result code 0 packet lengt h 44 i.e without trailing Authentication failure denotes successful login vnc.auth_result == 0 ip.len == 44 b A vnc.auth_result code 1 vnc_auth_result 0 packet length > 44 denotes login failure vnc.auth_result == 1 vnc.au th_result == 0 ip.len > 44 The vised policy would look something like Only workstations shall communicate PLCs Communication shall limited port 102/tcp S7plus type 0x72 protocol Only engineering workstation hall communicate SCADA workstation VNC port 5900 Multiple 3 one minute login failures monitored investigated Teacher While brute - forcing passwords recognis ed number failed login tempts catch Humans sometimes mistype passwords even repeatedly There simple number threshold The number time given seen example One solution look deeper patterns like gaps repeated attempts automated attack tools Another solution would use multi - factor authentication rely passwords Another solution would organisational one The NIDS operators would noting multiple failures manually intervene like asking user problem login Both approaches solve fundamental vulnerability r eusable passwords solution problem beyond scope exercise could probably role - played final discussion Task 5 Analysing attack PLCs The attack reached final goal harming/disabling indus trial process Since availability foremost importance SCADA systems avoiding attack shutting affected systems option This puts new challenges network administrators investigators Later pump disable time could changed back original operator using SCADA workstation 5.1.8.1 The pump disabling attack The first hing plant operators notice pump disabled Fortunately possible - enable find happened 5.1.8.2 Subtask Analyse attack Students Given packet captures attack5.pcapng analyse pump disabling attack Try answer following questions How attack carried ? How could attack spotted ? Solution The overview conversations shows four TCP connections one VNC three S7plus $ tshark - q - n - r attack5.pcapng - z conv tcp Introduction Network Forensics FINAL | Version 1.0 | January 2019 126 ============== ================================================================== TCP Conversations Filter < No Filter > | < - | | - > | | Total | Relative | Duration | | Fra mes Bytes | | Frames Bytes | | Frames Bytes | Start | | 10.3.5.3:5900 < - > 10.3.5.5:1404 430 25950 630 249236 1060 275186 6,622980000 20,6494 10.3.5.3:54238 < - > 10.3.5.12:102 113 10481 70 5726 183 16207 0,000000000 30,9946 10.3.5.3:54239 < - > 10.3.5.12:102 4 358 4 452 8 810 15,458449000 6,2378 10.3.5.3:54240 < - > 10.3.5.12:102 2 120 2 120 4 240 19,796503000 0,0149 The VNC session behaves differently like one last task More authentication result packets seen session see code 0 success little larger 60 bytes Figure 5 - 17 TightVNC authentication result responses The authentication type selected explain difference In previous task authentication type 2 VNC authentication type 16 TightVNC see Figure 5 - 17 $ tshark - n - r attack5.pcapng - Y 'frame.number { 115 116 } ' - Ovnc Frame 115 60 bytes wire 480 bits 60 bytes captured 480 bits interface 0 Ethernet II Src f4:8e:38:9f:7c:74 Dst 00:1b:1b f7:7c:4f Intern et Protocol Version 4 Src 10.3.5.3 Dst 10.3.5.5 Transmission Control Protocol Src Port 5900 Dst Port 1404 Seq 13 Ack 13 Len 3 Virtual Network Computing Number security types 2 Security type VNC 2 Security type Tight 16 Introduction Network Forensics FINAL | Version 1.0 | January 2019 127 Frame 116 60 bytes wire 480 bits 60 bytes captured 480 bits interface 0 Ethernet II Src 00:1b:1b f7:7c:4f Dst f4:8e:38:9f:7c:74 Internet Protocol Version 4 Src 10.3.5.5 Dst 10.3.5.3 Transmission Control Protocol Src Port 1404 Dst Por 5900 Seq 13 Ack 16 Len 1 Virtual Network Computing Security type selected Tight 16 When looking VNC connection movement button presses mouse seen `` client pointer event '' packets At two points mou se button 1 pressed In Frame 609 - 630 mouse moves x=965/y=125 x=985/y=99 The frames transmitted within half second speculating maybe drag operation Button 1 pressed Frame 1126 position x=518/y=26 1 seen Figure 5 - 19 Figure 5 - 18 Mouse button press VNC Now s7plus connections Looking opcodes nothing unusual see ms happen $ tshark - n - r attack5.pcapng - Y 's7comm - plus ' - Tfields - e s7comm - plus.data.opcode | sort - n | uniq - c 16 0x00000031 11 0x00000032 47 0x00000033 Looking functions used similarity button_push capture file seen $ tshark - n - r attack5.pcapng - Y 's7comm - plus ' - Tfields - e s7comm - plus.data.function| sort - n | uniq - c 47 5 0x000004f2 Introduction Network Forensics FINAL | Version 1.0 | January 2019 128 4 0x00000542 18 0x0000054c $ tshark - n - r button_push.pcapng - Y 's7comm - plus ' - Tfields - e s7comm - plus.d ata.function| sort - n | uniq - c 467 51 0x000004f2 18 0x00000542 188 0x0000054c wireshark terminology streams numbered starting 0 Stream 0 seems normal s7plus operation `` background '' say $ tshark - n - r attack5.pcapng - Y 'tcp.stream == 0 s7comm - plus ' - Tfields - e s7comm - plus.data.opcode| sort - n | uniq - c 14 0x00000031 9 0x00000032 47 0x00000033 $ tshark - n - r attack5.p capng - Y 'tcp.stream == 0 s7comm - plus ' - Tfields - e s7comm - plus.data.function| sort - n | uniq - c 47 5 0x000004f2 18 0x0000054c Stream 1 VNC connection stream S7plus empty regards operations $ tshark - n - r attack5.pcapng - Y 'tcp.stream == 3 s7comm - plus ' - Tfields - e s7comm - plus.data.function| sort - n | uniq - c $ tshark - n - r attack5.pcapng - Y 'tcp.stream == 3 s7comm - plus ' - Tfields - e s7comm - plus.data.opcode| sort - n | uniq - c So stream 2 interesting one since one contains SetMultiVariables 0x0542 operation $ tshark - n - r attack5.pcapng - Y 'tcp.stream == 2 s7comm - plus ' - Tfields - e s7comm - plus.data.function| sort - n | uniq - c 4 0x00000542 $ tshark - n - r attack5.pc apng - Y 'tcp.stream == 2 s7comm - plus ' - Tfields - e s7comm - plus.data.opcode| sort - n | uniq - c 2 0x00000031 2 0x00000032 Two request -- response pairs seen capture file look request side The first seems set variable `` false '' $ tshark - n - r attack5.pcapng - Y 's7comm - plus.data.opcode == 0x31 s7comm - plus.data.function == 0x0542 ' - Os7comm - plus Frame 952 165 bytes wire 1320 bits 165 bytes captured 1320 bits interface 0 Ethernet II Src f4:8e:38:9f:7c:74 Dst 28:63:36 ad:91:96 Internet Protocol Version 4 Src 10.3.5.3 Dst 10.3.5.12 Transmission Control Protocol Src Port 54239 Dst Port 102 Seq 1 Ack 1 Len 111 TPKT Version 3 Length 111 ISO 8073/X.224 COTP Connection - Orien ted Transport Protocol S7 Communication Plus Header Protocol version=V3 Protocol Id 0x72 Protocol version V3 0x03 Data length 96 Integrity part Digest Length 32 Packet Digest c35ed4e0619e3c1de9ec6694d 0f27cd1451dd9c45f7070d8 ... Introduction Network Forensics FINAL | Version 1.0 | January 2019 129 Data Request SetMultiVariables Opcode Request 0x31 Reserved 0x0000 Function SetMultiVariables 0x0542 Reserved 0x0000 Sequence number 7 Session Id 0x000003ba T ransport flags 0x34 Bit2 - AlwaysSet ? Bit4 - AlwaysSet ? Bit5 - AlwaysSet ? ... ... 0 = Bit0 False ... ..0 = Bit1 - SometimesSet ? False ... .1.. = Bit2 - AlwaysSet ? True ... 0 ... = Bit3 False ... 1 ... = Bit4 - AlwaysSet ? True ..1 ... = Bit5 - AlwaysSet ? True .0.. ... = Bit6 - NoResponseExpected ? False 0 ... ... = Bit7 False Request Set Unknown 0x00000000 Item Count 1 Number fields complete Item - Dataset 5 AddressList Item Address 1 82 SYM - CRC=df6ac14c 3736 LID=9 Symbol CRC 0xdf6ac14c Access base - area Unknown 82 Number following IDs 2 Access sub - area Unknown 3736 LID Value 9 ValueList Item Value 1 Bool = False Item Number 1 Datatype flags 0x0 0 ... 0 ... = Array False ..0 ... = Addressarray False .0.. ... = Sparsearray False 0 ... ... = Unknown - Flag1 False Datatype Bool 0 x01 Value False Data unknown 000000 ... The second variable `` true '' Frame 1129 165 bytes wire 1320 bits 165 bytes captured 1320 bits interface 0 Ethernet II Src f4:8e:38:9f:7c:74 Dst 28:63:36 ad:91:96 I nternet Protocol Version 4 Src 10.3.5.3 Dst 10.3.5.12 Transmission Control Protocol Src Port 54239 Dst Port 102 Seq 119 Ack 66 Len 111 TPKT Version 3 Length 111 ISO 8073/X.224 COTP Connection - Oriented Transport Protocol 2 COTP Segments 104 bytes # 954 0 # 1129 104 S7 Communication Plus Header Protocol version=V3 Protocol Id 0x72 Protocol version V3 0x03 Data length 96 Integrity part Digest Length 32 Packet Digest ced5b77ab7ea091 9e7c4a5094206bf0f3547e088f06c674f ... Data Request SetMultiVariables Opcode Request 0x31 Reserved 0x0000 Function SetMultiVariables 0x0542 Reserved 0x0000 Sequence number 8 Session Id 0x000003ba Transport flags 0x34 Bit2 - AlwaysSet ? Bit4 - AlwaysSet ? Bit5 - AlwaysSet ? ... ... 0 = Bit0 False ... ..0 = Bit1 - SometimesSet ? False ... .1.. = Bit2 - AlwaysSet ? True Introduction Network Forensics FINAL | Version 1.0 | January 2019 130 ... 0 ... = Bit3 False ... 1 ... = Bit4 - AlwaysSet ? True ..1 ... = Bit5 - AlwaysSet ? True .0.. ... = Bit6 - NoResponseExpected ? False 0 ... ... = Bit7 False Request Set Unknown 0x00000000 Item Count 1 Number fields complete Item - Dataset 5 AddressList Item Address 1 82 SYM - CRC=fc4ae127 3736 LID=10 Symbol CRC 0xfc4ae127 Access base - area Unknown 82 Number following IDs 2 Access sub - area Unknown 3736 LID Value 10 ValueList Item Value 1 Bool = True Item Number 1 Datatype flags 0x00 ... 0 ... = Array False ..0 ... = Addressarray False .0.. ... = Sparsearray False 0 ... ... = Unknown - Flag1 False Dataty pe Bool 0x01 Value True Data unknown 000000 ... Now time combine parts see second SetMultiVariables request comes immediately mouse button press event VNC session Figure 5 - 19 Figure 5 - 19 Mouse button press SetMultiVariable request So answer The attack two - staged The first stage VNC connecti engineering workstation SCADA workstation probably using guessed password The second stage S7plus setting variable likely control pump Although packet capture one infer adversary used SCADA application disable pump GUI About spotting attack The unusual authentication type TightVNC gives away initial VNC connection started attack Adversaries could improve using authen tication type regular connection would longer look suspicious Introduction Network Forensics FINAL | Version 1.0 | January 2019 131 The button push coming SCADA application would noticed nothing differentiates normal traffic The combination VNC connecti unusual event like pump shutdown would likely raise suspicion SCADA operator would normally use remote connection sit front workstation Also would known attack already taken place f orensic investigation would begin Teacher The students familiar basic procedure analysing attack network captures The point task show importance continuing systematic analysis - depth knowledge protocols environment used needed spot attacks spotting reprogramming PCLs network traffic captures 5.1.8.3 The PLC reprogramming attack The infected engineering workstation used reprog ram one PLCs downloading running program PLC modifying - uploading changed program PLC The new program changes industrial process makes impossible changed back original operator usin g SCADA workstation 5.1.8.4 Subtask Analyse last attack stage Students Given packet capture attack6.pcapng analyse last attack stage Try answer following questions Where attack originate ? Try c orrelate network activity known attack see 5.1.8.3 Where problems regards correlation ? Solution This time direct involvement compromised engineering workstation se veral connections port 102 one PLCs 10.3.5.3.12 seen $ tshark - q - n - r attack6.pcapng - z conv tcp ================================================================================ TCP Conversations Filter < No Filter > | < - | | - > | | Total | Relative | Duration | | Frames Bytes | | Frames Bytes | | Frames Bytes | Start | | 10.3.5.3:54238 < - > 10.3.5.12:102 977 9100 9 623 51839 1600 142848 0,478472000 279,2012 10.3.5.5:1414 < - > 10.3.5.12:102 423 45991 297 25311 720 71302 113,727670000 111,8493 10.3.5.5:1416 < - > 10.3.5.12:102 150 113624 132 9816 282 123 440 126,533451000 11,1994 10.3.5.5:1415 < - > 10.3.5.12:102 82 6733 66 6561 148 13294 115,693498000 109,7862 10.3.5.5:1417 < - > 10.3.5.12:102 52 8500 59 12330 111 20830 212,373235000 6,6389 10.3 .5.3:54239 < - > 10.3.5.12:102 53 4244 53 5072 106 9316 5,104313000 274,5798 10.3.5.3:54240 < - > 10.3.5.12:102 21 1321 21 1350 42 2671 22,401286000 257,2871 When looking number frames number times IP - address shows TCP stream collate stream numbers W ireshark conversations $ tshark - n - r attack6.pcapng - Y 'tcp.stream == 0 ' - Tfields - e ip.addr | sort - n | uniq - c 623 10.3.5.3,10.3.5.12 Introduction Network Forensics FINAL | Version 1.0 | January 2019 132 977 10.3.5 .12,10.3.5.3 $ tshark - n - r attack6.pcapng - Y 'tcp.stream == 1 ' - Tfields - e ip.addr | sort - n | uniq - c 53 10.3.5.3,10.3.5.12 53 10.3.5.12,10.3.5.3 $ tshark - n - r attack6.pcapng - Y 'tcp.stream == 2 ' - Tfields - e ip.addr | sort - n | uniq - c 21 1 0.3.5.3,10.3.5.12 21 10.3.5.12,10.3.5.3 $ tshark - n - r attack6.pcapng - Y 'tcp.stream == 3 ' - Tfields - e ip.addr | sort - n | uniq - c 297 10.3.5.5,10.3.5.12 423 10.3.5.12,10.3.5.5 $ tshark - n - r attack6.pcapng - Y 'tcp.stream == 4 ' - Tfields - e ip.ad dr | sort - n | uniq - c 66 10.3.5.5,10.3.5.12 82 10.3.5.12,10.3.5.5 $ tshark - n - r attack6.pcapng - Y 'tcp.stream == 5 ' - Tfields - e ip.addr | sort - n | uniq - c 132 10.3.5.5,10.3.5.12 150 10.3.5.12,10.3.5.5 $ tshark - n - r attack6.pcapng - Y 'tc p.stream == 6 ' - Tfields - e ip.addr | sort - n | uniq - c 59 10.3.5.5,10.3.5.12 52 10.3.5.12,10.3.5.5 And seems like malware trying contact C & C server note communication port 8910 As comes late packet capture looks like trying report success guess $ tshark - q - n - r attack6.pcapng - z conv udp ================================================================================ UDP Conversations Filter < No Filter > | < - | | - > | | Total | Relative | Duration| | Frames Bytes | | Frames Bytes | | Frames Bytes | Start | | 10.3.5.3:51487 < - > 255.255.255.255:1947 0 0 16 1312 16 1312 11,556976 269,0279 10.3.5.3:51487 < - > 10.3.5.255:1947 0 0 16 1312 16 1312 15,562995 269,0664 10.3.5.5:49152 < - > 255.255.255.255:1947 0 0 14 1148 14 1148 25,246807 232,5779 10.3.5.5:49152 < - > 10.255.255.255:1947 0 0 14 1148 14 1148 29,253409 232,5809 10.3.5.3:60070 < - > 234.5.6.7:8910 0 0 11 5576 11 5576 279,618206 1,4743 ... Going back TCP streams going number frames examine streams SCADA workstation 10.3.5.3 10.3.5.12 $ tshark - n - r attack6.pcapng - Y 'tcp.stream == 0 s7comm - plus ' - Tfields - e s7comm - plus.data.opcode | sort - n | uniq - c 133 0x00000031 89 0x00000032 400 0x00000033 tshark - n - r attack6.pcapng - Y 'tcp.stream == 0 s7comm - plus ' - Tfields - e s7comm - plus.data.function | sort - n | uniq - c 400 6 0x000004d4 48 0x000004f2 1 68 0x0000054c So judging IP - addresses opcodes functions seems normal background S7plus activity except DeleteObject 0x04d4 operations They seem happen towards end stream frame 5680 frame 552 4 5534 5674 see Figure 5 - 20 Introduction Network Forensics FINAL | Version 1.0 | January 2019 133 Figure 5 - 20 S7comm - plus DeleteObject requests responses The two streams seem try delete obje cts inferring function codes S tream 1 opcodes 18 0x00000031 18 0x00000032 Stream 1 functions 2 0x000004d4 34 0x00000542 Stream 2 opcodes 1 0x00000031 1 0x00000032 Stream 1 functions 2 0x000004d 4 There four TCP connections engineering workstation PLCs breakdown opcodes functions used Stream 3 opcodes 69 0x00000031 69 0x00000032 125 0x00000033 functions 18 0x000004bb 10 0x0 00004ca 10 0x000004d4 8 0x000004f2 4 0x00000524 6 0x00000542 24 0x0000054c 2 0x0000056b 56 0x00000586 Introduction Network Forensics FINAL | Version 1.0 | January 2019 134 Stream 4 opcodes 19 0x00000031 19 0x00000032 functions 8 0x000004ca 8 0x000004d4 8 0x000004f2 4 0x00000524 2 0x00000542 8 0x00000586 Stream 5 opcodes 13 0x00000031 13 0x00000032 functions 12 0x000004bb 2 0x000004ca 2 0x000004d4 2 0x000004f2 2 0x00000542 6 0 x00000586 Stream 6 opcodes 24 0x00000031 24 0x00000032 functions 12 0x000004bb 14 0x000004ca 2 0x000004d4 4 0x000004f2 2 0x00000542 2 0x00000556 2 0x00000560 10 0x00000586 As seen previously unseen functions composition also unseen While functions like SetVariable DeleteObject less self - explanatory functions like Invoke 0x056b GetVarSubStreamed 0x0586 Without - depth knowledge PLC operation internal memory layout one hope make sense Even looking request packets information gained help resolving incident There still IP - address th e unusual functions used S7plus connections enough flag suspicious activity however without prior knowledge something malicious happened would impossible infer happened malicious packet c ontent Teacher The exercise ending partial failure come sort shock students While outcome intentional need consoling explanation First students hold rather well kept 5 6 n bad Second uncommon real - world situations Dealing complex proprietary protocol investigations sometimes discontinued one simply reaching limits good case f open protocols Keep mind simple example Real - world operations several orders magnitude complex even day - - day operations Devising basic NIDS rules scenarios daunting impossible task The students first impression Introduction Network Forensics FINAL | Version 1.0 | January 2019 135 It may ease frustration students advance warning may hard solve subtask failure almost certain Su mmary exercise Students The final part incident handling post - incident phase Part phase typically recommendati ons i.e worked well kept needs improvement These split short long - term recommendations The report include short timeline events Explain finding What leads used l eads obtained lead conclusion Teacher This done two parts - - play post - incident analysis attack stages exercise This part best played discussion students group presents part findings defends students task putting questions viability findings That means students must gather findings bring chronological order The second part wrap - exercise whole The teacher start short wrap - exercise 5.1.9.1 Conclusions/recommendations - open discussion students teacher general course exercise lessons learned room improvement Which task students find difficult ? The students encouraged excha nge opinions ask questions give feedback exercise 5.1.9.2 Questions Questions help students memorize exercise content verify whether understood course 1 What forensics ? 2 What difference An omaly Policy monitoring ? 3 What PROFINET S7 plus ? 4 What allowed break SCADA workstation ? 5 During stage Engineering workstation compromised 6 When PLC compromised ? How ? Tools used use - case Tool Homepage shark https //www.wireshark.org/ wireshark https //www.wireshark.org/ Evaluation metrics How setup network security monitoring SCADA network Introduction Network Forensics FINAL | Version 1.0 | January 2019 136 Select monitoring points Develop monitoring policy Baseline regular network traffic How recog nise S7comm S7comm - plus traffic How detect attempts contact command control servers How detect lateral movement Scanning SCADA networks PLCs Password guessing attacks VNC How detect attacks PLCs Further reading ENISA Repor Protecting Industrial Control Systems Recommendations Europe Member States https //www.enisa.europa.eu/publications/protecting - industrial - control - systems - recommendations - - europe - - member - states ENISA Report Analysis ICS - SCADA Cyber S ecurity Maturity Levels Critical Sectors https //www.enisa.europa.eu/publications/maturity - levels ENISA Report Certification Cyber Security skills ICS/SCADA professionals https //www.enisa.europa.eu/publications/certification - - cyber - security - skills - - ics - scada - professionals ENISA Report Good Practices EU ICS Testing Coordination Capability https //www.enisa.europa.eu/publications/good - practices - - - eu - ics - testing - coordination - capability ENISA Report blem SCADA systems ? https //www.enisa.europa.eu/publications/window - - exposure - - real - problem - - scada - systems ENISA Report Can learn SCADA security incidents ? https //www.enisa.europa.eu/publications/can - - learn - - scada - security - incidents Introduction Network Forensics FINAL | Version 1.0 | January 2019 137 Detecting exfiltration large finance corporation environment Summary One threats IT security teams facing almost every corpo ration environment risk internal data stolen exfiltrated third party servers This might lead many legal problems huge fines loss reputation disclosing company secrets strategic documents Typically data exfiltration ca n done using various approaches techniques From attacker point view important evade detection long possible Thus attacker must balance exfiltration speed using often slower concealed techniques T section consists two parts covering two different approaches data exfiltration In first part students learn use web proxy logs security systems detect exfiltration HTTP channel In part students lea rn How install configure web proxy TLS/SSL traffic interception capability How use Malware Information Sharing Platform MISP aid analysis How perform web proxy logs analysis The econd part covers slightly concealed les common approach data exfiltration using DNS protocol exfiltrated data encoded among DNS queries In part students learn How perform basic statistical analysis How search anomalous DNS queries often huge DNS log files Summary Table PARAMETER DESCRIPTION DURATION Main Objective Participants set lab environment consisting two virtual machines For first part exercise basic VM images preloaded files provided The installation configuration process include compiling software source generating TLS/SSL certificate files setting Certificate Authority configuring web browser recognis e proxy server CA configuring proxy log analysis tool - SARG The sec ond part exercise begin participants receiving firewall log After analysis comparing results MISP database proxy server logs checked four infected hosts exfiltrated database filenames text storage Introduction Network Forensics FINAL | Version 1.0 | January 2019 138 PARAMETER DESCRIPTION DURATION site ad dress new malicious Command & Control server address At DNS part participants learn analyse provided BIND logs using popular Linux tools simple scripts look evidence exfiltration another technique Targeted A udience The exercise dedicated less - experienced CSIRT staff involved network forensics The exercise expected also value experienced CSIRT team members involved daily incident response Total Duration 6.0 hours Time S chedule Introduction exercise tools overview 1 hour Setting environment 2 hours Log analysis 3 hours Introduction DNS protocol 1 hour BIND log analysis 1 hour Frequency It advised organise exercise new team mem bers join CERT/CSIRT Introduction training The Virtual Images exercise downloaded http //www.enisa.europa.eu/ftp/ENISA_INF_Squid_Server_5 2 .ova http //www.enisa.europa.eu/ftp/ENISA_INF_Squid_Client_5.2.ova Squid_server console nec essary tools installed Apache server running preinstalled MISP version 2.4.93 Squid Analysis Report Generator SARG VM Internet connectivity NAT network interface enp0s3 access internal network enp0s8 interface Squid_client virtual machine lightweight XFCE desktop environment single internal network interface Internet connectivity done Squid_server gateway acting also proxy server Introduction Network Forensics FINAL | Version 1.0 | January 2019 139 Figure 5 - 21 Exercise virtual network diagram Both VMs running Linux Debian 9 distributions preconfigured communicate internal network interfaces Login details machines user root passwo rd squid user squid password squid It advised log Squid server SSH local machine rather using VMs terminal Introduction proxy server Web proxying caching become increasingly popular recent years While nitially introduced mainly speeding network performance caching files accessed many users content filtering blocking inappropriate suspicious websites days evolved tool used forensi c investigat ions Proxy servers provide history web browsing entire organisation store copies web page limited time may also ecrypt h ttps traffic While features extremely helpful business envi ronment also need considered ethical perspective Https designed give users sense privacy security Decrypting traffic without prior notice user consent might considered violation ethical norms ille gal juri sdictions L iabilit would need clearly understood one decide implement solutions In part exercise open - source web proxy software Squid 184 installed configured From forensic investigat Squid proxy server data Configuration provides information data available analysis Logfiles Squid many logfiles used record web brow sing history connection times error messages stored objects information client browsers Cache web objects stored limited time 184 Squid - cache.org n.d. http //ww w.squid - cache.org Introduction Network Forensics FINAL | Version 1.0 | January 2019 140 Squid customizable wide range options granularly adjusted individual nee ds The details capabilities beyond scope training available official Squid website In exercise focusing features essential forensic investigator Setup 5.2.5.1 Compiling Squid source Squi installed software repositories however access advanced options like intercepting SSL/TLS traffic compiled source Latest officially supported version available document created w Squid version 3.5.27 preloaded Squid Server VM Login squid server using credentials user squid password squid Navigate squid source directory cd squid - 3.5.27 Configure source using ./configure -- enable - sl - crtd -- - openssl After configuration complete install software sudo make & & sudo make install And change directory ownership sudo chown squid squid - R /usr/local/squid 5.2.5.2 SSL/TLS Intercepting proxy It possible inspect conten TLS/SSL encrypted traffic using proxy When client wants connect https site proxy TLS/SSL requests duplicated proxy forwarded requested server separate encrypted tunnel proxy reques ted server At time proxy generates new certificate impersonates requested server setting tunnel proxy client This allows proxy inspect encrypted traffic For succeed Authority CA list This achievable centrally managed IT environment Figure 5 - 22 SSL intercepting proxy Introduction Network Forensics FINAL | Version 1.0 | January 2019 141 It worth mention - - - legal questions Legal advice sought implementing configuration users clearly notified activity monitored 185 Creating certificate Folder storing certificates needs created mkdir /usr/local/squid/ssl_cert cd /usr/local/squid/ssl_cert certificate creation openssl req - new - newkey rsa:4096 - sha256 - days 365 - nodes - x509 - extensions v3_ca - keyout squid.pem - squid.pem Command prompt appear asking detailed information These left blank Figure 5 - 23 G enerating SSL/TLS certificate Certificate file also needs created It l ater used client machine openssl x509 - squid.pem - outform DER - squid.der Now /usr/local/squid/etc/squid.conf needs adjusted Either Nano Vim text editors used Line 59 needs commented n 185 Squid - cache.org 2018 https //wiki.squid - cache.org/ConfigExamples/Intercept/SslBumpExplicit Introduction Network Forensics FINAL | Version 1.0 | January 2019 142 # http_port 3128 And following lines need added end file http_port 0.0.0.0:3128 ssl - bump cert=/usr/local/squid/ssl_cert/squid.pem generate - host - certificates=on dynamic_cert_mem_cache_size=4MB sslcrtd_program /usr/local/squid/lib exec/ssl_crtd - /var/lib/ssl_db - M 4MB acl step1 at_step SslBump1 acl exceptions ssl :server_name .10.1.1.1 ssl_bump splice exceptions ssl_bump peek step1 ssl_bump bump Figure 5 - 24 squid.conf file La st step creating initializing TLS certificates cache directory sudo /usr/local/squid/libexec/ssl_crtd - c - /var/lib/ssl_db - M 4MB And changing ownership avoid access errors sudo chown squid squid /var/lib/ssl_db 5.2.5.3 SSL/TLS intercepting vs non - intercepting proxy The creenshot show example difference amount available information proxy allowed intercept TLS traffic vs In cases user accessed search engine searched Figure 5 - 25 P roxy logs SSL/TLS inspection Introduction Network Forensics FINAL | Version 1.0 | January 2019 143 Figure 5 - 26 E xcerpt log file ctivity TLS/SSL inspection enabled 5.2.5.4 Launch Squid Squid software launched issuing command /usr/local/squid/sbin/squid To check squid running default port 3128 netstat - plnt Figure 5 - 27 Netstat showing Squid proxy listening port 3128 At point access.log file preview launched show log populated client machine configured tail - f /usr/local/squid/var/logs/access.log 5.2.5.5 Client conf iguration Previously generated CA file needs imported client browser After launching Squid_client VM logging using squid squid credentials certificate file downloaded Squid server issuing following co mmand scp squid @ 10.1.1.1 /usr/local/squid/ssl_cert/squid.der ~ And authenticating squid credentials Configuring web browser example Mozilla Firefox used shortcut browser placed Desk op After pressing alt navigating Edit = > Preferences Firefox general settings tab open In Privacy Security section bottom Certificates section Introduction Network Forensics FINAL | Version 1.0 | January 2019 144 Figure 5 - 28 Firefox privacy security ettings The View Certificates option open new window Authorities tab CA root certificate imported Introduction Network Forensics FINAL | Version 1.0 | January 2019 145 Figure 5 - 29 Firefox importing CA file After clicking Import button squid.der file needs selected Figure 5 - 30 Selecting CA root file Clicking OK result another window popping asking scope certificate trust For purpose exercise identifying websites sufficient Introduction Network Forensics FINAL | Version 1.0 | January 2019 146 Figure 5 - 31 CA trust scope OK button import root CA Now proxy server address needs configured At bottom General tab proxy section Figure 5 - 32 Firefox proxy settings In Settings = > Manual proxy server IP Address 10.1.1.1 port 3128 need provided Also use proxy server protocols option n eeds selected Introduction Network Forensics FINAL | Version 1.0 | January 2019 147 Figure 5 - 33 P roxy setting Firefox After clicking OK user start browsing web As addresses typed server exhibiting activity ex ecuting tail - f command showing log file populated data 5.2.5.6 Access.log file one useful Squid log files The file stored /usr/local/squid/var/logs directo ry By default shows ten columns data Figure 5 - 34 E xcerpt Squid access.log file Time UNIX epoch timestamp expressed milliseconds It marks time transaction begun Du ration time duration given transaction Introduction Network Forensics FINAL | Version 1.0 | January 2019 148 Client address address client machine made transaction Result codes encode result transactions expressed two entries separated slash sign First entry specific Squid described detail online 186 Second entry uses RFC defined error codes HTTP 187 In example TCP_MISS stands data fetched server proxy cache Bytes amount data downloaded client Request Method HTTP quests methods described RFC 1945 188 URL requested URL User - logged Hierarchy Code consisting three parts column provides information request handled shows IP address hostname handled request Type stores information type object based HTTP reply header 5.2.5.7 Squid Analysis Report Generator SARG SARG web - based Squid analysis tool th lets browse visual reports user activity based access.log file It helpful tool quick glance user activity needed It available software repositories installed command sudo apt install sarg In order generate report SARG requires path access.log config file sudo vim /etc/sarg/sarg.conf And line 7 change access_log path /usr/local/squid/var/logs/access.log Reports generated issuing command sudo sarg - x And accessed via web browser sarg.local 186 Squid - cache.org 2018b https //wiki.squid - cache.org /SquidFaq/SquidLogs 187 Fielding Reschke 2014 https //tools.ietf.org/html/rfc7231 # section - 6 188 Barnes - Lee et al 1996 https //tools.ietf.org/rfc/rfc1945 Introduction Network Forensics FINAL | Version 1.0 | January 2019 149 Figure 5 - 35 SARG web panel Network Traffic Analysis Squid_client machine preloaded two crafted log files used part exercise Both stored /home/squid/exercise_logs directory f irewall.log pfSense firewall log ccess.log Squid proxy log As prerequisite two additional commands need issued Squid_server VM sudo cp /root/access.log /usr/loca l /squid/var/logs/ sudo arg - x 5.2.6.1 Back ground story A trusted source informed security team possible data leak company based information found one Dark Web forums A data sample sensitive client data provided along inf ormation data leak verified authentic A forum post suggests perpetrator possession data since 3rd August 2018 The ecurity team able obtain pfSense log file day The task analys e log f ile search suspicious activity The c ompany network operating 10.x.x.x Private IP address space Based log file information stored MISP database participants discover Total number unique source destination I P addresses IP protocols used Well known services used IP address compromised machine Malicious IP address Time frame attack Introduction Network Forensics FINAL | Version 1.0 | January 2019 150 5.2.6.2 Breaking pfSense log PfSense log entry follows pattern Example Detailed explanation CS V field example 189 5 firewall rule number 16777216 sub rule number NULL anchor 1000000103 unique ID per rule also called tracker em0 name interface match reason log entry block action taken direction tra ffic 4 IP version IPv4 0x0 TOS NONE ECN 242 TTL 37226 ID 0 Offset none flags 6 protocol ID tcp protocol text 40 length 181.214.87.225 source IP 1.2.3.4 destination IP TCP data 43033 source port 33325 destination port 0 data length S TCP flag 1979908757 sequence number NULL ACK 1024 window NULL URG Remaining space end used additional options specific protocol used 189 Log breakdown based https //www.netgate.com/docs/pfsense/monitoring/filter - log - format - - p fsense - 2 - 2.html Introduction Network Forensics FINAL | Version 1.0 | January 2019 151 5.2.6.3 Firewall log analysis It good practice start analysis basic statistics All major Linux distributions come useful tools conducting analysis A good starting point check big log file Issuing command wc - l firewall.log Will return number lines In thi case log file moderate size 7919 lines representing separate log entry Since firewall log field describing action taken firewall like block pass number blocked attempts might useful grep '' block '' fir ewall.log | wc - l The result 7919 particular case firewall logging blocked attempts Another bit information helpful type traffic IPv4 next level protocol 190 information stored log retrieved using awk command awk - F ' { print $ 17 } ' firewall.log | sort | uniq Three protocols used TCP UDP ICMP PLEASE NOTE ICMP actually operates L3 OSI model given specific functions listed al ongside TCP UDP belong L4 The n ext three commands provide information protocol used awk - F ' { print $ 17 } ' firewall.log | grep `` tcp '' | wc - l awk - F ' { print $ 17 } ' firewall.log | grep `` udp '' | wc - l awk - F ' { print $ 17 } ' firewall.log | grep `` icmp '' | wc - l The results 4180 3413 326 accordingly The majority blocked traffic generated TCP protocol Moving forward pfSense log provide information protocols us ed top transport layer 191 awk - F ' { print $ 22 } ' firewall.log | sort | uniq - c | sort - n 190 IANA 2017 https //www.iana org /assignments/protocol - numbers/protocol - numbers.xhtml 191 IA NA 2018a https //www.iana.org/assignments/ service - names - port - numbers/service - names - port - numbers.xhtml Introduction Network Forensics FINAL | Version 1.0 | January 2019 152 Figure 5 - 36 Most popular protocols Most traffic generated well - known ports 443 https 23 SSH 137 138 NetBIOS 80 http 25 SMTP Less known ports need researched Couple quick queries Internet show port 17500 used known file - hosting service 8610 printer service 7547 used remote management end - user devices etc Command awk - F ' { print $ 19 } ' firewall.log | sort | uniq | wc - l Returns total number unique source IP addresses 1270 awk - F ' { print $ 20 } ' firewall.log | sort | uniq | wc - l Shows total number dest ination IPs 185 Since suspicion data exfiltrated external service focus put 185 addresses A private 10.x.x.x IP address range filtered issuing command awk - F ' { print $ 20 } ' firewall.l og | grep - v `` 10 * '' | sort | uniq | wc - l Remaining 136 IP addresses saved file awk - F ' { print $ 20 } ' firewall.log | grep - v `` 10 * '' | sort | uniq > > IPAddresses.txt And checked MISP 192 database 5.2.6.4 MISP Data MISP organis ed Event consist basic units information called attributes There dozens attribute types IP addresses hashes names files execution paths domains campaign email text etc 193 There two basic ways interact MISP web interf ace API MISP also official Python library called PyMISP 192 MISP n.d. http // www.misp - project.org/ 193 More detailed description attributes found MISP documentation MISP n.d. https //www.circl.lu/doc/misp/categories - - types/ Introduction Network Forensics FINAL | Version 1.0 | January 2019 153 5.2.6.5 MISP Web Interface MISP available client VM address misp.local redirect https //10.1.1.1 Login credentials user squid @ example.com password Pa ssword1234 Figure 5 - 37 MISP login screen After log current MISP database displayed By navigating Event Actions = > Search Attributes Introduction Network Forensics FINAL | Version 1.0 | January 2019 154 Figure 5 - 38 MISP Database Options Menu Attribute search menu accessed IP addresses found firewall log analysis pasted Introduction Network Forensics FINAL | Version 1.0 | January 2019 155 Figure 5 - 39 Search Attributes Introduction Network Forensics FINAL | Version 1.0 | January 2019 156 After clicking Figure 5 - 40 Match found MISP There match MISP event number 567 IP Address 185.4.66.194 involved malicious ctivity By clicking Event ID additional information obtained Figure 5 - 41 Collection attributes belonging Event 567 5.2.6.6 MISP API Optional Other way access MISP data via REST API authoris ation token required use That obtained MISP web interface Event Actions = > Automation Section Introduction Network Forensics FINAL | Version 1.0 | January 2019 157 Figure 5 - 42 MISP Authorization Token For purpose th exercise two REST API calls required finding event matching official site 194 First API call firewall log analysis results basic JSON parsing filtering combined simple Bash script # ! /bin/bash read ip # API call find attribute MISP database curl - - X POST - k - H 'Accept application/json ' - H 'Authorization N0yd6yIfZD9nqOHqUlgfvJZxDkb3tpfCG tZtpKQA ' - H 'Content - Type application/json ' 'https //misp.local/attributes/restSearch ' -- data ' { `` value '' '' ' $ ip ' '' } ' # IP addresses source script results files done < IPAddresses.txt > > results.txt # parsing filtering results cat results.txt | jq .response | grep - v ' \ \ ' 194 MISP n.d. https /www.circl.lu/doc/misp/automation/ Introduction Network Forensics FINAL | Version 1.0 | January 2019 158 Executing code result displaying single event details Figure 5 - 43 REST API call result The event_id used make another API call get details Figure 5 - 44 MISP event details obtained via REST API call Introduction Network Forensics FINAL | Version 1.0 | January 2019 159 Another way interact MISP API Python library called PyMISP comes couple useful examples PyMISP scripting beyond scope exercise detailed documentation available 195 5.2.6.7 MISP results Firewall Log IP address obtained MISP checked firewall log search information grep `` 185.4.66.194 '' firewall.lo g Figure 5 - 45 Connections malicious IP address From query deduced connection attempt suspicious address made August 3rd 10:53:42 The source address internal host 10.0.10.202 attempt blocked firewall Destination IP 185.4.66.194 port 21 suggests ftp connection attempt 5.2.6.8 Firewall Log Analysis Summary Total number source IP addresses 1270 Total number destina tion IP Addresses 185 IP Protocols used UDP TCP ICMP Well - know n services used http https SSH NetBIOS smpt IP Address infected machine 10.0.10.202 Malicious IP Address 185.4.66.194 Time frame ttack 10:53:42 10:54:13 5.2.6.9 Squid Log Analysis Based information acquired previous part exercise squid log participants discover four hosts infected malware file names exfiltrated database text storage service address additional data sent new C2 server address mentioned MISP The information MISP provided two additional URLs These checked Squid logs The addresses hxxps //fastparceldeliv ery ex/kirk545734/gate.php hxxps //moffice - cdn ex/spock732573/gate.php Since two address checked grep used Command 195 MISP n.d. https //www.circl.lu/doc/misp/pymisp/ Introduction Network Forensics FINAL | Version 1.0 | January 2019 160 grep https //fastparcel delivery.ex/kirk545734/gate.php access.log Returns results grep https //moffice - cdn.ex/spock732573/gate.php access.log Shows log entries Figure 5 - 46 Malicious domain found Squid log Thi indicates machines within network infected malware This command grep https //moffice - cdn.ex/spock732573/gate.php access.log | awk ' { print $ 3 } ' | sort | uniq Isolates infected IP addresses Figure 5 - 47 IP addresses infected hosts SARG tool used learn something web activity hosts SARG available sarg.local address logs August 3rd available Introduction Network Forensics FINAL | Version 1.0 | January 2019 161 Figure 5 - 48 SARG shows logs 3 Aug 2018 After clicking date hosts communicating proxy listed After selecting first infected host discovered previous step 10.0.10.111 - lo g displayed Introduction Network Forensics FINAL | Version 1.0 | January 2019 162 Figure 5 - 49 Host 's 10.0.10.111 browsing history Addresses top immediately catch attention Zippyshare well know file - hosting service potentially used data exfiltration Apart Ghostbin pasting service appears browsing history Similar web traffic observed 10.0.10.128 Introduction Network Forensics FINAL | Version 1.0 | January 2019 163 Figure 5 - 50 Host 's 10.0.10.1278 browsing history And 10 .0.10.134 Figure 5 - 51 Host 's 10.0.10.134 browsing history Introduction Network Forensics FINAL | Version 1.0 | January 2019 164 This information checked Squid log get detailed information Zippyshare communication investigated issu ing command grep `` zippyshare.com '' access.log Figure 5 - 52 Zippshare.com traffic log To make log readable results narrowed single host grep '' zippyshare.com '' access.log | grep 10.0.10.111 Figure 5 - 53 Z ippyshare.com traffic 10.0.10.111 host There couple interesting things seen part log Introduction Network Forensics FINAL | Version 1.0 | January 2019 165 POST requests indicate something mi ght uploaded service Distinct link hxxts //www94.zippyshare com/v/OdYpLvrA/file.html GET request file called CarsContract.zip Similarly host 10.0.10.128 grep '' zippyshare.com '' access.log | grep 10.0.10.128 Figure 5 - 54 Z ippyshare.com traffic 10.0.10.128 host Distinct link hxxts //www94.zippyshare com/v/NitWfpnd/file.html GET request file called Clients.zip And 10.0.10.134 grep '' zippyshare.com '' access.log | grep 10.0.10.134 Figure 5 - 55 Zippyshare.com traffic 10.0.10.134 Distinct link hxxts //www93.zippyshare com/v/zmQat8N3/file.html GET request file called Financial.zip Introduction Network Forensics FINAL | Version 1.0 | January 2019 166 The next step investigate traffic Ghostbin pasting service grep '' ghostbin '' access.log Figure 5 - 56 Ghostbin traffic It easily spotted lot GET POST requests referring certain address hx xps//ghostbin com/paste/n4d3g It also seems source IP addresses appearing log To list IP addresses reaching site grep `` ghostbin '' access.log | awk ' { print $ 3 } ' | sort | uniq Figure 5 - 57 Ghostbin uniq IP addresses In addition previously discovered IP addresses one new IP 10.0.10.151 appears This might yet another infected machine If machine also following pattern exfiltrating data Zippyshare service stored logs Introduction Network Forensics FINAL | Version 1.0 | January 2019 167 Figure 5 - 58 Host 10.0.10.151 traffic Distinct link hxxts //www94.zippys hare com/v/7KKXKzLf/file.html GET request file called SitesEmployees.zip It seems machine part campaign yet IP address show checking C2 addresses listed MISP event Maybe ther e another C2 server address somewhere log file n discovered yet ? Known C2 domains hxxps //fastparceldelivery ex/kirk545734/gate.php hxxps //moffice - cdn ex/spock732573/gate.php Seem random reasonable regex search last part seems constant used next query Figure 5 - 59 New C2 server A new domain discovered hxxps //city - bistro ex/picard323456/gate.php It closely follows naming pattern previously discovered C2 addresses Thus deducted part campaign This information shared community via MISP Introduction Network Forensics FINAL | Version 1.0 | January 2019 168 5.2.6.10 Tools used exe rcise Tool Homepage Squid proxy http //www.squid - cache.org/ SARG https //sourceforge.net/projects/sarg/ MISP http //www.misp - project.org/ Detecting data exfiltration DNS 5.2.7.1 Introduction Domain Name System DNS Domain Name System decentral ized hierarchical system translation alphanumeric names Domain Names corresponding IP addresses This standard conversion called forward mapping opposed reverse mapping IP address mapped name resource DNS hierarchical terms authority At top hierarchy root domain often denoted Root nameservers knowledge authoritative name servers Top Level Domains .com .net .o rg including also country level domains .gr .pl .th This hierarchy mapped domain name part called label domain delimited dot different authoritative name server set It takes many queries resolve nam es enisa.europa.eu Usually host would query Internet acts recursive DNS server If recursive DNS server IP address given domain name cache would simply return client Otherwis e would query root NS IP address .eu domain authoritative NS Another request would go name server authoritative .europa domain IP address complete domain resolved Simplified visualis ation mechanism shown following Figure 5 - 60 DNS hierarchy query process Introduction Network Forensics FINAL | Version 1.0 | January 2019 169 Figure 5 - 60 DNS hierarchy query process 5.2.7.2 Introduction data exfiltration ove r DNS Because role DNS plays modern Internet DNS traffic often n blocked firewalls restricted way local network DNS logs also often poorly monitored n collected - makes DNS int eresting choice channel stealthy data exfiltration How DNS exfiltration works In DNS client ask IP address named resource even nonexistent This feature leads interesting way transmitting data DNS requests query contains usually encoded encrypted data Most tools used data exfiltration DNS work client - server architecture client part run compromised machine server part run authoritative NS given domain Client asks query understood processed server run attacker In following example attacker controls example.com domain Name S erver runs software process DNS requests sent comprom ised host In case client sends query subdomain example.com 5 - Sep - 2018 09:16:59.992 client 172.16.2.19 # 56619 query 5f7301f1ec2737f6a01fcc2256e94cbc137048c0446b65c9119f8c51fc5f.example.com IN A + This subdomain exist subdo processed C & C server valid reply sent example CNAME response Introduction Network Forensics FINAL | Version 1.0 | January 2019 170 a54f00f1ece51c9c7bf23d0001b1300d6c7ed580e89f164d8a61d693638b.example.com IN CNAME T way communication channel es tablished based DNS queries answers For comparison valid DNS query presented 06 - Aug - 2018 15:57:16.527 client 172.16.2.19 # 53789 query google.pl IN A + Figure 5 - 61 DNS query se en Wireshark capture DNS exfiltration advantages The biggest advantage using DNS protocol data exfiltration fact DNS essential many internet services work therefore enabled networks The attackers usually ssume DNS likely w ill n fully monitored entire communication w ill n noticed legitimate network traffic especially larger organis ations lot traffic Another advantage fact advent content delivery net works domains usually computationally generated DNS exfiltration may look legitimate untrained eye DNS exfiltration disadvantages One main disadvantages using DNS exfiltration techniques well suited transfer la rge amounts data A omain name consist labels concatenated dots following pattern child.parent Maximum length label 63 octets maximum length domain 255 octets 196 Data transmitted DNS protocol divided chun ks limited maximum query length lab transfers low 4 K b/s common DNS exfiltration detection techniques There two approaches comes DNS data exfiltration detection Q uantitative analysis statistical methods used measure amount traffic specific domain IP address number NXDomain responses number queries unusual record types Qualitativ e analysis actual payload analys ed This incl ude size request label length character set record types IDS signatures 197 196 Elz Bush 1997 https //tools.ietf.org/html/rfc2181 # section - 11 197 Farnham 2013 https //www.sans.org/reading - room/whitepapers/dns/detecting - dns - tunneling - 34152 Introduction Network Forensics FINAL | Version 1.0 | January 2019 171 5.2.7.3 Introduction local DNS server Provided Virtual Box virt ual machine running Debian distribution By default BI ND server uses syslog output Sometimes however may useful store logs different location BIND instance configured follows Figure 5 - 62 BIND logging configuration Additio nally query logging turned example issuing command # rndc querylog The logs provided exercise generated dnscat2 iodine 5.2.7.4 Exact might slightly differ tween versions BIND server though usually contain seven nine columns data Unfortunately changes may affect automated tools used 06 - Aug - 2018 15:57:16.527 client 1 72.16.2.19 # 53789 query google.com IN A + Time first column data reflects time query made Client source IP address port number telling workstation made request Query domain name queried client DN S Class IN stands Internet class used Record type A standard IPv4 address Flags + indicate recursion requested used flags logged 5.2.7.5 introduction exercises The f ollowing exercise demon strates common approaches detection DNS exfiltration using simple tools provided Linux distribution well free open source scripts available Internet For purpose exercise logfiles prepared reflecting com mon corporate network configuration request coming corporate network workstations processed logged local forwarding DNS server running BIND Introduction Network Forensics FINAL | Version 1.0 | January 2019 172 All log files prepared exercise found /home/bind/ exercise_logs/dns di rectory Squid_ client virtual machine Task 1 basic detection based logs size count First steps start basic statistic using standard Linux tools Encoding exfiltrated data DNS queries dramatically increases number DNS requests average request Therefore first indicator potential data exfiltration DNS log size terms physical file size number log entries If log rotation used result logs files generated specific timeframe bigger log files depending log rotation settings In lab BIND configured log rotation every 25 MB Numeric extension log file indicate order files created h ighest number oldest file First go /home/bind/ exercise_ logs /dns check number available log files # ls - l There 6 logs provided 5 size 25 MB one 15 MB latest Assuming standard network activity 5 lo gs similar size similar number log entries Check number log entries # wc - l bind.log * Figure 5 - 63 Difference number records log file What draw attention th e fact log file bind.log.2 contains significantly less records compared files comparing bind log.4 bind log.5 difference even bigger One possible reasons might average length query bind .log.2 much bigger log files This makes bind.log.2 perfect start investigation Knowing next step search log file group long queries one DNS exfiltration indicators Searching long label na mes range 40 - 63 characters # egrep `` - zA - Z0 - 9 { 40,63 } '' bind.log.2 | wc - l # 3 Introduction Network Forensics FINAL | Version 1.0 | January 2019 173 Figure 5 - 64 Legitimate service queries # egrep `` - zA - Z0 - 9 { 40,63 } '' bind.log.2 Presence dropbox domain log fil es probably sign DNS data exfiltration attempt dropbox domain also reason smaller number queries log file ? As presented given example even legitimate services use long generated domain names dditionally complicates filtering logs Two following commands give answer question # grep dropbox bind.log.2 | wc - l # 1048 # grep dropbox bind.log.5 | wc - l # 3340 bind.l og.5 3 times greater number D ropbox queries yet tota l line count significantly higher assumed D ropbox n responsible size difference Another characteristic DNS exfiltration use unusual characters way encoding information grep regex could modified include - zA - Z0 - 9 \ \ - l | uniq # 17981 Just number gives assumption investigate see queries # egrep `` - zA - Z0 - 9 \ \ { 40,63 } '' bind.log.2 | uniq > suspicious.queries # less suspicious.quer ies Introduction Network Forensics FINAL | Version 1.0 | January 2019 174 Figure 5 - 65 Log entries indicating DNS data exfiltration The r esulting file contains 17981 lines consisting generated labels domain example.xyz # ls - lh | awk ' { print $ 5 '' `` $ 9 } ' Figure 5 - 66 Excerpt log analysis Additionally weights 11 MB 2 5 MB total log size clearly indicate data exfiltration It possible generate statistics check higher usual number queries NULL TXT CNAME unusual records # egrep `` IN TXT '' bind.log.1 | wc - l # egrep `` IN CNAME '' bind.log.1 | wc - l EXERCISE FOR STUDENTS Logs generated two tools giving slightly different output Studen ts could assigned task find first sign data exfiltration creat e timeline attacker steps explain exfiltration took place certain time day TASK2 anomaly detection approach In previous example basic Linux tools used perform preliminary analysis This approach however time consuming using script advised regular file checks The u se automated tools also allows statistical analysis large portion data Statistics collected longer peri ods time give insight typical traffic looks like variations detected In exercise free python script 198 used perform quick quantitative analysis # cd /home/bind/tools # ./bind_stats.py ../ exercise_logs/dns bind.log .0 Due fact generated domains uniqu e n appear top queried domains sc ript provided virtual machine modified display short version domain domain.TLD Existence queries long domain names 198 https //github.com/Matty9191/bind - query - log - statistics Introduction Network Forensics FINAL | Version 1.0 | January 2019 175 As pointed previous chapter rise usage generated queries used legitimated providers makes difficult distinguish suspicious activity looking query properties like label length For example log query used D ropbox servi ce analytics purpose fulfills almost criteria DNS exfiltration multiple computationally generated label names 48 characters long total length 164 characters Figure 5 - 67 Long DNS query legitimate service As comparison query generated dnscat2 presented difference length base domain name Figure 5 - 68 Long DNS query indicating DNS exfiltration This ca n remediated use trusted domain list long queries would ignored Unusual DNS records In corporate networks usual DNS record queried clients would include A AAAA records occasional requests TXT SRV MX cords In screenshot two statistics provided The one left summaris es typical DNS queries witch record types popular domain requested On right side among typical record types immediately draws attention unusually high nu mber NULL records This number easily associated example.xyz domain potentially indicate data exfiltration One approaches DNS exfiltration use queries types addresses A AAAA addresses Exampl es types might TXT MX CNAME NULL queries 199 Consequently large amounts queries record types coming corporate workstations investigated 199 IANA 2018b https //www.iana.org/assignments/dns - parameters/dns - parameters.xhtml # dns - parameters - 4 Introduction Network Forensics FINAL | Version 1.0 | January 2019 176 Figure 5 - 69 Comp arison statistics clean logs left suspicious queries NULL records right It worth check queries associated NULL records send grep command # grep `` NULL '' bind.log.3 | less Figure 5 - 70 Checking queries associated NULL records In output grep command shown figure fragment queries generated iodine shown representing start session Data sent compressed gzip encod ed Base32 Base64 Base128 depending DNS relay server configuration Lines marked 1 - 4 show automatic discovery accepted characters label length optimal encoding 200 In th example queries sent host 10.0.10.19 marked 5 Unusual popularity previously unknown domain 200 https //github.com/yarrick/iodine Introduction Network Forensics FINAL | Version 1.0 | January 2019 177 When obscure previously unknown domain becomes frequently queried might sign viral AD campaign popular link shared However DNS records associated query rather unusual logs inspected signs data exfiltration especially queries come single small number workstation # ./bind_stats.py ../ exercise_logs/dns /bind.log.5 Figure 5 - 71 Queries rare DNS records coming client workstations # grep `` example.xyz '' bind.log.5 Figure 5 - 72 Excerpt logs MX CNAME TXT records In corporate network wit h ce ntrally managed environment MX records would mostly used local mail server Similarly common uses TXT records also associated mail SPF Sender Policy Framework DKIM DomainKeys Identified Email Information fluc tuations service specific DNS records valuable DNS exfiltration detection also service misconfiguration High number queries single client Any unexpected rise traffic generated client workstation analys ed comes DNS protocol may indicate malware infection data exfiltration attempt # ./bind_stats.py ../exercise_logs/dns/bind.log 0 # ./bind_stats.py ../ exercise_logs/dns/ logs/bind.log.2 Introduction Network Forensics FINAL | Version 1.0 | January 2019 178 Figure 5 - 73 Usually quiet workstation appears top DNS clients list The f igure output previous two commands shows active client network 10.0.10.125 This compared log files Cl oser examination logs shows queries associated NTP Network Time Protocol service # grep `` 10.0.10.162 '' bind.log.2 | less Figure 5 - 74 NTP related DNS traffic What draws attention ppearance computer IP 10.0.10.19 third active This compared statistics like number queries record types domains queried # ./bind_stats.py ../ exercise_logs/dns /bind.log.2 Figure 5 - 75 Number requests NULL records cor r elated suspicious domain # grep `` 10.0.10.19 '' bind.log.2 | less Introduction Network Forensics FINAL | Version 1.0 | January 2019 179 Figure 5 - 76 DNS exfiltration attempt In typical corporate environment l ot fluctuations DNS traffic coming client workstations attributed human interaction It good practice determine many DNS request come typical client track deviations Log analysis summary R ecommendations DNS protocol essential almost modern service application Unfortunately designed security mind additional processes systems put place reduce risk abuse data exfiltration Logs local DNS se rver collected Local DNS server used proxy direct DNS traffic Internet within corporate network restricted Analysis simple tools scripts probably sustainable large networks use SIEM recommended Tools used use - case bind - query - log - statistics.py script used custom modifications provide additional metrics https //github.com /Matty9191/bind - query - log - statistics iodine https //github.com/yarrick/iodine dnscat2 https //github.com/iagox86/dnscat 2 Evaluation metrics Set - fully functional proxy server logging users activity Log files analysis results IP protocols used Well known services used mo st IP address compromised machine IP address machine used attack Time frame attack 4 hosts infected malware within organisation File names exfiltrated database Ghostibin service address wh ere additional data sent New C2 server address mentioned MISP Introduction Network Forensics FINAL | Version 1.0 | January 2019 180 Analysis airport third - party VPN connection compromise PART1 Summary The problem third party maintenance A growing number companies outsource ir IT environment Based cost considerations availability expertise The entire IT environment outsourced part An application outsourced completely whereas maintenance hosting done third party Or exa mple business - critical applications application hosted company whereas maintenance application done third party In situation IT environment remains company 's location th e maintenance application outsourced third party needs access outside A VPN connection Virtual Private Network used By using VPN connection maintenance party access applications need managed In terms IT security without risk One problem construction may security level external administrator 's computer The external administrators access applications servers company 's datacenter An infected computer external administrator cause damage company 's applications servers The Virtual Machine used exercise downloaded h ttp //www.enisa.europa.eu/ftp/ Caine_ ENISA _ _INF _5.3.ova credentials needed PART2 Summary table PARAMETER DESCRIPTION DURATION Main Objective The purpose exercise show students encrypted Virtual Private Network VPN conne ctions make work network forensics difficult The students learn danger compromised VPN connections The students learn research done different log files graphical tools command - line programs Targ eted Audience This exercise intended new CERT personnel involved network forensics also valuable CERT employees involved daily response incidents Total Duration 4.0 hours Time Schedule Introd uction exercise tools overview 0.75 hour Task 1 Evidence files 0.5 hour Introduction Network Forensics FINAL | Version 1.0 | January 2019 181 PARAMETER DESCRIPTION DURATION Task 2 Examine network setup 0.5 hour Task 3 Examine router log files 1.0 hour Task 4 Examine attack 1.0 hour Summary exercise 0.5 ho ur Frequency It advised organise exercise new team members join CERT/CSIRT PART 3 Introduction exercise tools overview Background information case A large European airport uses third parties maintain applic ations core network The airport uses VPN connections remote access With VPN connections external companies access core network airport `` IT System Administrators Europe '' ITSAEU fictional company performs maintenance one airports database servers applications Bob ITSAEU employee uses VPN connection maintenance The VPN connection gives access complete core network airport The case A hacker wants break ne airport 's applications Because difficult get core network airport outside attacker penetrate via VPN connection one maintenance parties It Thursday Bob maintenance application airport During maintenance Bob uses VPN connection airport Bob finish 17:00 locks computer leaves ITSAEU office Just 18:00 hacker compromises computer Bob enables Remote Desktop RD P creates new hidden account The hacker logs computer Bob trough Remote Desktop newly created account There OpenVPN icon Desktop inactive status The hacker looks current configuration route table see computer still active VPN connection initiated administrator The computer active VPN connection access private networks airport A command line port scan tool called `` N map '' uploaded computer The hacker starts scan VPN connection search devices In order noticed sets scanner scan slowly Four IP addresses found airport 's network investigated furth er Three IP addresses open ports indicate web servers One web servers contains front end database server This web application maintenance databases called `` php M A dmin '' The hacker uses frequently used standard passwords log The names `` Bob '' `` ITSAEU '' listed main page database server 's web server The hacker uses combination names log successfully After logging database - export made downloaded Bob 's computer Introduction Network Forensics FINAL | Version 1.0 | January 2019 182 The hacker looks second web server timetable He uses well - known frequently used passwords 201 work The airport monitoring failed login attempts log files When threshold value exceeded ification sent airport system administrators At 22:50 airport system administrators notified someone trying log dashboard timetable application username `` admin '' wrong password The administra tors look web server logs server AirtPortSys1 VPN server log They find incorrect login attempts coming VPN connection Bob Because late rather unusual time ITSAEU administrators log administrators airport triggered something strange going Bob trusted suspected traffic goes VPN connection They think VPN connection might compromised The airport secures current network log VPN log web server log research They also contact ITSAEU receive relevant network logs ITSAEU router ITSAEU find traces Bob 's computer The following log files collected a. routerairport_20180726_enp0s8 pcap b. routeritsaeu_20180726_enp0s8.pcap c. openvpn.log VPN server Airport d. access_log Webserver AirPortSys1 Airport 201 admin/admin similar Introduction Network Forensics FINAL | Version 1.0 | January 2019 183 Figure 5 - 77 Graphical view work situation attack source images openclipart.org The attack Therefore still vulnerable vulnerability MS17 - 10 202 This vulnerability allows attacker remote exploit computer completel takeover Security update MS17 - 010 addresses various vulnerabilities Windows Server Message Block SMBv1 This vulnerability also used worldwide WannaCry ransomware attack May 12 2017 One attacks performed th vulnerability The hacker uses Metasploit framework support exploit vulnerability MS17 - 10 202 Microsoft 2017b https //docs.microsoft.com/en - us/security - updates/securitybulletins/2017/ms17 - 010 last accessed July 12 th 2018 Introduction Network Forensics FINAL | Version 1.0 | January 2019 184 Figure 5 - 78 Screenshot content use meterpreter script Metasploit framework ource screenshot created ENISA Figure 5 - 79 Screenshot creation computer ource screenshot created ENISA The hacker notices OpenVPN icon logged Remote Desktop The networks 10.20.30.0/24 10.20.31.0/24 found looking IP configuration IPv4 Route Table Introduction Network Forensics FINAL | Version 1.0 | January 2019 185 Figure 5 - 80 ource screenshot created ENISA A command line port scanner called Nmap uploaded computer Bob To find active hosts hacker starts port scan The hacker scans network range 10.20.30.0/24 first To avoid Intrusion Detection Systems IDS Nmap parameter 203 - T1 also called sneaky used scan slowly By way took 4 hours find 256 hosts active actions remain radar As scan lasts longer chance hacker detected Bob increases However Hacker takes risk assumes less likely discovered outside office hours 203 - T 0 paranoid | 1 sneaky | 2 polite | 3 normal | 4 aggressive | 5 insane Introduction Network Forensics FINAL | Version 1.0 | January 2019 186 Figure 5 - 81 Screenshot Nmap scan command ource screenshot created ENISA The output Nmap scan shows four devices found Introduction Network Forensics FINAL | Version 1.0 | January 2019 187 Figure 5 - 82 Screenshot result Nmap scan ource screenshot created ENISA The hacker explores services active IPs performing new scan He continues port scan IP found ports tcp:22 ssh tcp:80 http tcp:443 https Figure 5 - 83 Screenshot result Nmap port scan ource screenshot created ENISA The IP addresses 10.20.30.1 10.20.3 0.71 10.20.30.189 open ports tcp:80 tcp:443 presumes web servers running IP address 10.20.30.189 contains web server frontend database servers Introduction Network Forensics FINAL | Version 1.0 | January 2019 188 Figure 5 - 84 Screen shot application IP address 10.20.20.189 ource screenshot created ENISA Introduction Network Forensics FINAL | Version 1.0 | January 2019 189 Figure 5 - 85 Screenshot application IP address 10.20.20.189 ource screenshot created ENISA Introduction Network Forensics FINAL | Version 1.0 | January 2019 190 Fig ure 5 - 86 Screenshot application IP address 10.20.20.189 ource screenshot created ENISA Introduction Network Forensics FINAL | Version 1.0 | January 2019 191 Figure 5 - 87 Screenshot application IP ad dress 10.20.20.189 GUI database application ource screenshot created ENISA The hacker inserts SQL query show contents database The result shown image A database dump saved computer Bob Introduction Network Forensics FINAL | Version 1.0 | January 2019 192 Figure 5 - 88 Screenshot application IP address 10.20.20.189 GUI database application ource screenshot created ENISA Introduction Network Forensics FINAL | Version 1.0 | January 2019 193 Figure 5 - 89 Screenshot l ogin screen application IP address 10.20.30.71 ource screenshot created ENISA The hacker know password tries log username `` admin '' The airport system administrators notified someone trying log dashboard wrong password Introduction Network Forensics FINAL | Version 1.0 | January 2019 194 Figure 5 - 90 Screenshot wrong password page ource screenshot created ENISA The failed log - attempts found web server log file Introduction Network Forensics FINAL | Version 1.0 | January 2019 195 Fig ure 5 - 91 ource screenshot created ENISA The log file web server used determine IP address unsuccessful log - attempts made In case IP address 10.20.31.2 Figure 5 - 92 Screenshot status page VPN server ource screenshot created ENISA The connec tion stopped log files secured discovered VPN account Bob linked rescued IP address 10.20.31.2 The hacker quickly copies database dump clears tracks Bob 's computer Introduction Network Forensics FINAL | Version 1.0 | January 2019 196 Figure 5 - 93 Screenshot copy action database dump ource screenshot created ENISA Figure 5 - 94 Screenshot database dump file ource screenshot crea ted ENISA PART 4 The Examination Materials Provide following digital course materials Network documents Introduction Network Forensics FINAL | Version 1.0 | January 2019 197 Log files routerairport_20180726_enp0s8.pcap router itsaeu_20180726_enp0s8.pcap openvpn.log VPN server Airport access_log Webserver AirPortSys1 Airport Tools The following tools discussed examination part wireshark tcpdump sha256sum cat grep wc sed awk 5.3.4.1 TASK 1 Evidence N ote advance Students familiar command line tools cat grep sha256sum familiar functionality tools skip TASK 1 Getting stared Handover two network documents pdf files extra information network locations four log files Webserver log The airport administrators informed bout invalid login attempts application running AirPortSys1 web server When administrators take look web server log failed login attempts confirmed Introduction Network Forensics FINAL | Version 1.0 | January 2019 198 Figure 5 - 95 Sc reenshot invalid logins webserver log AirportSys1 ource screenshot created ENISA Hash values log files reported Chain Custody form The researchers airport also keep Chain Custody form The calculated h ash values log files noted following values 6f33beb68e3641b0c9b1866c7b5821c8142634f2ba7ede0fc73c45504ecef5a9 access.log e65cd8c0d80da7dadc4c17f80d20cc8d51c064b2ed3e064b9edbc4ec688f7eea openvpn.log 4b80c6ebc3b229eabe6617cbf5662da83a 7fbcfe0dc35a2c415cf467ab291706 routerairport_20180726_enp0s8.pcap 3c8b8d5c68dbb9fe7ba196fccc11ee82e693646620183cfb4639bd11447ef836 routeritsaeu_20180726_enp0s8.pcap Table hash values form Chain Custody form Logfiles openvpn.log access_log In TASK 1 students use openvpn.log log file VPN server log access_log AirportSys1 Apache web server To give students visual impression location log files network piece network drawing h added Figure 5 - 96 Location log files openvpn.log access_log network setup ource image created ENISA Student Introduction Network Forensics FINAL | Version 1.0 | January 2019 199 Examine openvpn.log access_log file relation pi ece network drawing Use command line tools based access_log many times tried login b What said integrity log files ? c ? Trainer Use command line tools based access_log many time tried login username admin ? There several ways arrive outcome The failed login attempts logged web server log With command line ool cat contents log file displayed The tool grep used show lines log file match failed login attempts A pipe sign form diversion The output sent another program process The wc c ommand used counting words parameters lines When tools combined result yields $ cat assess_log wc l 16 b What said integrity log files ? The hash values calculated Secure Hash Algorithm SHA256 Each value listed Chain Custody form must checked command line tool sha256sum $ sha256sum routerairport_20180726_enp0s8.pcap 4b80c6ebc3b229eabe6617cbf5662da83a7fbcfe0dc35a2c4 15cf467ab291706 routerairport_20180726_enp0s8.pcap $ sha256sum routeritsaeu_20180726_enp0s8.pcap 3c8b8d5c68dbb9fe7ba196fccc11ee82e693646620183cfb4639bd11447ef836 routeritsaeu_20180726_enp0s8.pcap $ sha256sum openvpn.log 28f7f71f1e8b83be8647e3dd08 12dcdf1fa98a79e1dce2407a39ded454f43096 openvpn.log e65cd8c0d80da7dadc4c17f80d20cc8d51c064b2ed3e064b9edbc4ec688f7eea openvpn.log $ sha256sum access.log 6f33beb68e3641b0c9b1866c7b5821c8142634f2ba7ede0fc73c45504ecef5a9 access.log Students tice hash value openvpn.log file different An incorrect hash value potentially cause legal problem c. Based openvpn.log IP address ? Based log openvpn.log source address found n apache webserver log 10.20.31.2 IP address Bob 's computer 198.51.100.20 198.51.100.20:1048 itsaeu_bob Peer Connection Initiated AF_INET 198.51.100.20:1048 Jul 26 16:36:19 pfSense - Airport openvpn 9012 itsaeu_bob/198 51.100.20:1048 MULTI_sva pool returned IPv4=10.20.31.2 IPv6= Not enabled Introduction Network Forensics FINAL | Version 1.0 | January 2019 200 5.3.4.2 TASK 2 Examine network setup Note advance Students familiar address blocks test - net - 1/2/3 skip task 2 Getting stared The students nee file 5c_Internal_network_design_student.pdf The image document shown shows IP addresses known airport administrators Figure 5 - 97 The setup internal network ource image created ENISA Introduction Network Forensics FINAL | Version 1.0 | January 2019 201 Figure 5 - 98 Network Location log file routerairport_20180726_enp0s8.pcap network setup ource image created ENISA Figure 5 - 99 Location capture log file routeritsaeu_20180726_enp0s8.pcap network setup ource image created ENISA Student Examine two network documents combination history attack What say abo ut following IP addresses used example ? Are public ? Are routable ? 10.20.30.71 b 172.25.100.2 c. 198.51.100.20 Introduction Network Forensics FINAL | Version 1.0 | January 2019 202 d. 203.0.113.210 Trainer What say following IP addresses used example ? In exercise consciously also used non - routable non - public network blocks three commonly used private test networks The three commonly used network ranges 192.168.0.0/16 10.0.0.0/8 172.16.0.0/12 Below explanation f networks used exercise 192.168.0.0/16 192.168.0.0 192.168.255.255 Used local communications within private network In example used consciously routable public net blocks 10.0.0.0/8 10.0.0.0 10.255.255 255 Used local communications within private network 172.16.0.0/12 172.16.0.0 172.31.255.255 Used local communications within private network 192.0.2.0/24 192.0.2.0 192.0.2.255 204 Assigned TEST - NET - 1 documentation examples https /tools.ietf.org/html/rfc5737 198.51.100.0/24 198.51.100.0 198.51.100.255 Assigned TEST - NET - 2 documentation examples https //tools.ietf.org/html/rfc5737 203.0.113.0/24 203.0.113.0 203.0.113.255 Assigned TEST - NET - 3 documentation exampl es https //tools ietf .org/html/rfc5737 5.3.4.3 TASK 3 Examine router log files In task students investigate router logs Getting stared The student needs following network dump files task routerairport_20180726_enp0s8.pca p routeritsaeu_20180726_enp0s8.pcap Student Use log files routerairport_20180726_enp0s8.pcap routeritsaeu_20180726_enp0s8.pcap When VPN connection started ? b 204 Remark The IP address hacker lies IP range unknown students stage Introduction Network Forensics FINAL | Version 1.0 | January 2019 203 c mputer compromised likely IP address hacker ? locate attack e Follow TCP stream attack Wireshark f What sa id readability network activity VPN connection ? g Convert routeritsaeu_20180726_enp0s8.pcap ASCII h Create timeline incident based available log files Bonus question time - dependent Select output form A SCII output routeritsaeu_20180726_enp0s8.pcap While using output ASCII conversion routeritsaeu_20180726_enp0s8.pcap Use cat/grep/sed/awk generate list All lines belong Openvpn connection based port number replace ment service < time hh mm ss > < src - ip.src - port > < direction > < dst - ip.dst - port > Remove last colon dst - port e.g 16:36:18 198.51.100.20.1048 > 203.0.113.210.openvpn 16:36:18 203.0.113.210.openvpn > 198.51.100.20.1048 Trainer Using router airport_20180726_enp0s8 .pcap file When VPN connection started ? Introduction Network Forensics FINAL | Version 1.0 | January 2019 204 Figure 5 - 100 Wireshark pcap dump file taken router airport interface enp0s8 source screenshot created ENISA The service OpenVPN communicates default via port 1194 One find log file IP address 198.51.100.20 sends SYN packet VPN server port 1194 protocol TCP A lines protocol changes TCP OpenVPN The VPN conn ection first initiated July 26 2018 16:36:18 Using routeritsaeu_20180726_enp0s8.pcap log file b Which IP addresses many connections Bob ? When log file opened Wireshark source addresses sorted Three IP addresses remarkably many connections 203.0.113.210 198.51.100.20 192.0.2.80 c. hacker ? Introduction Network Forensics FINAL | Version 1.0 | January 2019 205 From network drawing deduced IP address 203.0.113 .210 belongs VPN server IP address 198.51.100.20 computer Bob The IP address attacker 192.0.2.80 d. Examine traffic IP address relation IP address computer loca te attack In Wireshark use filter rule Filter ip.addr == 192.0.2.80 ip.addr == 198.51.100.20 Figure 5 - 101 Using filter Wireshark source screenshot created ENISA Introduction Network Forensics FINAL | Version 1.0 | January 2019 206 Figure 5 - 102 First traces attack source screenshot created ENISA e. Follow TCP stream attack Wireshark Right click first TCP Introduction Network Forensics FINAL | Version 1.0 | January 2019 207 Figure 5 - 103 f. What said readability network activity VPN connection ? When using network dump file router airport_20180726_enp0s8.pcap Wireshark students list OpenVPN traffic filter ip.addr == 198.51.100.20 tcp.port == 1194 The application data inside OpenVPN traffic encrypted therefore readable Introduction Network Forensics FINAL | Version 1.0 | January 2019 208 Figure 5 - 104 Screenshot encrypted payload Wireshark source screenshot created ENISA g. Convert routeritsaeu_20180726_enp0s8.pcap ASCII The conversion done using command line tool tcpdump The parameter A print packet minus link level header ASCII Read packet file parameter r. $ tcpdump A r routeritsaeu_20180726_enp0s8.pcap > routeritsaeu_20180726_enp0s8.txt h. Create timeline incident bas ed available log files Because VPN connection encrypted information retrieved log files Jul 26 2018 16:36:18 CEST VPN connection initiated computer 198.51.100.20 Jul 26 2018 17:00:00 CEST Bob locks com puter leaves office Jul 26 2018 18:07:43 CEST VPN computer 198.51.100.20 compromised hacker 192.0.2.80 Jul 26 2018 18:14:08 CEST hacker 192.0.2.80 198.51.100.20 Hacker attacks servers us ing RDP session using VPN connection Bob established earlier 10.20.31.2 VPN server 203.0.113.210 Introduction Network Forensics FINAL | Version 1.0 | January 2019 209 Jul 26 2018 22:47:50 CEST - > Jul 26 2018 22:57:24 CEST 16 invalid logins VPN connection username admin Jul 26 2018 22:58:57 CEST VPN connection lost Figure 5 - 105 Timeline attack source screenshot created ENISA Bonus question time - dependent Select output form ASCII output routeritsae u_20180726_enp0s8.pcap When solving exercise command line tools cat grep awk sed used Below described way leads desired result List contents file routeritsaeu_20180726_enp0s8.txt The OpenVPN port 1194 placed log file openvpn Use tool grep show lines form output contains word openvpn Print fields 1,3,4 5 output awk Replace last colon nothing delete Replace pattern < dot > followed 6 num bers nothing e.g .123456 delete $ cat routeritsaeu_20180726_enp0s8.txt | grep openvpn | awk ' { print $ 1 $ 3 $ 4 $ 5 } ' | sed s/. $ //g | sed s/ 0 - 9 0 - 9 0 - 9 0 - 9 0 - 9 0 - 9 //g 5.3.4.4 TASK 4 Examine attack Getting stared The student needs fo llowing network dump files task routerairport_20180726_enp0s8.pcap routeritsaeu_20180726_enp0s8.pcap Student Based information log files attack probably used ? b What technique used hacker bypass firewall res trictions open ports ? Trainer Based information log files attack probably used ? Introduction Network Forensics FINAL | Version 1.0 | January 2019 210 The attack using SMB protocol The SMB request done NT LM 0.12 version SMBv1 Figure 5 - 106 The use SMBv1 attack source screenshot created ENISA Based fact victim using Windows 7 use SMB version 1 NT LM 0.12 used attack likely based vulnerability MS17 - 10. b What technique used hacker bypass firewall restrictions open ports ? Normally attacker attacks connection victim The problem method victim 's firewall may block incoming traffic port level Outgoing raffic less blocked firewall established without hindrance firewall rules In case victim initiates connection computer Introduction Network Forensics FINAL | Version 1.0 | January 2019 211 Figure 5 - 107 screenshot created ENISA Summary exercise Provide careful Chain Custody Mistakes errors example hash values evidence material cause legal issues Encrypted VPN connections make network forensic investigation diffi cult The network traffic readable The combination different log files may required investigation Established auto login VPN connections dangerous computer gets compromised An established VPN connection may c ause accessible networks abused malicious attacker There graphical tools examine network dumps well command line tools Binary network dumps converted ASCII useful use command line tools Com mand line tools powerful select display specific information form network dumps Conclusions Recommendations The use vendors support involves security risks But risk reduced 205 Select best vendor use questionnai res initial contract negotiations Ensure procedures place third party guarantee safe working method ISO 27001 good starting point Segment network vendors access systems applicati ons 205 Cain 2013 https //www.sans.org/reading - room/whitepapers/policyissues/controlling - vendor - access - small - businesses - 34345 Introduction Network Forensics FINAL | Version 1.0 | January 2019 212 Ensure mobile device management MDM third party side Ensure separation tasks third party side Secure maintenance periods procedures Restrict access specific systems required specific time fram e 206 Limit physical access information buildings Separate administrative accounts non - administrative accounts Use encryption data storage data transfer Keep vendors accountable actions 207 Tools used use - ca se http //www.tcpdump.org/ last accessed July 31 th 2018 https //www.wireshark.org/ last accessed July 31 th 2018 https //www.kali.org last accessed July 31 th 2018 https //www.pfsense.org/ last accessed July 31 th 2018 https //openvpn.net/ last accessed July 31 th 2018 Evaluation metrics How VPN connections compromised Understand active VPN connection risk computer compromised Network analysis Analyse router network packet capture file Wire shark Find encrypted VPN traffic packet capture file Find Indicators Compromise attack packet capture file Create timeline attack Attack analysis Find attack used compromise machine 206 Cooper 2003 https //www.giac.org/paper/gsec/2948/controlling - remote - access - vendor - support/104954 207 SecureLink 2018 https //www.securelink.com/solutions/managing - vendor - access/ Introduction Network Forensics FINAL | Version 1.0 | January 2019 213 6 Glossary ARP Address Resolution Protocol ASCII American Standard Code Information Interchange C & C Command Control Server CLI Command Line Interfaces COTP Connection Oriented Transport Protocol GUI G raphical User Interface ICS Industrial Control Sy stems IGMP Internet Group Management Protocol ISO 27001 International Organization Standardization LLDP Link Local Discovery Protocol LLMNR L ink Local Multicast Name Resolution PCAP Packet CAPture PLC Programmable Logic Controller SCADA Sup ervisory Control Data Acquisition SMB Server Message Block SSDP Simple Service Discovery Protocol TCP Transmission Control Protocol TP KT Packet format used transport OSI TPDUs TCP TPDU OSI Transport Protocol Data Uni UDP User Datagram Protocol VNC Virtual Network Computing Introduction Network Forensics FINAL | Version 1.0 | January 2019 214 7 References Aboba B. et al 2007 RFC 4795 Link - Local Multicast Name Resolution LLMNR January 2007 https //tools.ietf.org/html/rfc4795 last accessed n October 7 th 2018 Aircrack - ng 2018 Airodump - ng https //www.aircrack - ng.org/doku.php ? id=airodump - ng last accessed October 7 th 2018 Bejtlich R. 2005 Structured Traffic Ana lysis IN SECURE Magazine Issue 4 October 2005 page 6ff https //www.helpnetsecurity.com/insecuremag/issue - 4 - october - 2005/ last accessed October 7 th 2018 Bejtlich R. 2013 The Practice Network Security Monitoring Understanding Incident Detection Response No Starch Press 2013 ISBN - 13:1 - 59327 - 509 - 9 Bernes - Lee T et al 1996 RFC 1945 Hypertext Transfer Protocol -- HTTP/1.0 https //tools.ietf.org/rfc/rfc1945 last accessed October 7 th 2018 Bluetooth 2018 Protocol Specifications https //www.bluetooth.com/specificati ons/protocol - specifications last accessed October 7 th 2018 Brezinski D. Killalea T. 2002 RFC3227 Guidelines Evidence Collection Archiving February 2002 https //www.ietf.org/rfc/ rfc3227.txt last accessed October 7 th 2018 Brownlee N. et al 1999 RFC 2722 Traffic Flow Measurement Architecture 1999 https //tools.ietf.org/html/rfc2722 last accessed October 7 th 20 18 Cain C. 2013 Controlling Vendor Access For Small Business September 2013 https //www.sans.org/reading - room/whitepapers/poli cyissues/controlling - vendor - access - small - businesses - 34345 last accessed October 7 th 2018 Carrier B 2006 Basic Digital Forensic Investigation Concepts 2006 http //www.digital - eviden ce.org/di_basics.html last accessed October 7 th 2018 Casey E. 2011 Digital evidence computer crime forensic science computers internet 3 rd ed. Academic Press 2011 ISBN 978 - 0 - 12 - 374268 - 1 Chappe l l L. 2012 Wireshark Network An alysis The Official Wireshark Certified Network Analyst Study Guide 2 nd ed. Protocol Analysis Institute Inc dba Chappell University 2012 ISBN 978 - 1 - 893939 - 94 - 3 Cheshire S. Krochmal M. 2013 RFC 6762 Multicast DNS February 2013 https //tools.ietf.org/html/rfc6762 last accessed October 7 th 2018 Chetlall M. 2018 YES ! Encrypted Traffic Can Be Classified April 2018 https //qosmos.com/blog_qosmos/yes - encrypted - traffic - - - classified - 2/ last accessed October 7 th 2018 Chismon D. 2015 Threat Intelligence Collecting Analysing Evaluating MWR https //www.ncsc.gov.uk/content/files/protected_files/guidance_files/MWR_Threat_Intelligence_whitepa per - 2015.pdf last accessed October 7 th 2018 Introduction Network Forensics FINAL | Version 1.0 | January 2019 215 Cooper M. 2003 Controlling Remote Access Vendor Support SANS Institute May 2003 https //www.giac.org/paper/gsec/2948/controlling - remote - access - vendor - support/104 954 last accessed October 7 th 2018 Davidoff S Ham J 2012 Network Forensics Tracking Hackers Cyberspace Prentice Hall 2012 ISBN - 10 0 - 13 - 256471 - 8 Debar H. et al 2007 RFC 4765 The Intrusion Detection Message Exchange Form IDMEF March 2007 https //www.ietf.org/rfc/rfc4765.txt last accessed October 7 th 2018 Dietrich N. 2016 Snort IPS Inline Mode Ubuntu Sublime Robots 2016 http //sublimerobots.com/2016/02/snort - ips - inline - mode - - ubuntu/ last accessed October 7 th 2018 EC - Council Press 2010 Computer Forensics Investigating Network Intrusions & Cyber Crime 2010 C engage Learning ISBN - 13 978 - 1 - 4354 - 8352 - 1 EDRM Glossary n.d. Chain Custody http //www.edrm.net/resources/glossaries/glossary/c/chain - - custody last accessed October 7 th 2018 Elz R. Bush R. 1997 RFC 2181 Clarifications DNS Specification July 1997 https //tools.ietf.org/html/rfc2181 last accessed October 7 th 2018 ENISA 2011 Prot ecting Industrial Control Systems Recommendations Europe Member States https //www.enisa.europa.eu/topics/critical - information - infrastructure - - services/scada last accessed October 7 th 2018 ENISA 2013a Identification handling electronic evidence 2013 https //www.enisa.europa.eu/topics/trainings - - cybersecurity - specialists/online - training - material/technical - operational # identification_handling last accessed October 7 th 2018 ENISA 2013b Presenting co rrelating filtering various feeds September 2013 https //www.enis a.europa.eu/topics/trainings - - cybersecurity - specialists/online - training - material/documents/presenting - correlating - - filtering - various - feeds - handbook last accessed October 7 th 2018 Farnham G. 2013 Detecting DNS Tunneling SANS Institute Feb ruary 2013 https //www.sans.org/reading - room/whitepapers/dns/detecting - dns - tunneling - 34152 last accessed October 7 th 2018 Fielding R. Reschke J E d. 2014 RFC 7231 Hypertext Transfer Protocol HTTP/1.1 Semantics Content June 2014 https //tools.ietf.org/html/rfc7231 # section - 6 last accessed October 7 th 2018 Fry C. N ystrom M. 2009 Security Monitoring Proven Methods Incident Detection Enterprise Networks - 0 - 596 - 51816 - 5 GerhardS R. 2009 RFC 5424 The Syslog Protocol March 2009 http //www.rfc - editor.org/rfc/rfc5424.txt last accessed October 7 th 2018 Gerhards R. 2014 RELP The Reliable Event Logging Protocol April 2014 http //www.rsyslog.com/doc/relp.html last accessed October 7 th 2018 Introduction Network Forensics FINAL | Version 1.0 | January 2019 216 Ghorbani A. et al 2010 Network Intrusion Detection Prevention Concepts Techniques Springer 2010 ISBN 978 - 0 - 387 - 88770 - 8 IANA 2017 Assigned Internet Protocol Numbers October 2017 https //www.iana.org/assignments/protocol - numbers/protocol - numbers.xhtml last accessed October 7 th 2018 IANA 2018 Service Name Transport Protocol Port Number Registry Oct ober 2018 https //www.iana.org/assignments/service - names - port - numbers/service - names - port - numbers.xhtml last accessed October 7 th 2018 IANA 2018 b Domain Name System DNS Parameters September 2018 https //www.iana.org/assignments/service - names - port - numbers/service - names - port - numbers xhtml last accessed October 7 th 2018 IBM n.d. Internet Protocol https //www.ibm.com/support/knowledgecenter/en/ssw_aix_71/com.ib m.aix.networkcomm/protocols_i p.htm last accessed October 7 th 2018 IBM n.d. b IPv4 IPv6 address formats https /www.ibm.com/support/knowledgecenter/en/STCMML8/com.ibm.storage.ts3500.doc/opg_3584_I Pv4_IPv6_addresses.html last accessed October 7 th 2018 IBM n.d. c IP Security protocols https //www.ibm.com/support/knowledgecenter/en/ssw_ibm_i_73/rzaja/rzajaipsec.htm last accessed October 7 th 2018 IEEE 2015 IEEE 802.15.4 - 2015 - IEEE Standard Low - Rate Wireless Networks December 2015 https //standards.ieee.org/standard/802_15_4 - 2015.html last accessed October 7 th 2018 IEEE 2016 802.11 - 2016 - IEEE Standard Information technology -- Telecommunications information excha nge systems Local metropolitan area networks -- Specific requirements - Part 11 Wireless LAN Medium Access Control MAC Physical Layer PHY Specifications December 2016 https // ieeexplore.ieee.org/document/7786995 last accessed October 7 th 2018 Jones N. et al 2013 Electronic evidence guide version 1.0 2013 created part CyberCrime @ IPA EU/COE Joint Project Regional Cooperation Cybercrime Kawamura S. Kawashima M. 2010 RFC5952 A Recommendation IPv6 Address Text Representation August 2010 https //tools.ietf.org/html/rfc5952 last accessed October 7 th 2018 Kelsey J. et al 2010 RFC 5448 Signed Syslog Messages May 2010 http //www.rfc - editor.org/rfc/rfc5848.txt last accessed October 7 th 2018 Kent K. Souppaya M. 2007 NIST Special Publication 800 - 92 Guide Computer Security Log Management Recommendations National Institute Standards Technology September 2007 http //dx.doi.org/10.6028/NIST.SP.800 - 92 last accessed October 7 th 2 018 Kent S. 2005 RFC4303 IP Encapsulating Security Payload ESP December 2005 https //tools.ietf.org/html/rfc4303 last accessed October 9 th 2018 Introduction Network Forensics FINAL | Version 1.0 | January 2019 217 Kushalnagar N. et al 2007 RFC 4919 IPv 6 Low - Power Wireless Personal Area Networks 6LoWPANs Overview Assumptions Problem Statement Goals August 2007 https //datatracker.ietf.org/doc/rfc4919/ last accessed October 7 th 2018 Lokesak B. 2008 A Comparison Between Signature Based Anomaly Based Intrusion Detection Systems https //www.iup.edu/WorkArea/DownloadAsset.aspx ? id=81109 last acces sed October 9 th 2018 Lonvick C. 2001 RFC 3164 BSD syslog Protocol August 2001 http //www.rfc - editor.org/rfc/rfc3164.txt last accessed October 7 th 2018 Miao F. et al 2009 RFC 542 5 Transport Layer Security TLS Transport Mapping Syslog March 2009 http //www.rfc - editor.org/rfc/rfc5425.txt last accessed October 7 th 2018 Microsoft 2017 Ensuring Data Integrity Hash Codes Microsoft March 30th 2017 https //docs.microsoft.com/en - us/dotnet/standard/security/ensuring - data - integrity - - hash - codes last accessed October 7 th 2018 Microsoft 2017b Microsoft Security Bulletin MS17 - 010 Critical Secur ity Update Microsoft Windows SMB Server 4013389 March 2017 https //docs.microsoft.com/en - us/security - updates/securitybulletins/2017/ms17 - 010 last acc essed October 7 th 2018 Microsoft 2018 What Is IPSec ? https //technet.microsoft.com/pt - pt/library/cc776369 v=ws.10 .aspx last accessed October 7 th 2018 MISP n.d. MISP Open Source Threat Intelligence Platform & Open Standards For Threat Information Sharing http //www.misp - project.org/ last accessed October 7 th 2018 Netresec n.d. Publicly available PCAP files https //www.netresec.com/index.ashx ? page=PcapFiles last accessed October 7 th 2018 Netspot 2018a Wireless Security Protocols WEP WPA WPA2 WPA3 https //www.netspotapp.com/wifi - encryption - - security.html last accessed October 7 th 2018 Netspot 2018b WiFi Security NetSpot https //www.netspotapp.com/wifi - network - security.html last accessed October 7 th 2018 NIST 2013 Anywhere Police Department Evidence Chain f Custody Tracking Form https //www.nist.gov/document/sample - chain - custody - formdocx last accessed October 7 th 2018 Rieke et al. What ISPs Can See Clarifying technical landscape broadband privacy debate March 2016 https //www.teamupturn.org/reports/2016/what - isps - - see/ last accessed October 7 th 2018 Rowayda A. et al 2013 Effective anomaly intrusion detection system based neural network indicator variabl e rough set reduction International Journal Computer Science Issues IJCSI Volume 10 Issue 6 November 2013 http //www.ijcsi.org/papers/IJCSI - 10 - 6 - 2 - 227 - 233.pdf last access ed October 9 th 2018 Ryder K. 2002 Computer Forensics https //www.sans.org/reading - room/whitepapers/incident/computer - forensics - weve - - - incident - - - - get - - investigate - 652 last accessed October 7 th 2018 Introduction Network Forensics FINAL | Version 1.0 | January 2019 218 Salowey J. et al 2010 RFC 6012 Datagram Transport Layer Security DTLS Transport Mapping Syslog October 2010 http //www.rfc - editor.org/rfc/rfc6012.txt last accessed October 7 th 2018 Sanders C. 2011 Practical Packet Analysis Using Wireshark To Solve Real - World N etwork Problems 2 nd e d. No Starch Press 2011 ISBN 978 - 1 - 59327 - 266 - 1 Scarfone K. et al 2007 NIST Special Publication 800 - 94 Guide Intrusion Detection Prevention Systems IDPS February 2007 https //doi.org/10.6028/NIST.SP.800 - 94 last accessed October 9 th 2018 Schuster A 2007 The Inner Structure 2007 http //computer.forensikblog.de/en/20 07/07/the - inner - structure.html last accessed October 7 th 2018 SecureLink 2018 Managing Vendor Access Third - Party Remote Access Management Ensures Compliance Accountability https //www.securelink.com/solutions/managing - vendor - access/ last accessed October 7 th 2018 Selamat S. R. et al 2013 A Forensic Traceability Index Digital Forensic Investigation 2013 https //pdfs.semanticscholar.org/04ef/a0984b76b 2e9b7a4390606552d98a1881d07.pdf last accessed October 7 th 2018 Sira R. 2003 Network Forensics Analysis Tools An Overview Emerging Technology SANS Institute https //www.giac.org/paper/gsec/2478/network - forensics - analysis - tools - overview - emerging - technology/104303 last accessed October 7 th 2018 Snort manual n.d. Getting started http //manual - snort - org.s3 - website - us - east - 1.amazonaws.com/node3.html last accessed October 7 th 2018 Squid - cache.org n.d. O fficial Squid project site http //www.squid - cache.org last accessed October 7 th 2018 Squid - cache.org 2018a Intercept HTTPS CONNECT messages SSL - Bump https //wiki.squid - cache.org/Con figExamples/Intercept/SslBumpExplicit last accessed October 7 th 2018 Squid - cache.org 2018b Squid Log Files https //wiki.squid - cache.org/SquidFaq/SquidLogs last accessed October 7 th 2018 The Forensics Library n.d. OJ Simpson http //aboutforensics.co.uk/oj - simpson/ last accessed October 7th 2018 Vanhoef M. Key Reinstallation Attacks KU Leuven 2017 https //www.krackattac ks.com/ last accessed October 7 th 2018 Wi - Fi Alliance 2018 Wi - Fi AllianceÂ® introduces Wi - https //www .wi - fi.org/news - events/newsroom/wi - fi - alliance - introduces - wi - fi - certified - wpa3 - security last accessed October 7 th 2018 Wireshark n.d. https //www.wireshark.org/docs/wsug_html_chunked/index.html last acc essed October 7 th 2018 Wireshark n.d. b Capture File Format Reference https //wiki.wireshark.org/FileFormatReference last accessed October 7 th 2018 Introduction Network Forensics FINAL | Version 1.0 | January 2019 219 Wireshark n.d. c Secure So cket Layer SSL https //wiki.wireshark.org/SSL last accessed October 7 th 2018 Ylonen T. Lonvick C. Ed. 2006 RFC4253 The Secure Shell SSH Transport Layer Protocol January 2006 https //tools.ietf.org/html/rfc4253 last accessed October 7 th 2018 Zigbee 2018 Zigbee 3.0 https //www.zigbee.org/zigbee - - devel opers/zigbee - 3 - 0/ last accessed October 7 th 2018 ENISA European Union Agency Network Information Security Science Technology Park Crete ITE Vassilika Vouton 700 13 Heraklion Greece Athens Office 1 Vasilissis Sofias Maro usi 151 24 At tiki Greece PO Box 1309 710 01 Heraklion Greece Tel +30 28 14 40 9710 info @ enisa.europa.eu www.enisa.europa.eu I SBN 978 - 92 - 9204 - 288 - 2 DOI 10.2824/995110 