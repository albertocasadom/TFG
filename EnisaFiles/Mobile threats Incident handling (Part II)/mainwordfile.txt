www.enisa.europa.eu European Union Agency For Network And Information Security Toolset Document students 1.0 SEPTEMBER 2015 Mobile Threats Incident Handling Part II 1.0 | September 2015 02 About ENISA The European Union Agency Network Information Security ENISA centre network information security expertise EU member states private sector Europe ' citizens ENISA works groups develop advice recommendations good practice information security It assists EU member states implementing relevant EU legislation works improve resilience Europe ' critical information infrastructure networks ENISA seeks enhance existing expertise EU member states supporting development cross - border communities committed improving network information security throughout EU More information ENISA work found www.enisa.europa.eu Authors This document created Yonas Leguesse Christos Sidiropoulos Lauri Palkmets consultation S - CURE 1 The Netherlands ComCERT 2 Poland DFN - CERT Services 3 Germany Contact For contacting authors please use cert - relations @ enisa.europa.eu For media enquires paper please use press @ enisa.europa.eu 1 Don Stikvoort Michael Potter Alan Robinson 2 3 Mirko Wollenberg Mobile Threats Incident Handling Part II 1.0 | September 2015 03 Legal notice Notice must taken publication represents views interpretations authors editors unless stated otherwise This publication const rued legal action ENISA ENISA bodies unless adopted pursuant Regulation EU No 526/2013 This publication necessarily represent state - - art ENISA may update time time Third - party sources quoted appropriate ENISA responsible content external sources including external websites referenced publication This publication intended information purposes It must accessible free charge Neither E NISA person acting behalf responsible use might made information contained publication Disclaimer ENISA endorse recommend commercial products processes services Therefore every mentio n commercial products processes services within course material construed endorsement recommendation This course material provides links Internet sites informational purposes convenience users When users select link external w eb site subject privacy security policies owners/sponsors external site Copyright Notice Â© European Union Agency Network In formation Security ENISA 2015 Reproduction authorised provided source acknowledged Mobile Threats Incident Handling Part II 1.0 | September 2015 04 Table Contents 1 What Will You Learn ? 6 Mobile forensic 6 Netw ork forensic 6 Mobile malware reverse - engineering 6 2 Exercise Task 7 Task 2.1 Analysis sample application 's permissions Android device 7 2.1.1 Introduction 7 2.1.2 Details 7 2.1.3 Task walk - 7 Task 2.2 Analysis sample application 's Mach - header iOS device 8 2.2.1 Introduction 8 2.2.2 Details 8 2.2.3 Task walk - 8 Task 3.1 A quick evaluation knowledge regarding mobile devices 9 Task 4.1 Logical data extraction Android devices 10 2.4.1 Introduction 10 2.4.2 Tools used 10 2.4.3 Details 10 2.4.4 Task walk - 10 Task 4.2 File system extraction Android devices 14 2.5.1 Introduction 14 2.5.2 Tools used 14 2.5.3 Detail 14 2.5.4 Task walk - 14 Task 4.3 Manual file carving 17 2.6.1 Introduction 17 2.6.2 Tool used 17 2.6.3 Details 17 2.6.4 Task walk - 17 Task 4.4 RAM memory dump Android device 20 2.7.1 Introduction 20 2.7.2 Tools used 20 2.7.3 Details 21 2.7.4 Task walk - 21 2.7.5 Dumping RAM memory 21 2.7 6 Examining memory dump Volatility 25 2.7.7 Using Autopsy 28 Task 4.5 iOS iPhone Backup Analyser 2 34 Mobile Threats Incident Handling P art II 1.0 | September 2015 05 2.8.1 Introduction 34 2.8.2 Deta ils 34 2.8.3 Task walk - 34 Task 4.6 Brute - forcing Android encryption mechanisms 37 2.9.1 Introduction 37 2.9.2 Details 37 2.9.3 Task walk - 37 Task 5.1 Analysing pcap data proxy logs Android.Trojan.SLocker.DZ 39 2.10.1 Introduction 39 2.10.2 Tools used 39 2.10.3 Details 39 2.10.4 Task walk - 40 2.10 .5 Task walk - mitmproxy logs 42 Task 5.2 Analysing pcap data proxy logs iOS.Oneclickfraud 45 2.11.1 Introduction 45 2.11.2 Tools 45 2.11.3 Details 45 2.11.4 Test walk - 45 Task 6.1 Analysing Android.Trojan.SLocker.DZ 47 2.12.1 Introduction 47 2.12.2 T ools 47 2.12.3 Details 47 2.12.4 Task walk - 47 Task 6.2 Analysing iOS.Oneclickfraud 50 2.13.1 Introduction 50 2.13.2 Tools 50 2.13.3 Details 50 2.13.4 Task walk - 50 3 R eferences 52 Mobile Threats Incident Handling Part II 1.0 | September 2015 06 1 What Will You Learn ? Mobile forensic Mobile forensics set complex techniques aiming delivery digital evidence based data extracted mobile devices As utilises approaches technologies tools known computer forensics Some concepts solutions common others specifically mobile forensics Mobile forensic investiga tions digital forensic investigations general split several phases identification target mobile device seizure data acquisition examination analysis reasoning reporting Over course investigation ac tivity must documentation gather evidence properly securely stored This exercise focus following phases data acquisition excluding physical approach examination analysis terms mobile device contents application - sp ecific data malware network communications Network forensic Mobile network connectivity technologies like GSM UMTS LTE commonly used computer environments thus dealt special way lab situation One way use specialised commercial systems 4 available law enforcement agencies Alternatives open - source implementations management data forwarding applications combined software defined radio SDR hardware used cr eate closed mobile network suitable analysis T students given prepared samples malware traffic captured tcpdump 5 mitmproxy 6 analysis After exercise accompanying studies students aware tools tec hniques build environment capture analyse network traffic generated mobile malware Mobile malware reverse - engineering In exercise task analyse malicious applications developed mobile platforms Android iOS use variety tools identify information leading development countermeasures Extracting applications mobile device part exercise We demonstrate analysis two mobile malware applications Android.Trojan.SLocker.DZ Android iOS.Oneclickfraud using couple publically available tools make students acquainted 4 Cellular Intercept Cellular Monitoring technologies give Law Enforcement Government Agencies technological edge http //www.cellularintercept.com/ last accessed 2015 - 09 - 14 5 Tcpdump network traffic sniffer http //www.tcpdump.org/ last accessed 2015 - 09 - 14 6 MitM Proxy An interactive console program allows traffic flows intercepted inspected modified replayed https //mitmproxy.org/ last accessed 2015 - 09 - 14 Mobile Threats Incident Handling Part II 1.0 | September 2015 07 2 Exercise Task Task 2 1 Analysis sample application ' permissions Android device 2.1.1 Introduction In task students use native Linux instrument called AAPT 7 allows take look permissions sample application The AAPT tool used list add move resource files apt packages i.e Android applications If also dump specific data packages 2.1.2 Details In exercise directory /home/enisa/D2/2.6_T1 students find APK application file com.androidream.secretdiary.free.apk For analysis file students use pre - installed AAPT tool 2.1.3 Task walk - In section possible approach permissions ' analysis explained 2.1.3.1 Take look tool ' options running aapt Figure 1 2.1.3.2 Use command '' aapt permissions '' view permissions com.androidream.secretdiary.free.apk application Figure 2 7 Build System Overview http //developer.android.com/sdk/installing/studio - build.html last accessed 2015 - 09 - 14 Mobile Threats Incident Handling Part II 1.0 | September 2015 08 Compare permissions granted application available permissions Android application 8 nd describe specific application Task 2 .2 Analysis sample application ' Mach - header iOS device 2.2.1 Introduction In simple task students use tool called OTOOL allows take look Mach - O header sample iOS application This application available Mac OS X platform 2.2.2 Details You use otool sample iOS application You find information FAT header ide ntify supported CPU architecture run application It ' important know run application ' need ed put application sandbox 2.2.3 Task walk - Student need download .IPA file directly iPhone Internet After need unzip .IPA file check information FAT file header 2.2.3.1 Unzip .IPA file Figure 3 8 Android applications permissions http //developer.android.com/preview/features/runtime - permissions.html last accessed 2015 - 09 - 14 Mobile Threats Incident Handling Part II 1.0 | Septem ber 2015 09 2.2.3.2 Use otool check FAT header Figure 4 Compare FAT_M AGIC value Mach - O documentation 9 answer question binary 32 - bit platform 64 - bit platform binaries universal ? 32 - bit ARMv6 ARMv7 0xFEEDFACE 64 - bit 0xFEEDFACF Universal binaries 0xCAFEBABE Task 3 1 A quick evaluation knowledge regarding mobile devices Please answer following questions Only one answer correct question 1 What information contained IMEI number ? The manufacturer ' code b Name operator c The number home network None 2 The ICCID number The number identifying SIM card b The serial number SIM card c Number read without knowing PIN All 3 The IMSI identifies Subscriber b Phone c The SIM card 9 Universal Binaries 32 - bit/64 - bit PowerPC Binaries https //developer.apple.com/library/mac/documentation/DeveloperTools/Conceptual/MachORuntime/index.html # //apple_ref /c/tag/fat_header last accessed 2015 - 09 - 14 Mobile Threats Incident Handling Part II 1.0 | September 2015 10 The telephone 4 To disable communication capabilities seized mobile device turned Insert device overvoltage bag b Separate network pulling SIM card c Turn Put Faraday ' bag analyse soon possible 5 How check IMEI device turned ? By entering * # 06 # b By entering * # # 06 # c By entering * # 08 # By entering * # # 0 8 # 6 What '' post mortem '' extraction mean ? Device bricked b Device turned c Extraction damage device Device turned 7 How integrity electronic evidence e nsured ? By b urning extracted data read - medium b By checksum c By following chain custody All Task 4 1 Logical data extraction Android devices 2.4.1 Introduction In task students use AF Logical OSE tool make logical extraction Android device The trainer give short introduction usage Android AVD 's AF Logical OSE tool 2.4.2 Tools used AVD AF Logical OSE 2.4.3 Details Students prepare Android Virtual Machine Android AVD tool After 'll fill data Android Virtual Machine done students make logical extraction If problems creation Virtual Machine populating sample data students use AVD called Android_VM_ENISA 2.4.4 Task walk - The following steps explain make logical extraction Android device Mobile Threats Incident Handling Part II 1.0 | September 2015 11 2.4.4.1 Create new AVD machine Open Linux Terminal type android You see SDK Manage r window Navigate Tools go Manage AVDs Click Create create new AVD shown picture Figure 5 AVD Manager Figure 6 Create new AVD 2.4.4.2 Fill sample data e.g add con tacts try send SMS messages try call number open Internet browser save images internal memory send images MMS message Mobile Threats Incident Handling Part II 1.0 | September 2015 12 2.4.4.3 On Android Virtual Machine go Settings - > Developer options turn USB debugging F igure 7 Enable USB debugging 2.4.4.4 Run aflogical - ose command via terminal By running command push device small application tries download data device Figure 8 aflogical - ose command Mobile Threats Incident Handling Part II 1.0 | September 2015 13 2.4.4.5 On device 's screen seen types information downloading device memory Click capture wait `` Data extraction completed '' message appears Figure 9 2.4.4.6 Now need ge back terminal window press enter download data local hard disk Figure 10 aflogical - ose pull data device 2.4.4.7 After find folder called aflogical - data hard drive In folder find another folder named date time extraction go deeper find *.csv files resources downloaded phone Mob ile Threats Incident Handling Part II 1.0 | September 2015 14 Task 4 2 File system extraction Android devices 2.5.1 Introduction In task students use adb dd tool make file system extraction Android device The trainer give short introduction usage Android AV D ' used specific commands 2.5.2 Tools used AVD adb cat dd su sudo 2.5.3 Details Students hav e prepare Android Virtual Machine Android AVD tool After ' fill data Android Virtual Machine ' done students make logical extraction If problems creation Virtual Machine populating sample data students use AVD called Android_VM_ENISA 2.5.4 Task walk - 2.5.4.1 Firstly connect device usb enable usb debugging phone settings 2.5.4.2 To identify partition layout connect device adb shell list partitions /proc/partitions Mobile Threats Incident Handling Part II 1.0 | September 2015 15 Figure 11 /proc/partitions Mobile Threats Incident Handling Part II 1.0 | September 2015 16 2.5.4.3 Alternatively better understand mount points list partitions name Figure 12 Partitions By Name 2.5.4.4 Next extract system.img root sdcard Figure 13 Backup system.img file Mobile Threats Incident Handling Part II 1.0 | September 2015 17 2.5.4.5 Finally pull system.img locally investigate Figure 14 Task 4 3 Manual file carving 2.6.1 Introduction In task students use wxHexEditor tool perform file carving file system imaged Android device The trainer give short introduction usage th e wxHexEditor tells something file signatures 2.6.2 Tools used wxHexEditor 2.6.3 Details This exercise refers Task 2 Now students dumped partition Android Virtual Machin e goal find JPG file partition image 2.6.4 Task walk - A f ile signature data used identify verify content file In particular may called magic number identifies format file G enerally short sequence bytes magic numbers 2 4 bytes lo ng placed beginning file Manual file carving process reconstructing files scanning raw image disk looking file signatures contents reassembling This usually done examining header first bytes footer last bytes file Mobile Threats Incident Handling Part II 1.0 | September 2015 18 2.6.4.1 Open wxHexEditor typing Linux Terminal command wxHexEditor open one partition file clicking File - > Open Figure 15 2.6.4.2 You need find header JPG file FF D8 FF list known file signatures found Internet It important header bytes ahead ASCII string '' JFIF '' Use search tool `` Edit - > Find - > Find All '' directly wxHexEditor Figure 16 Mobile Threats Incident Handling Part II 1.0 | September 2015 19 2.6.4.3 Save offset address JPG file header Figure 17 2.6.4.4 Now need find hex value FF D9 JPEG files ' footer Try locate nearest occurrence header identified previous step Figure 18 Mobile Threats Incident Handling Part II 1.0 | September 2015 20 2.6.4.5 When find header trailer JPG file mark hexadecimal code header footer need know offset addresses Figure 19 2.6.4.6 Now choose '' Save As Dump '' save file TEST.JPG After able see picture It ' worth mention file carving done automatically commercial tools Micro Systemation ' XACT open - source ones e.g foremost Task 4 4 RAM emory dump Android device 2.7.1 Introduction In task students use tools make RAM memory extraction Android device After student use V olatility Autopsy tools analyse RAM dump file 2.7.2 Tool used Android SDK 10 Android NDK 11 LiME 12 Dwarfdump 13 Volatility 14 Autopsy 15 10 Android SDK http //developer.android.com/sdk/index.html last accessed 2015 - 09 - 14 11 Android NDK http //developer.android.com/tools/sdk/ndk/index.html last accessed 2015 - 09 - 14 12 LiME Linux Memory Extractor https //github.com /504ensicslabs/lime last accessed 2015 - 09 - 14 13 Libdwarf Dwarfdump http //wiki.dwarfstd.org/index.php ? title=Libdwarf_And_Dwarfdump last accessed 2015 - 09 - 14 14 Volatility RAM dump analyser https //code.google.com/p/volatility/wiki/ last accessed 2015 - 09 - 14 15 AutopsyÂ® digital forensics platform graphical interface The Sleuth KitÂ® oth er digital forensics tools http //www.sleuthkit.org/autopsy/ last accessed 2015 - 09 - 14 Mobile Threats Incident Handling Part II 1.0 | September 2015 21 2.7.3 Details This exercise explain P erform Android device memory forensics Volatility S et Android build environment C ross - compile Android kernel U se Android Em ulator A cquire memory Android devices LiME module B uild Volatility profile Android R un Volatility commands Android memory dumps 2.7.4 Task walk - 2.7.5 Dumping RAM memory git clone https //android.googlesource.com/kernel/goldfish Figure 20 Download kernel source code 2.7.5.1 The android kernel different versions split branches You check branches issuing git branch inside kernel source folder Figure 21 Kernel branches 2.7.5.2 For exercise android kernel version 2.6.29 going used To students going create new br anch named lime tracking 2.6.29 kernel source Issue following command git branch -- track lime remotes/origin/android - goldfish - 2.6.29 Mobile Threats Incident Han dling Part II 1.0 | September 2015 22 git checkout lime Figure 22 Create branch lime checkout 2.7.5.3 In order compile kernel need configuration file Usually configuration file kernel included OEM source Additionally kernel built device supports extracted pull ing /proc/config.gz file In case students use included configuration file arch/arm/configs/goldfish_armv7_defconfig First need set environment variables compile kernel shown enisa @ enisa - vm ~/goldfish $ export ARCH=arm enisa @ enisa - vm ~/goldfish $ export SUBARCH=arm enisa @ enisa - vm ~/goldfish $ export CROSS_COMPILE=/usr/share/android - ndk/toolchains/arm - linux - androideabi - 4.6/prebuilt/linux - x86_64/bin/arm - linux - androideabi - Mobile Threats Incident Handling Part II 1.0 | September 2015 23 2.7.5.4 Afterwards students create th e initial configuration file goldfish default configuration Figure 23 Initial config file creation 2.7.5.5 Next edit configuration file enable module loading Open .config file edit line 115 shown Figure 24 Configuration change Mobile Threats Incident Handling Part II 1.0 | September 2015 24 2.7.5.6 Compile kernel issuing make command When finished compiled kernel arch/arm/boot/zImage Figure 25 Kernel Compilation 2.7.5.7 Now start emulator k ernel compiled issuing following command enisa @ enisa - vm ~/goldfish $ emulator - avd Nexus - kernel arch/arm/boot/zImage 2.7.5.8 Next need download lime module compile enisa @ enisa - vm ~ $ git clone https //github.com/504ensicsLabs/LiME Figure 26 Download lime source 2.7.5.9 Edit Makefile accordingly enisa @ enisa - vm ~/LiME/src $ diff Makefile ~/Makefile 25a26,27 > KDIR_GOLDFISH = ~/goldfish > CCPATH =/usr/share/android - ndk/too lchains/arm - linux - androideabi - 4.6/prebuilt/linux - x86_64/bin/ 33,35c35,38 < $ MAKE - C /lib/modules/ $ KVER /build M= $ PWD modules < strip -- strip - unneeded lime.ko < mv lime.ko lime - $ KVER .ko -- - > $ MAKE ARCH=arm CROSS_COMPILE= $ CCPATH /arm - linux - androideabi - - C $ KDIR_GOLDFISH EXTRA_CFLAGS= - fno - pic M= $ PWD modules > mv lime.ko lime - goldfish.ko Then compile module issuing make Mobile Threats Incident Handling Part II 1.0 | September 2015 25 Figure 27 Module compilation 2.7.5.10 Next push compiled module running emulator et memory dump path Afterwards pull memory dump show Figure 28 LiMe memory dump 2.7.6 Examining emory ump Volatility 2.7.6.1 Build Volatility Profile Volatility uses profiles properly analyse RAM dump For Android already prepared profile called LinuxGolfish - 2_6_29ARM used If students want create profiles refer another exercise ENISA https //www.enisa.europa.eu/activities/cert/training/training - resources/documents/advanced - artifact - handling - handbook Section 2.2.2.3 Task 1.2.3 Building Volatility profile Mobile Threats Incident Handling Part II 1.0 | September 2015 26 2.7.6.2 Examine Memory Dump Volatility Since Android based Linux students use Linux - related Volatility commands 16 analyse memory dump Mostly used commands Android explained b elow The descriptions copied Volatility project website linux_pslist This plugin prints list active processes starting init_task symbol walking task_struct - > tasks linked list It display swapper process If DTB column blank item likely kernel thread Figure 29 linux_pslist linux_proc_maps This plugin prints details process memory including heaps stacks shared libraries 16 Volatility A command reference Linux https //code.google.com/p/volatility/wiki/LinuxCommandReference23 last accessed 2015 - 09 - 14 Mobile Threats Incident Handling Part II 1.0 | September 2015 27 Figure 30 linux_proc_maps linux_arp This plugin prints ARP table Figure 31 linux_arp linux_ifconfig This plugin prints active interface information including IPs interface name MAC address whether NIC promiscuous mode sniffing Figure 32 linux_ifconfig linux_route_cache This plugin enumerates data routing table cache It show systems machine communicated past Mobile Threats Incident Handling Part II 1.0 | September 2015 28 Figure 33 linux_route_cache linux_mount This plugins mimics output /proc/moun running Linux system For mountpoint prints flags mounted source drive network share etc director mounted Fi gure 34 linux_mount 2.7.7 Using Autopsy The Autopsy allows analyse files extracted Android device It supports p hysical dumps Android devices please note exercise physical acquisition methods explained well raw memory dump files Mobile Threats Incident Handling Part II 1.0 | September 2015 29 2.7.7.1 To run Autopsy need start Autopsy service root user Figure 35 2.7.7.2 When service started open web browser type address http //localhost:9999/autopsy Figure 36 Mobile Threats Incident Handling Part II 1.0 | Septem ber 2015 30 2.7.7.3 To create new case click NEW CASE To open existing one click OPEN CASE When create new case fill information '' Case name '' '' Investigator names '' Description optional Figure 37 2.7.7.4 Next ' prompted add host i.e device subject investigation Figure 38 Mobile Threats Incident Handling Part II 1.0 | September 2015 31 Figure 39 2.7.7.5 Next ' prompted add image host device Figure 40 Mobile Threats Incident Handling Part II 1.0 | September 2015 32 Figure 41 2.7.7.6 Next step choose proper file system added image Choose '' raw '' RAM memory dump Figure 42 Mobile Threats Incident Handling Part II 1.0 | September 2015 33 2.7.7.7 Once completed ' presented following screen allows run analysis add another image file close file among options check image ' integrity Figure 43 2.7.7.8 Since image subject analysis raw image functionalities may available As example try search keyword '' @ enisa.europa.eu '' case used e - mail address set Android system Try locate e - mail account ' password Figure 44 Mobile Threats Incident Handling Part II 1.0 | September 2015 34 Figure 45 Task 4 5 iOS Phone Backup Analyser 2 2.8.1 Introduction In task studen ts given set f iles iTunes backup system analysis Phone Backup Analyser 2 PBA2 This software allows user browse content iPhone/iPad backup made iTunes software able perform iOS devices ' ba ckup 2.8.2 Details As explained PBA2 project website parses backup directory shows decoded file system tree Each file clicked see properties Real name name backup directory File UNIX permissions Data hash calculated iOS User group ID Modify time access time creation time File type magic numbers Any built - viewer allow bro wse known file formats e.g ASCII viewer PLIST structure browser SQLITE browser HEX viewer 2.8.3 Task walk - This section explain possible ways analysis data stored iOS backup Mobile Threats Incident Handling Part II 1.0 | September 2015 35 2.8.3.1 Open PBA2 open folder ef2662a6b74953ed19d5aa3c25cfcd0019ed43ee Figure 46 2.8.3.2 You use predefined PLUGINS view data cr eate reports predefined REPORTS tools 2.8.3.3 Take look following option CameraRollDomain - > Media/DCIM/100APPLE Figure 47 Mobile Threats Incident Handling Part II 1.0 | September 2015 36 2.8.3.4 You view even export simple JPG file backup Please export JPG files backup 2.8.3.5 Let ' take look JPG files exported another tool called exiftool This software allows read EXIF data Try locate GPS co - ordinates Figure 48 2.8.3.6 Now able see GPS position imag e file presumably taken Open website allows search GPS position e.g https //maps.google.com co - ordinates search field You need change word '' deg '' degree symbol i.e Â° combination ALT + 248 keyboard Figure 49 Mobile Threats Incident Handling Part II 1.0 | September 2015 37 2.8.3.7 Now take look AppDomain This list installed applications Locate folder Documents application WhatsApp net.wshatsapp.WhatsApp Here find SQLite databases used WhatsApp instant messenger Open database called ChatStorage.sqlite SQLite viewer Try find ZWAMESSAGE table contains messages history Figure 50 Task 4 6 Brute - forcing Android encryption mechanisms 2.9.1 Introduction In task students try process cracking PIN used encrypt Android device Ice Cream Sandwich Jelly Bean us ing brute force methods 2.9.2 Details Students prepare recovery partition Android device After able download necessary files used cracking process 2.9.3 Task walk - This section show possible approach es brute - force attacks PIN - based encryption Android device s. The task requ ires students use physical device since AVD emulators ' support fastboot mode Mobile Threats Incident Handling Part II 1.0 | September 2015 38 2.9.3.1 First need put phone recovery mode boot custom recovery image If device already custom recovery image root address insta lled skip step There ' easy way accomplish adb If device adb enabled simply connect PC make sure pass running virtual machine run terminal issue following command Figure 51 2.9.3.2 Next boot device rooted recovery image For purpose Clockwork Mod 17 image used use device - compatible recovery image root adb enabled Please note saved reco image From terminal run fastboot make sure communicate device Figure 52 2.9.3.3 Now checked communicate device fastboot boot using recovery image Figure 53 2.9.3.4 Your device recovery mode Next pull needed necessary header footer data brute - force encryption PIN Their location varies device device choose steps particular de vice type Figure 54 17 ROM Manager ROMs Recovery Images http //www.clockworkmod.com/rommanage last accessed 2015 - 09 - 14 Mobile Threa ts Incident Handling Part II 1.0 | September 2015 39 2.9.3.5 Now everything need ' run Android Brute Force Encryption cracking program header footer files By default 4 - digit numeric passcodes used chang e number digits remembering longer PIN time necessary brute - force Figure 55 After able see PIN code Task 5 1 Analysing pcap data proxy logs Android.Trojan.SLocker.DZ 2.10.1 Introduction In task students given set files PCAP mitmproxy created observing activity Android device infected Android.Trojan.Slocker.DZ ransomware The students use Wireshark text editor choice search patterns indicating malicious behaviour analyse describe 2.10.2 Tools used Wireshark MITMProxy 2.10.3 Details There two files traces subdirectory exercise environment na med F836F5C6267F13BF9F6109A6B8D79175.pcap F836F5C6267F13BF9F6109A6B8D79175.log Mobile Threats Incident Handling Part II 1.0 | September 2015 40 2.10.4 Task walk - This section contain possible ways analyse given information identify answers requests table 2.10.4.1 Open PCAP file Wir eshark After loading PCAP file see list packets captured Only subset packets part malware communication identify use tools Wireshark provides Figure 56 Mobile Threats Incident Handling Part II 1.0 | September 2015 41 2.10.4.2 Op find conversations contained network traffic dump accompanied additional information regarding starting point time amount data transferred duration connection This show malicious traffic delivers overview details regarding information analysed Figure 57 2.10.4.3 IPv4 In list geo - location conversation endpoints added list Figure 58 Mobile Threats Incident Handling Part II 1.0 | September 2015 42 2.10.4.4 given clear indicator malicious behaviour even hint connections inspected detail Thus try dig deeper fin information regarding protocols used dump In case ' find interesting information regarding JSON data transmitted clear - text Figure 59 2.10.4.5 Apply filter captured traffic Right - click Selected 2.10.4.6 Use TCP stream analysis Right - - readable presentation HTTP traffic Indicators malicious traffic clearly identified e xample deception phrase payload first server response Figure 60 2.10.5 Task walk - mitmproxy logs For creation following screenshots Honeyproxy 18 used The project based MITMProxy cr eates web interface inspect analyse traffic captured Unfortunately active development time preparation exercise 18 HoneyProxy man - - - middle SSL proxy & traffic analyser http //honeyproxy.org/ last accessed 2015 - 09 - 14 Mobile Threats Incident Handling Part II 1.0 | September 2015 43 2.10.5.1 Overview web interface captured data Figure 61 2.10.5.2 Cl ose view malware requests Figure 62 2.10.5.3 Request showing message displayed victim Figure 63 Mobile Threats Incident Handling Part II 1.0 | September 2015 44 2.10.5.4 Request showing transmitted information Figure 64 Mobile Threats Incident Handling Part II 1.0 | September 2015 45 Task 5 2 Analysing pcap data proxy logs iOS.Oneclickfraud 2.11.1 Introduction In task students given set files PCAP mitmproxy created observing activity iOS device infected iOS.Oneclickfraud malware The students u se Wireshark text editor choice search patterns indicating malicious behaviour analyse describe 2.11.2 Tools Wireshark 2.11.3 Details There two files traces subdirectory exercise environment named 71972F763EB5EAE B87681D2615E9E68E.pcap 71972F 763EB5EAEB87681D2615E9E68E.log 2.11.4 Test walk - The general approach identify malign traffic PCAP file identic al T ask 5 1 Following show screenshots unique T ask 5 2 There walk - proxy logs server responding malware requests 2.11.4.1 List conversati ons Figure 65 Mobile Threats Incident Handling Part II 1.0 | September 2015 46 2.11.4.2 List endpoints Figure 66 2.11.4.3 TCP Stream Figure 67 Mobile Threats Incident Handling Pa rt II 1.0 | September 2015 47 Task 6 1 Analysing Android.Trojan.SLocker.DZ 2.12.1 Introduction In task students analyse Android.Trojan.SLocker.DZ APK file They answer couple questions lead identification various characteristics trojan malware 2.12.2 Tools AndroGuard apktool 2.12.3 Details In exercise directory students find APK file F836F5C6267F13BF9F6109A6B8D79175.apk For analysis file use pre - installed AndroGuard apktool text editor choice several available system In next section students find questions answer analysis identify th e behaviour application 2.12.4 Task walk - In section walk possible approach analyse malware extract requested information 2.12.4.1 Decode APK file following command apktool F836F5C6267F13BF9F6109A6B8D79175.apk - F836F5C6267F13BF9F6109A6B8D79175 Figure 68 2.12.4.2 Search p ermissions AndroidManifest grep permission F836F5C6267F13BF9F6109A6B8D79175/AndroidManifest.xml Figure 69 Mobile Threats Incident Handling Part II 1.0 | September 2015 48 Figure 70 2.12.4.3 Search package name AndroidManifest grep package F836F5C6267F 13BF9F6109A6B8D79175/AndroidManifest.xml Figure 71 2.12.4.4 Search intents AndroidManifest Figure 72 Mobile Threats Incident Handling Part II 1.0 | September 2015 49 2.12.4.5 Control assets directory Figure 73 2.12.4.6 View contents HTML file w3m F836F5C6267F13BF9F6109A6B8D79175/assets/tab1.html Figure 74 2.12.4.7 Search IP addresses dataset grep - Eor ' 0 - 9 { 1,3 } \ 0 - 9 { 1,3 } \ 0 - 9 { 1,3 } \ 0 - 9 { 1,3 } ' F836F5C6267F13BF9F6109A6B8D79175/* Figure 75 Mobile Threats Incident Handling Part II 1.0 | September 2015 50 2.12.4.8 Inspect strings.xml file less F836F5C6267F13BF9F6109A6 B8D79175/res/values/strings.xml Figure 76 Task 6 2 Analysing iOS.Oneclickfraud 2.13.1 Introduction In task students use class - dump - z analys e iOS.Oneclickfraud As Task 6 1 answer questions regarding characteristics The trainer give short introduction usage disassembler 2.13.2 Tools class - dump - z 2.13.3 Details In exercise directory students w ill find iOS application file 71972F763EB5EAEB87681D2615E9E68E For analysis file use pre - installed class - dump - z disassembler In next section find questions answer analysis iden tify th e behaviour application 2.13.4 Task walk - In section possible approach analyse malware extract requested information shown Mobile Threats Incident Handling Part II 1.0 | Sep tember 2015 51 2.13.4.1 Identify file unzip file 71972F763EB5EAEB87681D2615E9E68E unzip 71972F7 63EB5EAEB87681D2615E9E68E Figure 77 2.13.4.2 Use strings gather information strings - Payload/EroEroMovie.app/embedded.mobileprovision Figure 78 Figure 79 Figure 80 Mobile Threats Incident Handling Part II 1.0 | September 2015 52 3 References Build System Overview http //developer.android.com/sdk/installing/studio - build.html Android applications permissions http //developer.android.com/preview/features/runtime - permissions.html Universal Binaries 32 - bit/64 - bit PowerPC Binaries https //developer.apple.com/library/mac/documentation/DeveloperTools/Conceptual/MachORuntim e/index.html # //apple_ref/c/tag/fat_header File signatures table http //www.garykessler.net/library/file_sigs.html Android SDK http //developer.android.com/sdk/index.html Android NDK http //developer.android.com/tools/sdk/ndk/index.html LiME Linux Memory Extractor https //github.com/504ensicslabs/lime Libdwarf Dwarfdump http //wiki.dwarfstd.org/index.php ? title=Libdwarf_And_Dwarfdump Build Volatility Profile https //code.google.com/p/volatility/wiki/AndroidMemoryForensics # Build_a_Volatility_Profile Volatility RAM dump analyser https //code.google.com/p/volatility/wiki/ AutopsyÂ® digital forensics platform graphical interface The Sleuth KitÂ® digital forensics tools http //ww w.sleuthkit.org/autopsy/ LiME Linux Memory Extractor https //github.com/504ensicslabs/lime Volatility A command reference Linux https //code.google.com/p/volatility/wiki/LinuxCommandReference23 ROM Manager ROMs Recovery Images http //www.clockworkmod.com/rommanage HoneyProxy man - - - middle SSL proxy & tr affic analyser http //honeyproxy.org/ ENISA European Union Agency Network Information Security Science Technology Park Crete ITE Vassilika Vouton 700 13 Heraklion Greece Athens Office 1 Vass Sofias & Meg Alexandrou Marousi 151 24 Athens Greece PO Box 1309 710 01 Heraklion Greece Tel +30 28 14 40 9710 info @ enisa.europa.eu www.enisa.europa.eu 